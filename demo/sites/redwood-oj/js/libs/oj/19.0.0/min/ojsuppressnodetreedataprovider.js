/**
 * @license
 * Copyright (c) 2014, 2025, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["exports","ojs/ojeventtarget","ojs/ojdataprovider"],function(t,e,s){"use strict";
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */class r{constructor(t,e){var r,a;this.treeDataProvider=t,this.options=e,this.SuppressNodeTreeAsyncIterable=(a=class{constructor(t,e){this._parent=t,this._asyncIterator=e,this[r]=()=>new this._parent.SuppressNodeTreeAsyncIterator(this._parent,this._asyncIterator)}},r=Symbol.asyncIterator,a),this.SuppressNodeTreeAsyncIterator=class{constructor(t,e,s){this._parent=t,this._baseIterator=e,this._params=s}_fetchNext(){return this._baseIterator.next()}next(){const t=this._params?.signal;return s.wrapWithAbortHandling(t,t=>t(this._fetchNext().then(t=>this._parent._suppressNodeIfEmptyChildrenFirst(t))),!1)}},this.AsyncIteratorYieldResult=class{constructor(t){this.value=t,this.done=!1}},this.AsyncIteratorReturnResult=class{constructor(t){this.value=t,this.done=!0}},this.FetchListResult=class{constructor(t,e,s,r){this.fetchParameters=t,this.data=e,this.metadata=s,this.totalFilteredRowCount=r}},this.FetchByOffsetResults=class{constructor(t,e,s){this.fetchParameters=t,this.results=e,this.done=s}},this.Item=class{constructor(t,e){this.metadata=t,this.data=e}},this._addEventListeners(t)}containsKeys(t){return this.treeDataProvider.containsKeys(t)}getCapability(t){return this.treeDataProvider.getCapability(t)}getTotalSize(){return this.treeDataProvider.getTotalSize()}isEmpty(){return this.treeDataProvider.isEmpty()}createOptimizedKeySet(t){return this.treeDataProvider.createOptimizedKeySet(t)}createOptimizedKeyMap(t){return this.treeDataProvider.createOptimizedKeyMap(t)}getChildDataProvider(t){const e=this.treeDataProvider.getChildDataProvider(t);return null===e?null:new r(e,this.options)}fetchFirst(t){const e=this.treeDataProvider.fetchFirst(t);return new this.SuppressNodeTreeAsyncIterable(this,e[Symbol.asyncIterator]())}fetchByOffset(t){const e=t?.signal;return s.wrapWithAbortHandling(e,e=>e(this.treeDataProvider.fetchByOffset(t).then(t=>this._suppressNodeIfEmptyChildrenByOffset(t))),!1)}fetchByKeys(t){const e=t?.signal;return s.wrapWithAbortHandling(e,e=>e(this.treeDataProvider.fetchByKeys(t)),!1)}_suppressNodeIfEmptyChildrenByOffset(t){if(t.results&&this.options&&"ifEmptyChildren"==this.options.suppressNode){const e=[],s=[];return new Promise(r=>{for(let e=0;e<t.results.length;e++){const r=t.results[e];s[e]=this._suppressChild(r.metadata.key,t.fetchParameters?t.fetchParameters.filterCriterion:null)}return Promise.all(s).then(s=>{for(let r=0;r<s.length;r++)!1===s[r]&&e.push(new this.Item(t.results[r].metadata,t.results[r].data));return r(e)})}).then(e=>new this.FetchByOffsetResults(t.fetchParameters,e,t.done))}return Promise.resolve(t)}_suppressNodeIfEmptyChildrenFirst(t){const e=[];if(!t.done&&this.options&&"ifEmptyChildren"==this.options.suppressNode){return new Promise(s=>{if(t&&t.value&&t.value.data){const r=t.value.metadata,a=t.value.data,i=[];for(let s=0;r&&s<r.length;s++)e[s]=this._suppressChild(r[s].key,t.value.fetchParameters?t.value.fetchParameters.filterCriterion:null);return Promise.all(e).then(e=>{for(let s=0;s<e.length;s++)!1===e[s]&&i.push({data:a[s],metadata:r[s],totalFilteredRowCount:t.value.totalFilteredRowCount});return s(i)})}return{data:t.value.data,metadata:t.value.metadata,totalFilteredRowCount:t.value.totalFilteredRowCount}}).then(e=>{const s=[],r=[];for(const t of e)s.push(t.data),r.push(t.metadata);return new this.AsyncIteratorYieldResult(new this.FetchListResult(t.value.fetchParameters,s,r,t.value.totalFilteredRowCount))})}return Promise.resolve(t)}_suppressChild(t,e){const s=this.getChildDataProvider(t);return null==s||"yes"===s.isEmpty()?Promise.resolve(null!==s):e?s.fetchByOffset({offset:0,filterCriterion:e}).then(t=>!(t&&t.results&&t.results.length>0)):"unknown"===s.isEmpty()?s.fetchByOffset({offset:0,size:1}).then(t=>!(t&&t.results&&t.results.length>0)):Promise.resolve(!1)}_addEventListeners(t){t.addEventListener("refresh",t=>{this.dispatchEvent(t)}),t.addEventListener("mutate",t=>{this.dispatchEvent(t)})}}e.EventTargetMixin.applyMixin(r),t.SuppressNodeTreeDataProvider=r,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ojsuppressnodetreedataprovider.js.map