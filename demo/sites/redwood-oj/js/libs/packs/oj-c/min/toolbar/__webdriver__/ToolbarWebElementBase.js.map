{"version":3,"file":"ToolbarWebElementBase.js","sourceRoot":"","sources":["ToolbarWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,qBAAsB,SAAQ,uBAAY;IACrD;;;;;OAKG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAS,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;OAKG;IACI,eAAe;QACpB,OAAO,IAAI,CAAC,WAAW,CAAS,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,sBAAsB,CAAC,gBAAwB;QACpD,OAAO,IAAI,CAAC,WAAW,CAAS,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;IACxE,CAAC;IAED;;;;;OAKG;IACI,mBAAmB;QACxB,OAAO,IAAI,CAAC,WAAW,CAAS,kBAAkB,CAAC,CAAC;IACtD,CAAC;CACF;AAlDD,sDAkDC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-toolbar WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, ToolbarWebElement.ts.\n */\nexport class ToolbarWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>spacing</code> property.\n   * Specifies the spacing between content. 'sm' spacing is recommended for button variants that don't have a background or border, for example borderless buttons. 'lg' spacing is recommended for button variants that have a background or border, for example outlined or solid buttons.\n   * @return The value of <code>spacing</code> property.\n   *\n   */\n  public getSpacing(): Promise<string> {\n    return this.getProperty<string>('spacing');\n  }\n\n  /**\n   * Gets the value of <code>chroming</code> property.\n   * Specifies the chroming to be set on content to be placed into the toolbar.\n   * @return The value of <code>chroming</code> property.\n   *\n   */\n  public getChroming(): Promise<string> {\n    return this.getProperty<string>('chroming');\n  }\n\n  /**\n   * Gets the value of <code>size</code> property.\n   * Specifies the size of content to be placed into the toolbar.\n   * @return The value of <code>size</code> property.\n   *\n   */\n  public getSizeProperty(): Promise<string> {\n    return this.getProperty<string>('size');\n  }\n\n  /**\n   * Sets the value of <code>toolbarSelection</code> property.\n   * An array containing key/value objects for selection groups.\n   * @param toolbarSelection The value to set for <code>toolbarSelection</code>\n   *\n   */\n  public changeToolbarSelection(toolbarSelection: object): Promise<void> {\n    return this.setProperty<object>('toolbarSelection', toolbarSelection);\n  }\n\n  /**\n   * Gets the value of <code>toolbarSelection</code> property.\n   * An array containing key/value objects for selection groups.\n   * @return The value of <code>toolbarSelection</code> property.\n   *\n   */\n  public getToolbarSelection(): Promise<object> {\n    return this.getProperty<object>('toolbarSelection');\n  }\n}\n"]}