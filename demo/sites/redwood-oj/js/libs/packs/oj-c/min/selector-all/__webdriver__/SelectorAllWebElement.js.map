{"version":3,"file":"SelectorAllWebElement.js","sourceRoot":"","sources":["SelectorAllWebElement.ts"],"names":[],"mappings":";;;AAAA,2DAAwC;AACxC,2EAAwE;AAExE;;;;GAIG;AACH,MAAa,qBAAsB,SAAQ,qDAAyB;IAClE,qBAAqB;IAErB;;;;;;;OAOG;IACH,KAAK,CAAC,UAAU;QACd,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAChD,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9C,CAAC;CACF;AAhBD,sDAgBC","sourcesContent":["import { By } from 'selenium-webdriver';\nimport { SelectorAllWebElementBase } from './SelectorAllWebElementBase';\n\n/**\n * The component WebElement for [oj-c-selector-all](../../jsdocs/oj-c.SelectorAll.html).\n * Do not instantiate this class directly, instead, use\n * [findSelectorAll](../functions/findSelectorAll.html).\n */\nexport class SelectorAllWebElement extends SelectorAllWebElementBase {\n  // Put overrides here\n\n  /**\n   * Gets the selected value of the selector.\n   * @return boolean selection checked state.\n   * Note test authors should not use this method to check whether an item is selected\n   * when this is used with ListView or other collection components.\n   * Rather, tests should use the test adapter method on ListView (or other collection) to get the selection\n   * and check whether the item key is in it.\n   */\n  async isSelected(): Promise<boolean> {\n    const checkbox = await this.findElement(By.xpath('.//input'));\n    const l = checkbox.getAttribute('aria-checked');\n    return (await l) === 'false' ? false : true;\n  }\n}\n"]}