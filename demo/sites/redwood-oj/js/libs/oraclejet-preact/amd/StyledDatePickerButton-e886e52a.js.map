{"version":3,"file":"StyledDatePickerButton-e886e52a.js","sources":["../../src/PRIVATE_StyledDatePickerButton/StyledDatePickerButton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { multiVariantStyles } from './themes/StyledDatePickerButtonStyles.css';\nimport { styles as baseButtonStyles } from '../UNSAFE_BaseButton/themes/BaseButtonStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { forwardRef } from 'preact/compat';\nimport type { Ref, JSX } from 'preact';\nimport type { UnpackSignals } from '@oracle/oraclejet-internal-utilities/attributeUtils';\n\ntype IntrinsicProps = Pick<UnpackSignals<JSX.HTMLAttributes<HTMLElement>>, 'onClick' | 'onKeyDown'>;\n\ntype AriaProps = {\n  'aria-label'?: UnpackSignals<JSX.AriaAttributes>['aria-label'];\n  'aria-disabled'?: UnpackSignals<JSX.AriaAttributes>['aria-disabled'];\n};\n\ntype Props = IntrinsicProps &\n  AriaProps & {\n    /**\n     * Specifies that the button appears activated when the user activates the StyledDatePickerButton.\n     * When true, adds the :active selector to the button so that it can show active styling.\n     * Combine this property with the other properties to get the styling you want.\n     */\n    isActivable?: boolean;\n    /**\n     * Specifies the styling of the button to look dimmed.\n     * Combine this property with the other properties to get the styling you want.\n     */\n    isDimmed?: boolean;\n    /**\n     * Specifies the styling of the button to look hidden, that is, visibility: hidden.\n     */\n    isHidden?: boolean;\n    /**\n     * Specifies that the button appears hovered when the user hovers over the StyledDatePickerButton.\n     * When true, adds the :hover selector to the button so that it can show hover styling.\n     * Combine this property with the other properties to get the styling you want.\n     */\n    isHoverable?: boolean;\n    /**\n     * Specifies the styling of the button to look like a day that is adjacent to the current month.\n     * Combine this property with the other properties to get the styling you want.\n     */\n    isAdjacentMonth?: boolean;\n    /**\n     * Specifies the role of the day cell to be 'button' when isReadonly is false, or no role when isReadonly is true.\n     * This helps the screenreader.\n     */\n    isReadonly?: boolean;\n    /**\n     * Specifies the styling of the button to look like it is restricted.\n     * Combine this property with the other properties to get the styling you want.\n     */\n    isRestricted?: boolean;\n    /**\n     * Specifies the styling of the button to look like it is selected.\n     * Combine this property with the other properties to get the styling you want.\n     */\n    isSelected?: boolean;\n    /**\n     * Specifies the styling of the button to look like it is today.\n     * Combine this property with the other properties to get the styling you want.\n     */\n    isToday?: boolean;\n    /**\n     * Specifies the label of the day button. This will be the day of the month.\n     */\n    label: string;\n    /**\n     * Specifies the tabIndex.\n     */\n    tabIndex?: 0 | -1;\n    /**\n     * Specifies the visual variant for the StyledDatePickerButton.\n     */\n    variant?: 'day' | 'month' | 'year';\n  };\n\n/**\n * StyledDatePickerButton is a controlled component that displays a stylized span for a button that goes into a DatePicker.\n */\nconst StyledDatePickerButton = forwardRef(\n  (\n    {\n      isActivable = false,\n      isReadonly = false,\n      isAdjacentMonth = false,\n      isDimmed = false,\n      isHidden = false,\n      isHoverable = false,\n      isRestricted = false,\n      isSelected = false,\n      isToday = false,\n      tabIndex,\n      label,\n      variant,\n      ...props\n    }: Props,\n    ref: Ref<HTMLSpanElement> = null\n  ) => {\n    // The multiVariantStyles function is defined in StyledDatePickerButtonStyles.css.ts,\n    // using the recipe utility provided by @vanilla-extract/recipes.\n    // This function is used to merge the base styles, variants, and compound variants\n    // into a single set of styles for components based on the component's properties.\n    const variantClasses = multiVariantStyles({\n      active: isActivable ? 'isActivable' : 'notActiveable',\n      dimmed: isDimmed ? 'isDimmed' : 'notDimmed',\n      hidden: isHidden ? 'isHidden' : 'notHidden',\n      hover: isHoverable ? 'isHoverable' : 'notHoverable',\n      adjacentMonth: isAdjacentMonth ? 'isAdjacentMonth' : 'notAdjacentMonth',\n      restricted: isRestricted ? 'isRestricted' : 'notRestricted',\n      selected: isSelected ? 'isSelected' : 'notSelected',\n      today: isToday ? 'isToday' : 'notToday',\n      variant\n    });\n\n    const classes = classNames([\n      baseButtonStyles.base,\n      baseButtonStyles.sizes.sm,\n      baseButtonStyles.styled,\n      variantClasses\n    ]);\n    return (\n      <span\n        role={!isReadonly ? 'button' : undefined}\n        class={classes}\n        ref={ref}\n        tabIndex={tabIndex}\n        {...props}>\n        {label}\n      </span>\n    );\n  }\n);\n\nexport { StyledDatePickerButton };\n"],"names":["StyledDatePickerButton","forwardRef","isActivable","isReadonly","isAdjacentMonth","isDimmed","isHidden","isHoverable","isRestricted","isSelected","isToday","tabIndex","label","variant","props","ref","variantClasses","multiVariantStyles","active","dimmed","hidden","hover","adjacentMonth","restricted","selected","today","classes","classNames","baseButtonStyles","base","styles","sizes","sm","styled","_jsx","role","undefined","class","children"],"mappings":"iPAuFM,MAAAA,EAAyBC,EAAAA,YAC7B,EAEIC,eAAc,EACdC,cAAa,EACbC,mBAAkB,EAClBC,YAAW,EACXC,YAAW,EACXC,eAAc,EACdC,gBAAe,EACfC,cAAa,EACbC,WAAU,EACVC,WACAC,QACAC,aACGC,GAELC,EAA4B,QAM5B,MAAMC,EAAiBC,EAAAA,mBAAmB,CACxCC,OAAQhB,EAAc,cAAgB,gBACtCiB,OAAQd,EAAW,WAAa,YAChCe,OAAQd,EAAW,WAAa,YAChCe,MAAOd,EAAc,cAAgB,eACrCe,cAAelB,EAAkB,kBAAoB,mBACrDmB,WAAYf,EAAe,eAAiB,gBAC5CgB,SAAUf,EAAa,aAAe,cACtCgB,MAAOf,EAAU,UAAY,WAC7BG,YAGIa,EAAUC,EAAAA,WAAW,CACzBC,EAAAA,OAAiBC,KACjBD,EAAgBE,OAACC,MAAMC,GACvBJ,EAAAA,OAAiBK,OACjBjB,IAEF,OACEkB,EAAAA,IAAA,OAAA,CACEC,KAAOhC,OAAwBiC,EAAX,SACpBC,MAAOX,EACPX,IAAKA,EACLJ,SAAUA,KACNG,EAAKwB,SACR1B,GAEH"}