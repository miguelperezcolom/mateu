define(['exports', './getFormatParse-7ea0c25b', './logger-0f873e29', './calendarDateUtils-dd5b75ee'], (function(e,t,a,r){"use strict";const n=/\d/,s=new Map;e.calendarDatesAreDifferent=(e,t)=>{const a=!e||!e.day&&!e.month&&!e.year,r=!t||!t.day&&!t.month&&!t.year;if(a&&r)return!1;if(a&&!r||!a&&r)return!0;const n=e?.day,s=e?.month,o=e?.year,l=t?.day,d=t?.month,u=t?.year;return n!==l||s!==d||o!==u},e.getMonthName=(e,a,n,o)=>{"*"!==n&&r.checkIsValidIsoYear(n),r.checkNoCalendarExtension(e);let l=s.get(`${e}-${o}`);l||(l=((e,a)=>{const r=t.CalendarUtils.getCalendar(e,"gregory"),n={short:"abbreviated",narrow:"narrow",long:"wide"}[a];return r.months["stand-alone"][n]})(e,o),s.set(`${e}-${o}`,l));return l[""+a]},e.getTodayAsCalendarDate=()=>{const e=new Date;return{year:e.getFullYear(),month:e.getMonth()+1,day:e.getDate()}},e.isNumberOnlyString=e=>n.test(e),e.translateCustomMasks=(e,t,a,r)=>e.map((e=>{switch(e.type){case"month":return{...e,value:t};case"day":return{...e,value:a};case"year":return{...e,value:r};default:return{...e,value:e.value.trim()}}}))}));
//# sourceMappingURL=maskUtils-8e7a7701.js.map
