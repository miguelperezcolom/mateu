{"version":3,"file":"SectionedContent-bae8af88.js","sources":["../../src/PRIVATE_FormControls/StickyPositioningDropdown.tsx","../../src/PRIVATE_FormControls/SectionedContent.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\nimport { useCallback } from 'preact/hooks';\nimport { useState } from 'preact/hooks';\nimport { Dropdown } from '#UNSAFE_Dropdown';\nimport { PositionData } from '../UNSAFE_Floating';\n\ntype DropdownProps = ComponentProps<typeof Dropdown>;\ntype Props = Pick<\n  DropdownProps,\n  | 'anchorRef'\n  | 'children'\n  | 'flipOptions'\n  | 'id'\n  | 'initialFocus'\n  | 'isOpen'\n  | 'minWidth'\n  | 'offset'\n  | 'onClose'\n  | 'onPosition'\n  | 'sizeOptions'\n>;\n\nconst DEFAULT_PLACEMENT = 'bottom-start';\n\n/**\n * StickyPositioningDropdown is used to display content which supports conditional rendering,\n * or other cases where the size of the content can change and cause the dropdown to rerender\n * in a different placement. This component ensures the repositioning happens only once,\n * until there is a collision, instead of allowing the dropdown to keep trying to\n * move back to its default position on every render.\n */\nconst StickyPositioningDropdown = ({ children, isOpen, onPosition, ...rest }: Props) => {\n  const [placement, setPlacement] = useState<DropdownProps['placement']>(DEFAULT_PLACEMENT);\n  const [prevIsOpen, setPrevIsOpen] = useState(isOpen);\n\n  if (prevIsOpen !== isOpen) {\n    setPrevIsOpen(isOpen);\n\n    // reset the placement to the default when the dropdown closes, not opens, so that it doesn't\n    // initially open in the previous position and then move to the default position on the\n    // rerender after the state is updated\n    if (!isOpen) {\n      setPlacement(DEFAULT_PLACEMENT);\n    }\n  }\n  const handlePosition = useCallback(\n    (positionData: PositionData) => {\n      // update the placement so that the dropdown stays where it is until there is a collision,\n      // i.e. it no longer fits, instead of letting it try to move back to the default position\n      // on every render\n      setPlacement(positionData.placement);\n\n      // call the callback that was passed in through props\n      onPosition?.(positionData);\n    },\n    [onPosition, setPlacement]\n  );\n\n  return (\n    <Dropdown isOpen={isOpen} onPosition={handlePosition} placement={placement} {...rest}>\n      {children}\n    </Dropdown>\n  );\n};\n\nexport { StickyPositioningDropdown };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { ComponentChildren, ComponentProps, RefObject, JSX } from 'preact';\nimport { useCallback, useRef } from 'preact/hooks';\nimport type { UnpackSignals } from '@oracle/oraclejet-internal-utilities/attributeUtils';\nimport { Flex } from '#UNSAFE_Flex';\nimport { FocusTrap } from '#UNSAFE_FocusTrap';\nimport { KEYS } from '#utils/PRIVATE_keyboardUtils';\nimport { PaddingProps } from '#utils/UNSAFE_interpolations/padding';\nimport { TestIdProps, useTestId } from '#hooks/UNSAFE_useTestId';\nimport { View } from '#UNSAFE_View';\n\ntype FlexProps = ComponentProps<typeof Flex>;\n\ntype Props = TestIdProps & {\n  /**\n   * An accessible label that describes the content.\n   */\n  'aria-label'?: UnpackSignals<JSX.AriaAttributes>['aria-label'];\n\n  /**\n   * A ref to the content container.\n   */\n  contentRef?: RefObject<HTMLDivElement>;\n\n  /**\n   * Child content in the footer section.\n   */\n  footer?: ComponentChildren;\n\n  /**\n   * The spacing between the sections.\n   */\n  gap?: FlexProps['gap'];\n\n  /**\n   * True if the tab key should cycle focus within the content.\n   * @default false\n   */\n  hasFocusTrap?: boolean;\n\n  /**\n   * Child content in the header section.\n   */\n  header?: ComponentChildren;\n\n  /**\n   * Child content in the main section.\n   */\n  main?: ComponentChildren;\n\n  /**\n   * The padding between the footer or bottom edge and the main content.\n   * @default '4x'\n   */\n  paddingBlockEnd?: PaddingProps['paddingBlockEnd'];\n\n  /**\n   * The padding between the header or top edge and the main content.\n   * @default '4x'\n   */\n  paddingBlockStart?: PaddingProps['paddingBlockStart'];\n\n  /**\n   * The padding between the right edge and the main content.\n   * @default '4x'\n   */\n  paddingInlineEnd?: PaddingProps['paddingInlineEnd'];\n\n  /**\n   * The padding between the left edge and the main content.\n   * @default '4x'\n   */\n  paddingInlineStart?: PaddingProps['paddingInlineStart'];\n\n  /**\n   * The aria role applied to the content container. For example, if the \"launcher\" element\n   * includes aria-haspopup=\"dialog\", then the associated content should have role \"dialog\"\n   * and an aria-label that describes it. If the launcher element has role \"combobox\", then\n   * it controls an element with a role such as listbox or grid.\n   */\n  role?: UnpackSignals<JSX.HTMLAttributes['role']>;\n};\n\n/**\n * The SectionedContent component has slots for header, main, and footer content.\n * It is meant to be used in a floating or modal type container and includes\n * conditional support for focus trapping, so that you can tab between components\n * and sections while the container remains open.\n */\nexport const SectionedContent = ({\n  'aria-label': ariaLabel,\n  contentRef: propRef,\n  gap,\n  footer,\n  hasFocusTrap = false,\n  header,\n  main,\n  paddingBlockEnd = '4x',\n  paddingBlockStart = '4x',\n  paddingInlineEnd = '4x',\n  paddingInlineStart = '4x',\n  role,\n  testId\n}: Props) => {\n  const testIdProps = useTestId(testId);\n\n  const cRef = useRef<HTMLDivElement>(null);\n  const contentRef = propRef ?? cRef;\n\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.code === KEYS.TAB) {\n      event.stopPropagation();\n    }\n  }, []);\n\n  const sections = (\n    <Flex direction=\"column\" gap={gap}>\n      {header}\n      <View\n        paddingBlockEnd={paddingBlockEnd}\n        paddingBlockStart={paddingBlockStart}\n        paddingInlineEnd={paddingInlineEnd}\n        paddingInlineStart={paddingInlineStart}>\n        {main}\n      </View>\n      {footer}\n    </Flex>\n  );\n\n  // Use a FocusTrap around the content if hasFocusTrap is true.\n  const childContent = hasFocusTrap ? (\n    <FocusTrap restoreFocusRef={false}>{sections}</FocusTrap>\n  ) : (\n    { sections }\n  );\n\n  return (\n    <div\n      aria-label={ariaLabel}\n      onKeyDown={hasFocusTrap ? handleKeyDown : undefined}\n      ref={contentRef}\n      role={role}\n      {...testIdProps}>\n      {childContent}\n    </div>\n  );\n};\n"],"names":["DEFAULT_PLACEMENT","ariaLabel","contentRef","propRef","gap","footer","hasFocusTrap","header","main","paddingBlockEnd","paddingBlockStart","paddingInlineEnd","paddingInlineStart","role","testId","testIdProps","useTestId","cRef","useRef","handleKeyDown","useCallback","event","code","KEYS","TAB","stopPropagation","sections","_jsxs","Flex","direction","children","_jsx","View","childContent","FocusTrap","restoreFocusRef","onKeyDown","undefined","ref","isOpen","onPosition","rest","placement","setPlacement","useState","prevIsOpen","setPrevIsOpen","handlePosition","positionData","Dropdown"],"mappings":"oOA8BA,MAAMA,EAAoB,kCCkEM,EAC9B,aAAcC,EACdC,WAAYC,EACZC,MACAC,SACAC,gBAAe,EACfC,SACAC,OACAC,kBAAkB,KAClBC,oBAAoB,KACpBC,mBAAmB,KACnBC,qBAAqB,KACrBC,OACAC,aAEA,MAAMC,EAAcC,YAAUF,GAExBG,EAAOC,SAAuB,MAC9BhB,EAAaC,GAAWc,EAExBE,EAAgBC,eAAaC,IAC7BA,EAAMC,OAASC,EAAIA,KAACC,KACtBH,EAAMI,iBACP,GACA,IAEGC,EACJC,OAACC,OAAI,CAACC,UAAU,SAASzB,IAAKA,EAAG0B,SAAA,CAC9BvB,EACDwB,EAAAA,IAACC,EAAAA,KACC,CAAAvB,gBAAiBA,EACjBC,kBAAmBA,EACnBC,iBAAkBA,EAClBC,mBAAoBA,WACnBJ,IAEFH,KAKC4B,EAAe3B,EACnByB,MAACG,EAAAA,UAAS,CAACC,iBAAiB,EAAQL,SAAAJ,KAElCA,YAGJ,OACEK,EAAAA,IAAA,MAAA,CAAA,aACc9B,EACZmC,UAAW9B,EAAea,OAAgBkB,EAC1CC,IAAKpC,EACLW,KAAMA,KACFE,EAAWe,SACdG,GAEH,8BDjH8B,EAAGH,WAAUS,SAAQC,gBAAeC,MACpE,MAAOC,EAAWC,GAAgBC,EAAQA,SAA6B5C,IAChE6C,EAAYC,GAAiBF,EAAQA,SAACL,GAEzCM,IAAeN,IACjBO,EAAcP,GAKTA,GACHI,EAAa3C,IAGjB,MAAM+C,EAAiB3B,eACpB4B,IAICL,EAAaK,EAAaN,WAG1BF,IAAaQ,EAAa,GAE5B,CAACR,EAAYG,IAGf,OACEZ,MAACkB,EAAQA,SAAA,CAACV,OAAQA,EAAQC,WAAYO,EAAgBL,UAAWA,KAAeD,EAC7EX,SAAAA,GAEH"}