{"version":3,"file":"boxalignment-6cee1ef3.js","sources":["../../src/utils/UNSAFE_interpolations/boxalignment/boxalignment.ts"],"sourcesContent":["import { Size, sizeToCSS } from '../../../utils/UNSAFE_size';\nimport { coerceArray } from '../../../utils/UNSAFE_arrayUtils';\nimport { boxAlignment } from './boxalignment.css';\n\ntype BoxAlignments = Parameters<typeof boxAlignment>[0];\n\nexport type BoxAlignmentProps = {\n  // align?: keyof typeof alignStyles;\n  align?: BoxAlignments['alignItems'];\n  gap?: Size | [Size] | [Size, Size];\n  // justify?: keyof typeof justifyStyles;\n  justify?: BoxAlignments['justifyContent'];\n};\n\nconst boxAlignmentInterpolations = {\n  align: ({ align }: Pick<BoxAlignmentProps, 'align'>) =>\n    align === undefined\n      ? {}\n      : {\n          class: boxAlignment({ align: align })\n        },\n  justify: ({ justify }: Pick<BoxAlignmentProps, 'justify'>) =>\n    justify === undefined\n      ? {}\n      : {\n          class: boxAlignment({ justify })\n        },\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/gap\n  gap: ({ gap }: Pick<BoxAlignmentProps, 'gap'>) => {\n    if (gap === undefined) {\n      return {};\n    } else {\n      const [rowSize, columnSize = rowSize] = coerceArray(gap) as [Size] | [Size, Size];\n      return { gap: `${sizeToCSS(rowSize)} ${sizeToCSS(columnSize)}` };\n    }\n  }\n};\n\nexport { boxAlignmentInterpolations };\n"],"names":["boxAlignmentInterpolations","align","undefined","class","boxAlignment","justify","gap","rowSize","columnSize","coerceArray","sizeToCSS"],"mappings":"28CAcA,MAAMA,EAA6B,CACjCC,MAAO,EAAGA,gBACEC,IAAVD,EACI,CAAE,EACF,CACEE,MAAOC,EAAa,CAAEH,MAAOA,KAErCI,QAAS,EAAGA,kBACEH,IAAZG,EACI,CAAE,EACF,CACEF,MAAOC,EAAa,CAAEC,aAG9BC,IAAK,EAAGA,UACN,QAAYJ,IAARI,EACF,MAAO,GACF,CACL,MAAOC,EAASC,EAAaD,GAAWE,EAAAA,YAAYH,GACpD,MAAO,CAAEA,IAAK,GAAGI,EAAAA,UAAUH,MAAYG,YAAUF,KAClD"}