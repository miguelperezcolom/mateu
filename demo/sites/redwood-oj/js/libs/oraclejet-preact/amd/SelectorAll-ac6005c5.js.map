{"version":3,"file":"SelectorAll-ac6005c5.js","sources":["../../src/UNSAFE_SelectorAll/SelectorAll.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useRef } from 'preact/hooks';\nimport { SelectionDetail } from '../UNSAFE_Collection';\nimport { Flex } from '../UNSAFE_Flex';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { styles } from '../UNSAFE_Selector/themes/SelectorStyles.css';\nimport { StyledCheckbox } from '../PRIVATE_StyledCheckbox';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { useActive } from '../hooks/UNSAFE_useActive';\nimport { useFocus } from '../hooks/UNSAFE_useFocus';\nimport { useTestId, TestIdProps } from '../hooks/UNSAFE_useTestId';\nimport { useTooltip } from '../hooks/UNSAFE_useTooltip';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\nimport { useHover } from '../hooks/UNSAFE_useHover/useHover';\n\n/**\n * Props for the SelectorAll Component\n */\nexport type Props<K> = {\n  /**\n   * The selected state of the select all selector\n   */\n  selected: 'none' | 'all' | 'partial' | 'partial-all';\n  /**\n   * Callback function to invoke when the selected keys has changed when\n   * the checkbox is toggled.\n   */\n  onChange?: (detail: SelectionDetail<K>) => void;\n  /**\n   * aria-label for this selectorAll\n   */\n  'aria-label'?: string;\n  /**\n   * One or more ids (separated by spaces) of elements that label the selected item. This will be used for the aria-labelledby of the DOM element.\n   */\n  'aria-labelledby'?: string;\n  /**\n   * Specifies whether tooltip should be shown on the SelectorAll checkbox\n   */\n  showTooltip?: 'enabled' | 'disabled';\n};\n\n/**\n * The SelectorAll component renders checkboxes for select all case.\n */\nexport function SelectorAll<K>({\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledby,\n  selected,\n  onChange,\n  showTooltip = 'disabled',\n  testId\n}: Props<K> & TestIdProps) {\n  const pressHandler = (event: Event) => {\n    if (selected == 'none' || selected == 'partial') {\n      onChange?.({ value: { all: true, deletedKeys: new Set() }, target: event.target });\n    } else {\n      onChange?.({ value: { all: false, keys: new Set() }, target: event.target });\n    }\n  };\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isActive, activeProps } = useActive();\n  const { isFocus, focusProps } = useFocus();\n  const { pressProps } = usePress(pressHandler);\n\n  const { isHover, hoverProps } = useHover();\n  const isChecked =\n    selected === 'partial' || selected === 'partial-all'\n      ? 'partial'\n      : selected === 'all'\n      ? 'checked'\n      : 'unchecked';\n  const testIdProps = useTestId(testId);\n\n  const onClick = () => {\n    // ensure the checkbox is focused after click\n    inputRef.current?.focus();\n  };\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n  const tooltipLabel =\n    selected === 'none' || selected === 'partial'\n      ? translations.selectorAll_selectAll()\n      : translations.selectorAll_deselectAll();\n\n  const { tooltipContent, tooltipProps } = useTooltip({\n    text: tooltipLabel,\n    isDisabled: showTooltip === 'disabled' ? true : false\n  });\n\n  const ariaLabelText = !ariaLabel && !ariaLabelledby ? tooltipLabel : undefined;\n\n  return (\n    <div\n      class={styles.container}\n      {...mergeProps({ onClick }, pressProps, tooltipProps)}\n      {...testIdProps}>\n      <div class={styles.base} {...activeProps} {...hoverProps}>\n        <Flex align=\"center\" justify=\"center\">\n          <StyledCheckbox\n            ref={inputRef}\n            isHover={isHover}\n            isChecked={isChecked}\n            isActive={isActive}\n            isFocusRingShown={isFocus}\n            aria-label={ariaLabel ? ariaLabel : ariaLabelText}\n            aria-labelledby={ariaLabelledby}\n            onKeyDown={handleKeyboardEvent}\n            onKeyUp={handleKeyboardEvent}\n            {...focusProps}\n          />\n          {tooltipContent}\n        </Flex>\n      </div>\n    </div>\n  );\n}\n\nconst handleKeyboardEvent = (event: KeyboardEvent) => {\n  if (event.key == 'Enter') {\n    // prevent active styles applied to checkbox\n    event.stopPropagation();\n  }\n};\n"],"names":["handleKeyboardEvent","event","key","stopPropagation","ariaLabel","ariaLabelledby","selected","onChange","showTooltip","testId","inputRef","useRef","isActive","activeProps","useActive","isFocus","focusProps","useFocus","pressProps","usePress","value","all","deletedKeys","Set","target","keys","isHover","hoverProps","useHover","isChecked","testIdProps","useTestId","translations","useTranslationBundle","tooltipLabel","selectorAll_selectAll","selectorAll_deselectAll","tooltipContent","tooltipProps","useTooltip","text","isDisabled","ariaLabelText","undefined","_jsx","class","styles","container","mergeProps","onClick","current","focus","children","jsx","base","_jsxs","Flex","align","justify","StyledCheckbox","ref","isFocusRingShown","onKeyDown","onKeyUp"],"mappings":"oqBA+HA,MAAMA,EAAuBC,IACV,SAAbA,EAAMC,KAERD,EAAME,iBACP,gBA/EG,UACJ,aAAcC,EACd,kBAAmBC,EAAcC,SACjCA,EAAQC,SACRA,EAAQC,YACRA,EAAc,WAAUC,OACxBA,IAEA,MAQMC,EAAWC,SAAyB,OACpCC,SAAEA,EAAQC,YAAEA,GAAgBC,EAASA,aACrCC,QAAEA,EAAOC,WAAEA,GAAeC,EAAQA,YAClCC,WAAEA,GAAeC,EAAQA,UAXTlB,IAElBM,IADc,QAAZD,GAAkC,WAAZA,EACb,CAAEc,MAAO,CAAEC,KAAK,EAAMC,YAAa,IAAIC,KAASC,OAAQvB,EAAMuB,QAE9D,CAAEJ,MAAO,CAAEC,KAAK,EAAOI,KAAM,IAAIF,KAASC,OAAQvB,EAAMuB,QACpE,KAQGE,QAAEA,EAAOC,WAAEA,GAAeC,EAAQA,WAClCC,EACS,YAAbvB,GAAuC,gBAAbA,EACtB,UACa,QAAbA,EACA,UACA,YACAwB,EAAcC,YAAUtB,GAOxBuB,EAAeC,uBAAiC,4BAEhDC,EACS,SAAb5B,GAAoC,YAAbA,EACnB0B,EAAaG,wBACbH,EAAaI,2BAEbC,eAAEA,EAAcC,aAAEA,GAAiBC,aAAW,CAClDC,KAAMN,EACNO,WAA4B,aAAhBjC,IAGRkC,EAAiBtC,GAAcC,OAAgCsC,EAAfT,EAEtD,OACEU,aACEC,MAAOC,EAAAA,OAAOC,aACVC,EAAUA,WAAC,CAAEC,QAtBL,KAEdvC,EAASwC,SAASC,OAAO,GAoBKjC,EAAYoB,MACpCR,EACJsB,SAAAR,EAAAS,IAAA,MAAA,CAAKR,MAAOC,EAAAA,OAAOQ,QAAUzC,KAAiBc,WAC5C4B,EAAAA,KAACC,EAAAA,MAAKC,MAAM,SAASC,QAAQ,SAAQN,SAAA,CACnCR,EAACS,IAAAM,EAAcA,eACb,CAAAC,IAAKlD,EACLgB,QAASA,EACTG,UAAWA,EACXjB,SAAUA,EACViD,iBAAkB9C,eACNX,GAAwBsC,EACnB,kBAAArC,EACjByD,UAAW9D,EACX+D,QAAS/D,KACLgB,IAELqB,QAKX"}