{"version":3,"file":"useContainerBreakpoints-53f7e391.js","sources":["../../src/hooks/UNSAFE_useContainerBreakpoints/useContainerBreakpoints.tsx"],"sourcesContent":["import { useState, useRef, useCallback, useMemo } from 'preact/hooks';\nimport { defaultBreakpoints, Breakpoints } from '../UNSAFE_useBreakpoints';\n\n/**\n * This custom hook returns the current breakpoints based on the width of a container, which is a DOM object.\n * The breakpoints are returned as a set of boolean values keyed to each breakpoint.\n * TODO: Refactor to use a single ResizeObserver for better performance.\n */\nexport function useContainerBreakpoints(breakpoints: Breakpoints = defaultBreakpoints) {\n  const [width, setWidth] = useState(0);\n  const observedNodeRef = useRef<HTMLElement | null>(null);\n\n  const resizeObserver = useMemo(\n    () =>\n      new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          setWidth(entry.contentRect.width);\n        }\n      }),\n    []\n  );\n\n  const ref = useCallback(\n    (node: HTMLElement) => {\n      const observedNode = observedNodeRef.current;\n\n      if (node != observedNode) {\n        if (observedNode) {\n          resizeObserver.unobserve(observedNode);\n        }\n\n        if (node) {\n          resizeObserver.observe(node);\n        }\n\n        observedNodeRef.current = node;\n      }\n    },\n    [resizeObserver]\n  );\n\n  const breakpointMatches = useMemo(() => {\n    const matches: Record<string, boolean> = {};\n    for (const k in breakpoints) {\n      matches[k] = width >= parseInt(breakpoints[k]);\n    }\n    return matches;\n  }, [width, breakpoints]);\n\n  return {\n    breakpointMatches,\n    ref\n  };\n}\n"],"names":["breakpoints","defaultBreakpoints","width","setWidth","useState","observedNodeRef","useRef","resizeObserver","useMemo","ResizeObserver","entries","entry","contentRect","ref","useCallback","node","observedNode","current","unobserve","observe","breakpointMatches","matches","k","parseInt"],"mappings":"sHAQgB,SAAwBA,EAA2BC,sBACjE,MAAOC,EAAOC,GAAYC,EAAQA,SAAC,GAC7BC,EAAkBC,SAA2B,MAE7CC,EAAiBC,EAAOA,SAC5B,IACE,IAAIC,gBAAgBC,IAClB,IAAK,MAAMC,KAASD,EAClBP,EAASQ,EAAMC,YAAYV,MAC5B,KAEL,IAGIW,EAAMC,eACTC,IACC,MAAMC,EAAeX,EAAgBY,QAEjCF,GAAQC,IACNA,GACFT,EAAeW,UAAUF,GAGvBD,GACFR,EAAeY,QAAQJ,GAGzBV,EAAgBY,QAAUF,EAC3B,GAEH,CAACR,IAWH,MAAO,CACLa,kBATwBZ,EAAAA,SAAQ,KAChC,MAAMa,EAAmC,CAAA,EACzC,IAAK,MAAMC,KAAKtB,EACdqB,EAAQC,GAAKpB,GAASqB,SAASvB,EAAYsB,IAE7C,OAAOD,CAAO,GACb,CAACnB,EAAOF,IAITa,MAEJ"}