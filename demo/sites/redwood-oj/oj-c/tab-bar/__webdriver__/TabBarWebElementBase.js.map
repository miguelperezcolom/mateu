{"version":3,"file":"TabBarWebElementBase.js","sourceRoot":"","sources":["TabBarWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,oBAAqB,SAAQ,uBAAY;IACpD;;;;;OAKG;IACI,OAAO;QACZ,OAAO,IAAI,CAAC,WAAW,CAAgB,MAAM,CAAC,CAAC;IACjD,CAAC;IAED;;;;;OAKG;IACI,eAAe,CAAC,SAA0B;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAkB,WAAW,EAAE,SAAS,CAAC,CAAC;IACnE,CAAC;IAED;;;;;OAKG;IACI,YAAY;QACjB,OAAO,IAAI,CAAC,WAAW,CAAkB,WAAW,CAAC,CAAC;IACxD,CAAC;IAED;;;;;OAKG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAS,aAAa,CAAC,CAAC;IACjD,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAS,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;OAKG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,WAAW,CAAS,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;OAKG;IACI,OAAO;QACZ,OAAO,IAAI,CAAC,WAAW,CAAS,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,aAAa;QAClB,OAAO,IAAI,CAAC,WAAW,CAAS,YAAY,CAAC,CAAC;IAChD,CAAC;IAED;;;;;OAKG;IACI,oBAAoB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAoB,mBAAmB,CAAC,CAAC;IAClE,CAAC;CACF;AApGD,oDAoGC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-tab-bar WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, TabBarWebElement.ts.\n */\nexport class TabBarWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>data</code> property.\n   * An array of tabs\n   * @return The value of <code>data</code> property.\n   *\n   */\n  public getData(): Promise<Array<object>> {\n    return this.getProperty<Array<object>>('data');\n  }\n\n  /**\n   * Sets the value of <code>selection</code> property.\n   * The key of the selected tab\n   * @param selection The value to set for <code>selection</code>\n   *\n   */\n  public changeSelection(selection: string | number): Promise<void> {\n    return this.setProperty<string | number>('selection', selection);\n  }\n\n  /**\n   * Gets the value of <code>selection</code> property.\n   * The key of the selected tab\n   * @return The value of <code>selection</code> property.\n   *\n   */\n  public getSelection(): Promise<string | number> {\n    return this.getProperty<string | number>('selection');\n  }\n\n  /**\n   * Gets the value of <code>reorderable</code> property.\n   * The reorderable configuration for tabs.\n   * @return The value of <code>reorderable</code> property.\n   *\n   */\n  public getReorderable(): Promise<string> {\n    return this.getProperty<string>('reorderable');\n  }\n\n  /**\n   * Gets the value of <code>overflow</code> property.\n   * Specifies the overflow behavior.\n   * @return The value of <code>overflow</code> property.\n   *\n   */\n  public getOverflow(): Promise<string> {\n    return this.getProperty<string>('overflow');\n  }\n\n  /**\n   * Gets the value of <code>display</code> property.\n   * The display configuration for tabs.\n   * @return The value of <code>display</code> property.\n   *\n   */\n  public getDisplay(): Promise<string> {\n    return this.getProperty<string>('display');\n  }\n\n  /**\n   * Gets the value of <code>layout</code> property.\n   * The layout configuration for tabs.\n   * @return The value of <code>layout</code> property.\n   *\n   */\n  public getLayout(): Promise<string> {\n    return this.getProperty<string>('layout');\n  }\n\n  /**\n   * Gets the value of <code>edge</code> property.\n   * The edge configuration for tabs.\n   * @return The value of <code>edge</code> property.\n   *\n   */\n  public getEdge(): Promise<string> {\n    return this.getProperty<string>('edge');\n  }\n\n  /**\n   * Gets the value of <code>truncation</code> property.\n   * The truncation configuration for tab labels.\n   * @return The value of <code>truncation</code> property.\n   *\n   */\n  public getTruncation(): Promise<string> {\n    return this.getProperty<string>('truncation');\n  }\n\n  /**\n   * Gets the value of <code>contextMenuConfig</code> property.\n   * Specifies a context menu configuration.\n   * @return The value of <code>contextMenuConfig</code> property.\n   *\n   */\n  public getContextMenuConfig(): Promise<ContextMenuConfig> {\n    return this.getProperty<ContextMenuConfig>('contextMenuConfig');\n  }\n}\nexport interface ContextMenuConfig {\n  /**\n   *\n   */\n  accessibleLabel: string;\n}\n"]}