[
  {
    "id": "oj-c.ButtonsetSingle",
    "name": "ButtonsetSingle",
    "memberof": "oj-c",
    "kind": "class",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "ojcomponent": true,
    "isvcomponent": true,
    "since": "17.0.0",
    "longname": "oj-c.ButtonsetSingle",
    "pack": "oj-c",
    "classdesc": "<h3 id=\"ButtonsetSingleOverview-section\">\n  JET Buttonset Single\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#buttonSetSingleOverview-section\"></a>\n</h3>\n\n<p>Description: A Buttonset Single is a grouping of related buttons where only one button may be selected.\n\n<pre class=\"prettyprint\"><code>&lt;oj-c-buttonset-single aria-label=\"Pick an Item\" value=\"{{value}}\" items=\"[[items]]\">\n&lt;/oj-c-buttonset-single>\n</code></pre>\n\n<h3 id=\"toolbar-section\">\nToolbar Usage\n</h3>\n<p>Note that oj-c-buttonset-single is not intended for usage inside oj-toolbar, it is only\nsupported in oj-c-toolbar.</p>\n\n<h3 id=\"touch-section\">\n  Touch End User Information\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#touch-section\"></a>\n</h3>\n\n<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Gesture</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Push Toggle Button</td>\n      <td><kbd>Tap</kbd></td>\n      <td>Toggle the button.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"keyboard-section\">\n  Keyboard End User Information\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#keyboard-section\"></a>\n</h3>\n\n<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Key</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Buttonset Single</td>\n      <td><kbd>Enter</kbd> or <kbd>Space</kbd></td>\n      <td>Toggle the focused Button.</td>\n    </tr>\n    <tr>\n      <td>Buttonset Single</td>\n      <td><kbd>Right Arrow</kbd></td>\n      <td>Move focus to the next enabled Button, wrapping as needed.</td>\n    </tr>\n    <tr>\n      <td>Buttonset Single</td>\n      <td><kbd>Left Arrow</kbd></td>\n      <td>Move focus to the previous enabled Button, wrapping as needed.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"a11y-section\">\n  Accessibility\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#a11y-section\"></a>\n</h3>\n\n <p>The application is responsible for applying <code class=\"prettyprint\">aria-label</code> and/or\n<code class=\"prettyprint\">aria-controls</code> attributes like the following to the buttonset element, if applicable per the instructions that follow:\n\n<pre class=\"prettyprint\">\n<code>aria-label=\"Choose only one beverage.\"\naria-controls=\"myTextEditor\"\n</code></pre>\n\n<p>An <code class=\"prettyprint\">aria-label</code> conveying the \"choose only one\" semantics should be included for a buttonset-single.\n\n<p>The <code class=\"prettyprint\">aria-controls</code> attribute should be included if the buttonset is controlling something else on the page, e.g.\nbold / italic / underline buttons controlling a rich text editor.  If the buttonset is contained in a toolbar, <code class=\"prettyprint\">aria-controls</code>\nshould be placed on the toolbar, not on the buttonsets within the toolbar.\n\n <p>\nDisabled content: JET supports an accessible luminosity contrast ratio,\nas specified in <a href=\"http://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast\">WCAG 2.0 - Section 1.4.3 \"Contrast\"</a>,\nin the themes that are accessible.  (See the \"Theming\" chapter of the JET Developer Guide for more information on which\nthemes are accessible.)  Note that Section 1.4.3 says that text or images of text that are part of an inactive user\ninterface component have no contrast requirement.  Because disabled content may not meet the minimum contrast ratio\nrequired of enabled content, it cannot be used to convey meaningful information.\n</p>",
    "scope": "static",
    "tagWithoutBrackets": "oj-c-buttonset-single",
    "tagWithBrackets": "<oj-c-buttonset-single>",
    "domInterface": "CButtonsetSingleElement",
    "ojPageTitle": "&lt;oj-c-buttonset-single>",
    "camelCaseName": "ButtonsetSingle",
    "ojPageTitlePrefix": "Element: ",
    "ojtsvcomponent": true,
    "tstype": {
      "target": "Type",
      "value": "interface CButtonsetSingleElement extends JetElement<ButtonsetSingleElementSettableProperties>"
    },
    "ojsignature": [
      {
        "target": "Type",
        "value": "interface CButtonsetSingleElement extends JetElement<ButtonsetSingleElementSettableProperties>"
      }
    ],
    "tsdeprecated": [
      {
        "type": "supersedes",
        "since": "17.0.0",
        "value": [
          "oj-buttonset-one"
        ]
      }
    ],
    "ojmodule": "buttonset-single"
  },
  {
    "id": "oj-c.ButtonsetSingle#value",
    "name": "value",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#value",
    "scope": "instance",
    "type": {
      "names": [
        "string"
      ]
    },
    "optional": true,
    "ojwriteback": true,
    "description": "Specifies which toggle button is selected"
  },
  {
    "id": "oj-c.ButtonsetSingle#items",
    "name": "items",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#items",
    "scope": "instance",
    "type": {
      "names": [
        "Array<object>"
      ]
    },
    "optional": true,
    "description": "Specifies the toggle buttons rendered by the buttonset.",
    "defaultvalue": "[]",
    "tstype": [
      {
        "target": "Type",
        "value": "Array<oj-c.ButtonsetSingle.ToggleItem>",
        "jsdocOverride": true
      }
    ]
  },
  {
    "id": "oj-c.ButtonsetSingle#display",
    "name": "display",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#display",
    "scope": "instance",
    "type": {
      "names": [
        "\"all\"",
        "\"label\"",
        "\"icons\""
      ]
    },
    "optional": true,
    "description": "Display just the label, the icons, or all.",
    "ojvalues": [
      {
        "name": "all",
        "description": "Display both the label and icons.",
        "displayName": "All",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "icons",
        "description": "Display only the icons.",
        "displayName": "Icons",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "label",
        "description": "Display only the text label.",
        "displayName": "label",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "\"all\""
  },
  {
    "id": "oj-c.ButtonsetSingle#disabled",
    "name": "disabled",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#disabled",
    "scope": "instance",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "optional": true,
    "description": "Specifies that the buttonset should be disabled.",
    "defaultvalue": false
  },
  {
    "id": "oj-c.ButtonsetSingle#size",
    "name": "size",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#size",
    "scope": "instance",
    "type": {
      "names": [
        "\"sm\"",
        "\"md\"",
        "\"lg\""
      ]
    },
    "optional": true,
    "description": "Specifies the size of the toggle buttons",
    "ojvalues": [
      {
        "name": "sm",
        "description": "Display a small button.",
        "displayName": "Small",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "md",
        "description": "Display a default size button.",
        "displayName": "Medium",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "lg",
        "description": "Display a large button.",
        "displayName": "Large",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "\"md\""
  },
  {
    "id": "oj-c.ButtonsetSingle#width",
    "name": "width",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#width",
    "scope": "instance",
    "type": {
      "names": [
        "number|string"
      ]
    },
    "optional": true,
    "description": "Specifies the buttonset width"
  },
  {
    "id": "oj-c.ButtonsetSingle#maxWidth",
    "name": "maxWidth",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#maxWidth",
    "scope": "instance",
    "type": {
      "names": [
        "number|string"
      ]
    },
    "optional": true,
    "description": "Specifies the buttonset max width"
  },
  {
    "id": "oj-c.ButtonsetSingle#chroming",
    "name": "chroming",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#chroming",
    "scope": "instance",
    "type": {
      "names": [
        "\"borderless\"",
        "\"outlined\""
      ]
    },
    "optional": true,
    "description": "Indicates in what states the button has chromings in background and border.",
    "ojvalues": [
      {
        "name": "borderless",
        "description": "Borderless buttons are a less prominent variation.",
        "displayName": "Borderless",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "outlined",
        "description": "Outlined buttons are a more prominent variation.",
        "displayName": "Outlined",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "\"outlined\""
  },
  {
    "id": "oj-c.ButtonsetSingle#layoutWidth",
    "name": "layoutWidth",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle#layoutWidth",
    "scope": "instance",
    "type": {
      "names": [
        "\"auto\"",
        "\"equal\""
      ]
    },
    "optional": true,
    "description": "Specifies if button width should be equal or based on contents."
  },
  {
    "id": "oj-c.ButtonsetSingle#focus",
    "name": "focus",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "function",
    "longname": "oj-c.ButtonsetSingle#focus",
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "description": ""
  },
  {
    "id": "oj-c.ButtonsetSingle#blur",
    "name": "blur",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "function",
    "longname": "oj-c.ButtonsetSingle#blur",
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "description": ""
  },
  {
    "id": "oj-c.ButtonsetSingle#setProperty",
    "name": "setProperty",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "function",
    "longname": "oj-c.ButtonsetSingle#setProperty",
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a corresponding event.",
    "params": [
      {
        "name": "property",
        "description": "The property name to set. Supports dot notation for subproperty access.",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "value",
        "description": "The new value to set the property to.",
        "type": {
          "names": [
            "any"
          ]
        }
      }
    ]
  },
  {
    "id": "oj-c.ButtonsetSingle#getProperty",
    "name": "getProperty",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "function",
    "longname": "oj-c.ButtonsetSingle#getProperty",
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "any"
          ]
        }
      }
    ],
    "description": "Retrieves the value of a property or a subproperty.",
    "params": [
      {
        "name": "property",
        "description": "The property name to get. Supports dot notation for subproperty access.",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ]
  },
  {
    "id": "oj-c.ButtonsetSingle#setProperties",
    "name": "setProperties",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "kind": "function",
    "longname": "oj-c.ButtonsetSingle#setProperties",
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "description": "Performs a batch set of properties.",
    "params": [
      {
        "name": "properties",
        "description": "An object containing the property and value pairs to set.",
        "type": {
          "names": [
            "object"
          ]
        }
      }
    ]
  },
  {
    "id": "oj-c.ButtonsetSingle.touchDoc",
    "name": "touchDoc",
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle.touchDoc",
    "description": "<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Gesture</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Push Toggle Button</td>\n      <td><kbd>Tap</kbd></td>\n      <td>Toggle the button.</td>\n    </tr>\n  </tbody>\n</table>",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "ojfragment": true
  },
  {
    "id": "oj-c.ButtonsetSingle.keyboardDoc",
    "name": "keyboardDoc",
    "kind": "member",
    "longname": "oj-c.ButtonsetSingle.keyboardDoc",
    "description": "<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Key</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Buttonset Single</td>\n      <td><kbd>Enter</kbd> or <kbd>Space</kbd></td>\n      <td>Toggle the focused Button.</td>\n    </tr>\n    <tr>\n      <td>Buttonset Single</td>\n      <td><kbd>Right Arrow</kbd></td>\n      <td>Move focus to the next enabled Button, wrapping as needed.</td>\n    </tr>\n    <tr>\n      <td>Buttonset Single</td>\n      <td><kbd>Left Arrow</kbd></td>\n      <td>Move focus to the previous enabled Button, wrapping as needed.</td>\n    </tr>\n  </tbody>\n</table>",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "ojfragment": true
  },
  {
    "id": "oj-c.ButtonsetSingle.ToggleItem",
    "name": "ToggleItem",
    "kind": "typedef",
    "memberof": "oj-c.ButtonsetSingle",
    "meta": {
      "filename": "buttonset-single.tsx",
      "path": "web/components/oj-c/buttonset-single"
    },
    "longname": "oj-c.ButtonsetSingle.ToggleItem",
    "type": {
      "names": [
        "Object"
      ]
    },
    "scope": "static",
    "description": "",
    "properties": [
      {
        "name": "label",
        "description": "The toggle item label.",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "value",
        "description": "The toggle item value.",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "disabled",
        "description": "Specifies if the toggle item is disabled (enabled by default).",
        "optional": true,
        "type": {
          "names": [
            "boolean"
          ]
        }
      },
      {
        "name": "startIcon",
        "description": "Optional icon to render at the start of the toggle item.",
        "optional": true,
        "type": {
          "names": [
            "object"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "{ type?: 'class'; class: string; }|{ type: 'img'; src: string; }",
            "jsdocOverride": true,
            "for": "startIcon"
          }
        ]
      },
      {
        "name": "endIcon",
        "description": "Optional icon to render at the end of the toggle item.",
        "optional": true,
        "type": {
          "names": [
            "object"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "{ type?: 'class'; class: string; }|{ type: 'img'; src: string; }",
            "jsdocOverride": true,
            "for": "endIcon"
          }
        ]
      }
    ]
  }
]