/**
 * @license
 * Copyright (c) 2014, 2025, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","ojs/ojdataprovider","ojs/ojeventtarget"],function(t,e,s){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t;
/**
     * @license
     * Copyright (c) 2014, 2025, Oracle and/or its affiliates.
     * Licensed under The Universal Permissive License (UPL), Version 1.0
     * @ignore
     */
class a{constructor(e,s){this.dataProvider=e,this.options=s,this.cache=new t.DataCache,this._lastFetchParams=null,e.createOptimizedKeyMap&&(this.createOptimizedKeyMap=t=>e.createOptimizedKeyMap(t)),e.createOptimizedKeySet&&(this.createOptimizedKeySet=t=>e.createOptimizedKeySet(t)),e.addEventListener(a._MUTATE,t=>{this.cache.processMutations(t.detail),this.dispatchEvent(t)}),e.addEventListener(a._REFRESH,t=>{this._clearCachedParameters(),this.dispatchEvent(t)})}containsKeys(t){const e=new Set,s=new Set,a=this.cache.getDataByKeys(t);if(t.keys.forEach(t=>{a.results.get(t)?e.add(t):s.add(t)}),0===s.size)return Promise.resolve({containsParameters:t,results:e});{const a={attributes:t.attributes,keys:s,scope:t.scope};return this.dataProvider.containsKeys(a).then(s=>(s.results.forEach(t=>{e.add(t)}),{containsParameters:t,results:e}))}}fetchByKeys(t){const s=new Map,a=new Set,r=t?.signal;return e.wrapWithAbortHandling(r,e=>{const r=this.cache.getDataByKeys(t);if(t.keys.forEach(t=>{const e=r.results.get(t);e?s.set(t,e):a.add(t)}),0===a.size)return e({fetchParameters:t,results:s});{const r={attributes:t.attributes,keys:a,scope:t.scope};return e(this.dataProvider.fetchByKeys(r).then(e=>(e.results.forEach((t,e)=>{s.set(e,t)}),{fetchParameters:t,results:s})))}},!1)}fetchByOffset(t){const s=t.size?t.size:a._DEFAULT_SIZE,r={...t};r.size=s;const i=t?.signal;return e.wrapWithAbortHandling(i,async e=>{if(a._compareCachedFetchParameters(t,this._lastFetchParams)){if(this._doesCacheSatisfyParameters(r))return e(this._fetchByOffsetFromCache(t))}else this._clearCachedParameters();return this._lastFetchParams=a._createCachedFetchParams(t),await this._fetchByOffsetFromDataProvider(r),e(this._fetchByOffsetFromCache(t))},!1)}fetchFirst(t){return this.dataProvider.fetchFirst(t)}getCapability(t){const e=this.dataProvider.getCapability(t);return"fetchByOffset"===t?{attributeFilter:e?.attributeFilter,caching:"visitedByOffset"}:e}getTotalSize(){return this._isAllDataCached()?Promise.resolve(this.cache.getSize()):this.dataProvider.getTotalSize()}isEmpty(){return this._isAllDataCached()?0===this.cache.getSize()?"yes":"no":this.dataProvider.isEmpty()}static _compareCachedFetchParameters(e,s){return e=e||{},!(null!=s&&s.signal?.aborted&&!e.signal?.aborted)&&(null!=s&&t.Object.compareValues(s.attributes,e.attributes||null)&&t.Object.compareValues(s.filterDef,a._getFilterDef(e.filterCriterion))&&t.Object.compareValues(s.sortCriteria,e.sortCriteria||null))}static _createCachedFetchParams(t){t=t||{};const e={};return e.size=t.size,e.attributes=t.attributes?[...t.attributes]:null,e.filterDef=t.filterCriterion?a._getFilterDef(t.filterCriterion):null,e.sortCriteria=t.sortCriteria?[...t.sortCriteria]:null,e.signal=t.signal,e}static _getFilterDef(t){if(!t)return null;const e={};return Object.keys(t).forEach(s=>{"filter"!==s&&(e[s]=t[s])}),e}_doesCacheSatisfyParameters(t){const e=this.cache.isDone();let s;if(-1===t.size)return s=this.cache.getSparseIndex(t.offset)>-1,!s&&e;const a=this.cache.getSize();return t.offset+t.size>=a&&e?(s=this.cache.getSparseIndex(t.offset,a)>-1,!s):(s=this.cache.getSparseIndex(t.offset,t.offset+t.size)>-1,!s&&this.cache.getSize()>=t.offset+t.size)}_isAllDataCached(){return null!=this._lastFetchParams&&!this._lastFetchParams.filterDef&&this.cache.isDone()}async _fetchByOffsetFromDataProvider(t){let e=t.size-1;const s=this.cache.getSize();if(t.offset<s){const s=this.cache.getDataByOffset(t).results;for(let e=0;e<s.length&&void 0!==s[e];e++)t.offset++,t.size--;for(;null!=s[e];)t.size--,e--}const a=await this.dataProvider.fetchByOffset(t);this._totalFilteredRowCount=a.totalFilteredRowCount,this._cachedSortCriteria=a.fetchParameters.sortCriteria,this.cache.addFetchByOffsetResult(a)}_fetchByOffsetFromCache(t){let e=this.cache.getDataByOffset(t);return e.fetchParameters.sortCriteria=this._cachedSortCriteria?this._cachedSortCriteria:t.sortCriteria,"enabled"===t.includeFilteredRowCount?e.totalFilteredRowCount=this._totalFilteredRowCount:delete e.totalFilteredRowCount,e}_clearCachedParameters(){this.cache.reset(),this._lastFetchParams=null,this._totalFilteredRowCount=null,this._cachedSortCriteria=null}}return a._REFRESH="refresh",a._MUTATE="mutate",a._DEFAULT_SIZE=25,s.EventTargetMixin.applyMixin(a),t._registerLegacyNamespaceProp("CachedFetchByOffsetResultsDataProvider",a),a});
//# sourceMappingURL=ojcachedfetchbyoffsetresultsdataprovider.js.map