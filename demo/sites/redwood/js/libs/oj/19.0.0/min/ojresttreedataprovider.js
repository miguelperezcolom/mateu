/**
 * @license
 * Copyright (c) 2014, 2025, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["exports","ojs/ojeventtarget","ojs/ojrestdataprovider","ojs/ojdataprovider","ojs/ojset","ojs/ojmap"],function(t,e,a,r,s,i){"use strict";s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s,i=i&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i;class o{constructor(t){var e;this.options=t,this.TreeAsyncIterator=class{constructor(t,e,a,r,s){this._rootDataProvider=t,this._baseIterable=e,this.currentRestTreeDataProvider=a,this._shouldKeyPath=r,this._shouldStringify=s}async next(){const t=await this._baseIterable[Symbol.asyncIterator]().next();for(let e=0;e<t.value.data.length;e++){let a=t.value.metadata[e].key;this._shouldKeyPath&&(a=this.currentRestTreeDataProvider.createKeyPath(t.value.metadata[e].key)),this._shouldStringify&&(a=JSON.stringify(a)),t.value.metadata[e].key=a,this._rootDataProvider._setMapEntry(a,{data:t.value.data[e],metadata:t.value.metadata[e]})}return t}},this.TreeAsyncIterable=(e=class{constructor(t){this._asyncIterator=t,this[Symbol.asyncIterator]=()=>this._asyncIterator}},Symbol.asyncIterator,e);const r={...t,enforceKeyStringify:"off"};this._baseDataProvider=new a.RESTDataProvider(r),this._mapKeyToItem=new i}_shouldKeyPath(){const t=this._getRootDataProvider().options;return"on"===t?.useKeyPaths}_shouldStringify(){const t=this._getRootDataProvider().options;return"on"===t?.enforceKeyStringify}_getParentPath(){return this.options.rootDataProvider?this[Symbol.for("parentKey")]:[]}createKeyPath(t){return[...this._getParentPath(),t]}fetchFirst(t){const e=this._baseDataProvider.fetchFirst(t),a=this._getRootDataProvider();return new this.TreeAsyncIterable(new this.TreeAsyncIterator(a,e,this,this._shouldKeyPath(),this._shouldStringify()))}isKeyPathDescendant(t){const e=this._getParentPath();if(e.length>=t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}async fetchByKeys(t){const e=new Set,a=new Map,r=this._shouldKeyPath();if(t.keys.forEach(t=>{let s=t;const i=this._getItemFromKey(s);i?(!r||r&&this.isKeyPathDescendant(s))&&a.set(s,i):(this._shouldStringify()&&(s=JSON.parse(t)),e.add(s))}),e.size)if(r)for(const r of e){const e=await this.findKeys(r.slice(),r.slice(),t,this),s=e.fetchByKeysResults.results.get(e.lastKey);if(s){let t=r;this._shouldStringify()&&(t=JSON.stringify(r));const e={data:s.data,metadata:{...s.metadata,key:t}};this._setMapEntry(t,e),a.set(t,e)}}else{(await this._baseDataProvider.fetchByKeys({...t,keys:e})).results.forEach(t=>{let e=t.metadata.key;this._shouldStringify()&&(e=JSON.stringify(e));const r={data:t.data,metadata:{...t.metadata,key:e}};this._setMapEntry(e,r),a.set(e,r)})}return{fetchParameters:t,results:a}}async findKeys(t,e,a,r){if(1===t.length){let e=t[0];const s={...a};return s.keys=new Set,s.keys.add(e),{fetchByKeysResults:await r._baseDataProvider.fetchByKeys(s),lastKey:e}}{let s=[t.shift()];let i;if(this._getItemFromKey(s))i=r.getChildDataProvider(s);else{s=s[0];const t={...a};t.keys=new Set,t.keys.add(s);const o=await r._baseDataProvider.fetchByKeys(t);if(o.results.size>0){const t=e.indexOf(s),a=e.slice(0,t+1);o.results.forEach(t=>{const e={data:t.data,metadata:{...t.metadata,key:a}};this._setMapEntry(a,e)}),i=r.getChildDataProvider(a)}}return i?this.findKeys(t,e,a,i):null}}async fetchByOffset(t){const e=await this._baseDataProvider.fetchByOffset(t),a={...e};return a.results=[],e.results.forEach(t=>{let e=t.metadata.key;this._shouldKeyPath()&&(e=this.createKeyPath(t.metadata.key)),this._shouldStringify()&&(e=JSON.stringify(e));const r={data:t.data,metadata:{...t.metadata,key:e}};a.results.push(r),this._setMapEntry(e,r)}),a}async containsKeys(t){if(this._shouldKeyPath()){const e=new s,a=await this.fetchByKeys(t);return t.keys.forEach(t=>{null!=a.results.get(t)&&e.add(t)}),{containsParameters:t,results:e}}if(this._shouldStringify()){const e=new s,a={...t};this._shouldStringify()&&(a.keys=new Set,t.keys.forEach(t=>{a.keys.add(JSON.parse(t))}));const r=await this._baseDataProvider.containsKeys(a);return t.keys.forEach(t=>{r.results.has(JSON.parse(t))&&e.add(t)}),{containsParameters:t,results:e}}return this._baseDataProvider.containsKeys(t)}createOptimizedKeySet(t){return this._baseDataProvider.createOptimizedKeySet(t)}createOptimizedKeyMap(t){return this._baseDataProvider.createOptimizedKeyMap(t)}isEmpty(){return this._baseDataProvider.isEmpty()}getCapability(t){return"key"===t?this._shouldKeyPath()?this._shouldStringify()?{structure:"pathArrayString"}:{structure:"pathArray"}:{structure:"none"}:this._baseDataProvider.getCapability(t)}getTotalSize(){return this._baseDataProvider.getTotalSize()}refresh(){this._flushMaps(),this.dispatchEvent(new r.DataProviderRefreshEvent)}mutate(t){this._addMetadataToMutationEventDetail(t),t.remove&&this._updateMapFromMutationDetail("remove",t.remove),t.add&&this._updateMapFromMutationDetail("add",t.add),t.update&&this._updateMapFromMutationDetail("update",t.update),this._baseDataProvider.mutate(t),this.dispatchEvent(new r.DataProviderMutationEvent(t))}getChildDataProvider(t){const e=this._getItemFromKey(t),a=this.options.getChildDataProvider(e);if(!a)return null;const s=r.DataProviderFeatureChecker.isTreeDataProvider(a)?a:new n(a);return this._shouldKeyPath()&&(s[Symbol.for("parentKey")]=t),s}_getItemFromKey(t){return this._getRootDataProvider()._mapKeyToItem.get(t)}_setMapEntry(t,e){const a=this._getRootDataProvider(),r=a._mapKeyToItem.get(t);r?a._mapKeyToItem.set(t,{data:{...r.data,...e.data},metadata:{...r.metadata,...e.metadata}}):a._mapKeyToItem.set(t,e)}_deleteMapEntry(t){this._getRootDataProvider()._mapKeyToItem.delete(t)}_flushMaps(){this._getRootDataProvider()._mapKeyToItem.clear()}_getRootDataProvider(){return this.options.rootDataProvider?this.options.rootDataProvider:this}_addMetadataToMutationEventDetail(t){Object.keys(t).forEach(e=>{(!t[e].metadata||t[e].metadata&&!t[e].metadata.length)&&(t[e].metadata=[],t[e].keys.forEach(a=>{t[e].metadata.push({key:a})}))})}_updateMapFromMutationDetail(t,e){if("remove"===t)e.keys.forEach(t=>{this._deleteMapEntry(t)});else{const t=e.data,a=e.metadata;if(Array.isArray(t)&&Array.isArray(a))for(let e=0;e<t.length;e++)this._setMapEntry(a[e].key,{data:t[e],metadata:a[e]});else if(Array.isArray(a))for(let t=0;t<a.length;t++){const e=this._getItemFromKey(a[t].key);e&&this._setMapEntry(a[t].key,{data:e.data,metadata:a[t]})}}}}class n{constructor(t){this.dataprovider=t}fetchFirst(t){return this.dataprovider.fetchFirst(t)}async fetchByKeys(t){return this.dataprovider.fetchByKeys(t)}async fetchByOffset(t){return this.dataprovider.fetchByOffset(t)}async containsKeys(t){return this.dataprovider.containsKeys(t)}createOptimizedKeySet(t){return this.dataprovider.createOptimizedKeySet(t)}createOptimizedKeyMap(t){return this.dataprovider.createOptimizedKeyMap(t)}isEmpty(){const t=this.dataprovider.isEmpty();return"yes"===t?"yes":"no"===t?"no":"unknown"}getCapability(t){return this.dataprovider.getCapability(t)}getTotalSize(){return this.dataprovider.getTotalSize()}getChildDataProvider(t){return null}addEventListener(t,e){this.dataprovider.addEventListener(t,e)}removeEventListener(t,e){this.dataprovider.removeEventListener(t,e)}dispatchEvent(t){return this.dataprovider.dispatchEvent(t)}}e.EventTargetMixin.applyMixin(o),t.RESTTreeDataProvider=o,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ojresttreedataprovider.js.map