{"version":3,"file":"MessageLayer-8df59ea9.js","sources":["../../src/PRIVATE_MessageLayer/MessageLayer.tsx"],"sourcesContent":["import { ComponentChildren } from 'preact';\nimport { Flex } from '../UNSAFE_Flex';\nimport { WindowOverlay, WindowOverlayPlacement } from '../UNSAFE_WindowOverlay';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { Layer } from '../UNSAFE_Layer';\n\nconst positions = [\n  'top',\n  'top-left',\n  'top-right',\n  'top-start',\n  'top-end',\n  'bottom',\n  'bottom-left',\n  'bottom-right',\n  'bottom-start',\n  'bottom-end'\n] as const;\n\ntype Position = (typeof positions)[number];\n\ntype Offset =\n  | number\n  | {\n      horizontal?: number;\n      vertical?: number;\n    };\n\ntype Props = {\n  children: ComponentChildren;\n\n  /**\n   * Defines the fixed position where the notifications will to be placed on the screen.\n   * - top-start resolves to top-left in LTR (top-right in RTL)\n   * - top-end resolves to top-right in LTR (top-left in RTL)\n   * - bottom-start resolves to bottom-left in LTR (bottom-right in RTL)\n   * - bottom-end resolves to bottom-right in LTR (bottom-left in RTL)\n   *\n   * default bottom\n   */\n  position?: Position;\n\n  /**\n   * Defines an offset (in pixels) in the placement. Value can be supplied as a number or\n   * an object with horizontal and vertical values.\n   *\n   * default 0\n   */\n  offset?: Offset;\n\n  /**\n   * The test id which is assigned to the \"data-testid\" for the component's element.\n   * Used for test automation, it is assigned to the wrapper element rendered by the component.\n   */\n  testId?: string;\n};\n\nconst MessageLayer = ({ children, offset, testId, position = 'bottom' }: Props) => {\n  const side = position.split('-')[0];\n  let windowOverlayOffset;\n  if (typeof offset === 'number') {\n    windowOverlayOffset = { mainAxis: offset, crossAxis: offset };\n  } else if (side == 'top' || side == 'bottom') {\n    windowOverlayOffset = { mainAxis: offset?.vertical, crossAxis: offset?.horizontal };\n  } else {\n    windowOverlayOffset = { mainAxis: offset?.horizontal, crossAxis: offset?.vertical };\n  }\n\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n  let windowOverlayPlacement: WindowOverlayPlacement | undefined;\n  switch (position) {\n    case 'top-left':\n      windowOverlayPlacement = isLtr ? 'top-start' : 'top-end';\n      break;\n    case 'top-right':\n      windowOverlayPlacement = isLtr ? 'top-end' : 'top-start';\n      break;\n    case 'bottom-left':\n      windowOverlayPlacement = isLtr ? 'bottom-start' : 'bottom-end';\n      break;\n    case 'bottom-right':\n      windowOverlayPlacement = isLtr ? 'bottom-end' : 'bottom-start';\n      break;\n    default:\n      windowOverlayPlacement = position;\n      break;\n  }\n  return (\n    <Layer priority=\"messages\" level=\"topLevel\">\n      <WindowOverlay placement={windowOverlayPlacement} offset={windowOverlayOffset}>\n        <div data-testid={testId}>\n          <Flex direction=\"column\" gap=\"2x\">\n            {children}\n          </Flex>\n        </div>\n      </WindowOverlay>\n    </Layer>\n  );\n};\n\nexport type { Position, Offset };\nexport { MessageLayer, positions };\n"],"names":["children","offset","testId","position","side","split","windowOverlayOffset","mainAxis","crossAxis","vertical","horizontal","direction","useUser","isLtr","windowOverlayPlacement","_jsx","Layer","priority","level","WindowOverlay","placement","jsx","Flex","gap"],"mappings":"2NAyDqB,EAAGA,WAAUC,SAAQC,SAAQC,WAAW,aAC3D,MAAMC,EAAOD,EAASE,MAAM,KAAK,GACjC,IAAIC,EAEFA,EADoB,iBAAXL,EACa,CAAEM,SAAUN,EAAQO,UAAWP,GACpC,OAARG,GAAyB,UAARA,EACJ,CAAEG,SAAUN,GAAQQ,SAAUD,UAAWP,GAAQS,YAEjD,CAAEH,SAAUN,GAAQS,WAAYF,UAAWP,GAAQQ,UAG3E,MAAME,UAAEA,GAAcC,EAAAA,UAChBC,EAAsB,QAAdF,EACd,IAAIG,EACJ,OAAQX,GACN,IAAK,WACHW,EAAyBD,EAAQ,YAAc,UAC/C,MACF,IAAK,YACHC,EAAyBD,EAAQ,UAAY,YAC7C,MACF,IAAK,cACHC,EAAyBD,EAAQ,eAAiB,aAClD,MACF,IAAK,eACHC,EAAyBD,EAAQ,aAAe,eAChD,MACF,QACEC,EAAyBX,EAG7B,OACEY,EAAAA,IAACC,EAAAA,OAAMC,SAAS,WAAWC,MAAM,WAAUlB,SACzCe,EAAAA,IAACI,EAAAA,cAAa,CAACC,UAAWN,EAAwBb,OAAQK,EACxDN,SAAAe,EAAAM,IAAA,MAAA,CAAA,cAAkBnB,EAChBF,SAAAe,EAAAA,IAACO,EAAAA,KAAK,CAAAX,UAAU,SAASY,IAAI,cAC1BvB,SAKT,cA5Fc,CAChB,MACA,WACA,YACA,YACA,UACA,SACA,cACA,eACA,eACA"}