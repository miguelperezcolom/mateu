{"version":3,"file":"keyboardUtils-fb6219eb.js","sources":["../../src/utils/PRIVATE_keyboardUtils/keyboardUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { getClientHints } from '../PRIVATE_clientHints';\n\nconst clientHints = getClientHints();\n\n/**\n * Checks if the key pressed is the backspace/delete key.\n *\n * @param event The keyboard event\n * @return the result of the check\n */\nexport function isBackspaceOrDelete(event: KeyboardEvent) {\n  return event.code === 'Backspace' || event.code === 'Delete';\n}\n\n/**\n * Checks if the current event is a select-all event\n *\n * @param event The keyboard event\n * @returns the result of the check\n */\nexport function isSelectAll(event: KeyboardEvent) {\n  return (\n    ((clientHints.platform === 'mac' && event.metaKey) ||\n      ((clientHints.platform === 'windows' || clientHints.platform === 'unknown') && event.ctrlKey)) &&\n    event.code === 'KeyA'\n  );\n}\n\n/**\n * Checks if the keyboard event is an undo action\n * @param event the keyboard event\n * @returns true if this is an undo action\n */\nexport const isUndoEvent = (event: KeyboardEvent) => {\n  const { platform } = clientHints;\n  return (\n    (platform === 'mac' && event.metaKey && !event.shiftKey && event.key === 'z') ||\n    ((platform === 'windows' || platform === 'unknown' ) && event.ctrlKey && event.key === 'z')\n  );\n};\n\n/**\n * Checks if the keyboard event is a redo action\n * @param event the keyboard event\n * @returns true if this is a redo action\n */\nexport const isRedoEvent = (event: KeyboardEvent) => {\n  const { platform } = clientHints;\n  return (\n    (platform === 'mac' && event.metaKey && event.shiftKey && event.key === 'z') ||\n    ((platform === 'windows' || platform === 'unknown') && event.ctrlKey && event.key === 'y')\n  );\n};\n\nexport const KEYS = {\n  TAB: 'Tab',\n  ENTER: 'Enter',\n  NUMPAD_ENTER: 'NumpadEnter',\n  ESC: 'Escape',\n  SPACE: 'Space',\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n  SHIFT_LEFT: 'ShiftLeft',\n  SHIFT_RIGHT: 'ShiftRight',\n  CTRL_LEFT: 'ControlLeft',\n  CTRL_RIGHT: 'ControlRight',\n  ALT_LEFT: 'AltLeft',\n  ALT_RIGHT: 'AltRight',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n  HOME: 'Home',\n  END: 'End',\n  BACKSPACE: 'Backspace',\n  DELETE: 'Delete'\n};\n\nexport const isControlKey = (event: KeyboardEvent) => {\n  switch (event.code) {\n    case KEYS.SHIFT_LEFT:\n    case KEYS.SHIFT_RIGHT:\n    case KEYS.CTRL_LEFT:\n    case KEYS.CTRL_RIGHT:\n    case KEYS.ALT_LEFT:\n    case KEYS.ALT_RIGHT:\n      return true;\n    default:\n      return event.metaKey || event.ctrlKey;\n  }\n};\n\nexport const isFunctionKey = (event: KeyboardEvent) => {\n  return /\\bF([1-9]|1[0-2])\\b/i.test(event.code);\n};\n\nexport const isControlOrFunctionKey = (event: KeyboardEvent) => {\n  return isControlKey(event) || isFunctionKey(event);\n};\n"],"names":["clientHints","getClientHints","KEYS","TAB","ENTER","NUMPAD_ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT_LEFT","SHIFT_RIGHT","CTRL_LEFT","CTRL_RIGHT","ALT_LEFT","ALT_RIGHT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","event","code","metaKey","ctrlKey","isControlKey","test","isFunctionKey","platform","shiftKey","key"],"mappings":"wEAUA,MAAMA,EAAcC,EAAcA,iBA+BrB,MAqBAC,EAAO,CAClBC,IAAK,MACLC,MAAO,QACPC,aAAc,cACdC,IAAK,SACLC,MAAO,QACPC,KAAM,YACNC,GAAI,UACJC,MAAO,aACPC,KAAM,YACNC,WAAY,YACZC,YAAa,aACbC,UAAW,cACXC,WAAY,eACZC,SAAU,UACVC,UAAW,WACXC,QAAS,SACTC,UAAW,WACXC,KAAM,OACNC,IAAK,MACLC,UAAW,YACXC,OAAQ,yCAjEJ,SAA8BC,GAClC,MAAsB,cAAfA,EAAMC,MAAuC,WAAfD,EAAMC,IAC7C,2BAoFuCD,GAlBX,CAACA,IAC3B,OAAQA,EAAMC,MACZ,KAAKvB,EAAKU,WACV,KAAKV,EAAKW,YACV,KAAKX,EAAKY,UACV,KAAKZ,EAAKa,WACV,KAAKb,EAAKc,SACV,KAAKd,EAAKe,UACR,OAAO,EACT,QACE,OAAOO,EAAME,SAAWF,EAAMG,QACjC,EAQMC,CAAaJ,IALO,CAACA,GACrB,uBAAuBK,KAAKL,EAAMC,MAIXK,CAAcN,iBAnDlBA,IAC1B,MAAMO,SAAEA,GAAa/B,EACrB,MACgB,QAAb+B,GAAsBP,EAAME,SAAWF,EAAMQ,UAA0B,MAAdR,EAAMS,MACjD,YAAbF,GAAuC,YAAbA,IAA2BP,EAAMG,SAAyB,MAAdH,EAAMS,GAC9E,gBA/BE,SAAsBT,GAC1B,OAC6B,QAAzBxB,EAAY+B,UAAsBP,EAAME,UACb,YAAzB1B,EAAY+B,UAAmD,YAAzB/B,EAAY+B,WAA2BP,EAAMG,UACxE,SAAfH,EAAMC,IAEV,gBAO4BD,IAC1B,MAAMO,SAAEA,GAAa/B,EACrB,MACgB,QAAb+B,GAAsBP,EAAME,UAAYF,EAAMQ,UAA0B,MAAdR,EAAMS,MAClD,YAAbF,GAAuC,YAAbA,IAA4BP,EAAMG,SAAyB,MAAdH,EAAMS,GAC/E"}