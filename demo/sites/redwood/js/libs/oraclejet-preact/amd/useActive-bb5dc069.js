define(['exports', './useToggle-a29f97af', 'preact/hooks'], (function(e,s,o){"use strict";const n=e=>!(1&~(void 0!==e.buttons?e.buttons:e.which));e.useActive=function({isDisabled:e,disabledKeys:u}={isDisabled:!1}){const{bool:c,setTrue:t,setFalse:a}=s.useToggle(!1),l=o.useRef(!1),r=o.useCallback((e=>{n(e)&&t()}),[t]),i=o.useCallback((e=>{n(e)&&(l.current=!0),a()}),[a]),b=o.useCallback((e=>{l.current&&(n(e)&&t(),l.current=!1)}),[t]),d=o.useCallback((e=>{(" "===e.key&&!u?.includes("space")||"Enter"===e.key&&!u?.includes("enter"))&&t()}),[t,u]),k=o.useCallback((()=>{a()}),[a]),f=o.useCallback((()=>{a()}),[a]);return o.useEffect((()=>{e&&a()}),[e,a]),{isActive:!e&&c,activeProps:e?{}:{onMouseDown:r,onMouseLeave:i,onMouseEnter:b,onMouseUp:a,onTouchStart:t,onTouchEnd:a,onTouchCancel:a,onKeyDown:d,onKeyUp:k,onBlur:f}}}}));
//# sourceMappingURL=useActive-bb5dc069.js.map
