{"version":3,"file":"useSortableContext-e9cb03f3.js","sources":["../../src/hooks/UNSAFE_useSortableContext/SortableContext.ts","../../src/hooks/UNSAFE_useSortableContext/useSortableContext.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext } from 'preact';\n\n/**\n * Sortable Context\n */\ntype SortableContextProps = {\n  isRendered?: boolean;\n\n  sortable?: 'enabled' | 'disabled';\n\n  sortDirection?: 'ascending' | 'descending' | 'unsorted';\n\n  onSort?: () => void;\n};\n\n/**\n * Context which the parent custom element components can use for passing down\n * the sort context\n */\nexport const SortableContext = createContext<SortableContextProps>({});\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\nimport { SortableContext } from './SortableContext';\n\n/**\n * Uses the SortableContext if one is available.\n *\n * @returns The context from the closest provider\n */\nexport function useSortableContext() {\n  return useContext(SortableContext);\n}\n"],"names":["SortableContext","createContext","useContext"],"mappings":"+EA2BaA,EAAkBC,EAAaA,cAAuB,CAAE,uDCVnE,OAAOC,EAAAA,WAAWF,EACpB"}