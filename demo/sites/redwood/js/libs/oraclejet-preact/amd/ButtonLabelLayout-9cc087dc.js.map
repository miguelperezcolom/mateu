{"version":3,"file":"ButtonLabelLayout-9cc087dc.js","sources":["../../src/UNSAFE_ButtonLabelLayout/ButtonLabelLayout.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, ComponentProps } from 'preact';\nimport { BaseButton } from '../UNSAFE_BaseButton';\nimport { Text } from '../UNSAFE_Text';\nimport { useButtonLabelLayoutTheme } from '#hooks/PRIVATE_useButtonLabelLayoutTheme';\n\nexport type ButtonDisplay = 'icons' | 'label' | 'all';\nexport type LayoutSizes =\n  | ComponentProps<typeof BaseButton>['size']\n  | 'embeddedxs'\n  | 'embeddedsm'\n  | 'embeddedmd'\n  | 'embeddedlg';\n\nexport type Props = {\n  /**\n   *The default slot is the button's text label. The oj-c-button element accepts plain text or DOM nodes as children for the default slot.\"\n   */\n  children?: ComponentChildren;\n\n  /**\n   *The suffix is appended to the text label, used for menu buttons.\n   */\n  suffix?: string;\n\n  /**\n   * The startIcon is the button's start icon.\n   */\n  startIcon?: ComponentChildren;\n\n  /**\n   * The endIcon is the button's end icon.\n   */\n  endIcon?: ComponentChildren;\n\n  /**\n   * Styling can be used for customizing icon layout by limiting padding (\"embedded\")\n   * The label can fill available width (\"fill\").\n   */\n  styling?: 'default' | 'embedded' | 'fill';\n\n  /**\n   * The size indicates how large the button is rendered.\n   */\n  size?: ComponentProps<typeof BaseButton>['size'];\n\n  /**\n   * Display indicates whether the label, the icons, or all elements should be rendered by the button.\n   */\n  display?: ButtonDisplay;\n};\n\nexport function ButtonLabelLayout({\n  size = 'md',\n  display = 'all',\n  styling = 'default',\n  ...props\n}: Props) {\n  const {\n    startIconClasses,\n    labelClasses,\n    suffixClasses,\n    endIconClasses,\n    containerClasses,\n    isShowIcons,\n    isShowText\n  } = useButtonLabelLayoutTheme({ display, size, styling, ...props });\n\n  return (\n    <span class={containerClasses}>\n      {isShowIcons && props.startIcon && <span class={startIconClasses}>{props.startIcon}</span>}\n      {isShowText && props.children && <span class={labelClasses}> {props.children} </span>}\n      {isShowText && props.suffix && (\n        <span class={suffixClasses}>\n          <Text truncation={'ellipsis'} weight={'inherit'}>\n            {props.suffix}\n          </Text>\n        </span>\n      )}\n      {isShowIcons && props.endIcon && <span class={endIconClasses}>{props.endIcon}</span>}\n    </span>\n  );\n}\n\nButtonLabelLayout.displayName = 'ButtonLabelLayout';\n"],"names":["ButtonLabelLayout","size","display","styling","props","startIconClasses","labelClasses","suffixClasses","endIconClasses","containerClasses","isShowIcons","isShowText","useButtonLabelLayoutTheme","_jsxs","class","children","startIcon","_jsx","suffix","jsx","Text","truncation","weight","endIcon","displayName"],"mappings":"0IA0DgBA,GAAkBC,KAChCA,EAAO,KAAIC,QACXA,EAAU,MAAKC,QACfA,EAAU,aACPC,IAEH,MAAMC,iBACJA,EAAgBC,aAChBA,EAAYC,cACZA,EAAaC,eACbA,EAAcC,iBACdA,EAAgBC,YAChBA,EAAWC,WACXA,GACEC,EAAyBA,0BAAC,CAAEV,UAASD,OAAME,aAAYC,IAE3D,OACES,EAAAA,KAAM,OAAA,CAAAC,MAAOL,EAAgBM,SAAA,CAC1BL,GAAeN,EAAMY,WAAaC,EAAAA,IAAM,OAAA,CAAAH,MAAOT,EAAgBU,SAAGX,EAAMY,YACxEL,GAAcP,EAAMW,UAAYF,EAAAA,aAAMC,MAAOR,EAAYS,SAAA,CAAA,IAAIX,EAAMW,gBACnEJ,GAAcP,EAAMc,QACnBD,EAAME,IAAA,OAAA,CAAAL,MAAOP,EAAaQ,SACxBE,MAACG,EAAIA,KAAA,CAACC,WAAY,WAAYC,OAAQ,UAASP,SAC5CX,EAAMc,WAIZR,GAAeN,EAAMmB,SAAWN,EAAAA,IAAA,OAAA,CAAMH,MAAON,WAAiBJ,EAAMmB,YAG3E,CAEAvB,EAAkBwB,YAAc"}