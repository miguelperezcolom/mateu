{"version":3,"file":"Dropdown-9d52501e.js","sources":["../../src/UNSAFE_Dropdown/Dropdown.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps, RefObject, JSX } from 'preact';\nimport { useCallback, useRef } from 'preact/hooks';\n\nimport { Floating } from '../UNSAFE_Floating';\nimport { Layer } from '../UNSAFE_Layer';\nimport { KEYS } from '../utils/PRIVATE_keyboardUtils';\nimport { focusWithin } from '../utils/PRIVATE_tabbableUtils';\nimport { usePopupAnimation } from '#UNSAFE_Popup/usePopupAnimation';\nimport { getTransformOrigin } from '#utils/PRIVATE_popupAnimationUtils';\nimport { AnimationPopupElement } from '../UNSAFE_Popup/usePopupAnimation';\nimport { CollectionInteractionContext } from '#hooks/UNSAFE_useCollectionInteractionContext';\n\nimport { dropdownStyles } from './themes/dropdownStyles.css';\nimport { useOutsideMousedown } from '../hooks/PRIVATE_useOutsideMousedown';\nimport {\n  DURATION_LARGE,\n  SCALE_UP_FULL,\n  mergeAnimationStateObjects\n} from '#utils/PRIVATE_animationUtils';\n\nimport { UnsafeDomHandle, UNSAFE_DOM_ACCESS } from '#utils/UNSAFE_unsafeDomAccess';\n\ntype FloatingProps = ComponentProps<typeof Floating>;\n\n//Same as Menu onClose, only difference is mouseDown instead of outside click\n//Once menu consumes dropdown is going to start using mouseDown\nexport type CloseDetail = { reason: 'dismissed' } | { reason: 'outsideMousedown'; target: Element };\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\n\ntype Props = IntrinsicProps & {\n  /**\n   *Specifies whether Dropdown is open.\n   * @default false\n   */\n  isOpen?: boolean;\n  /**\n   * Trigger element reference.\n   */\n  anchorRef: FloatingProps['anchorRef'];\n  /**\n   * Id of the dropdown container.\n   * Used usually for accesibility reasons.\n   */\n  id?: string;\n  /**\n   * Called when dropdown is supposed to be closed.\n   * Called when user tab/esc or mouseDown outside the dropdown.\n   */\n  onClose?: (detail: CloseDetail) => void;\n  /**\n   *Min width represented in pixels of the dropdown container.\n   */\n  minWidth?: number;\n  /**\n   * Placement of the floating element relative to its reference element.\n   */\n  placement?: FloatingProps['placement'];\n  /**\n   * Offset displaces the floating element from its core placement along the specified axes.\n   */\n  offset?: FloatingProps['offsetValue'];\n  /**\n   * Triggered when placement or coordinates are changed after collision is detected.\n   */\n  onPosition?: FloatingProps['onPosition'];\n  /**\n   * Specifies the flipping behavior along the respective axis.\n   */\n  flipOptions?: FloatingProps['flipOptions'];\n  /**\n   * Specifies the resizing behaviour for max-height and max-width of the floating component.\n   */\n  sizeOptions?: FloatingProps['sizeOptions'];\n\n  /**\n   *  Specifies the shift behavior along the respective axis\n   */\n  shiftOptions?: FloatingProps['shiftOptions'];\n  /**\n   * Specifies initial focus.\n   * @default 'none'\n   */\n  initialFocus?: 'none' | 'firstFocusable';\n};\n\nconst DEFAULT_PLACEMENT = 'bottom-start';\nconst DEFAULT_OFFSET = { mainAxis: 4, crossAxis: 0 };\nconst DEFAULT_SIZE_OPTIONS = { isMaxWidthAdjusted: true, isMaxHeightAdjusted: true };\nconst DEFAULT_FLIP_OPTIONS = { mainAxis: true, crossAxis: true };\n\nconst animationStates: Parameters<typeof usePopupAnimation>[0]['animationStates'] = {\n  opening: (node: AnimationPopupElement) => {\n    return mergeAnimationStateObjects(\n      [\n        SCALE_UP_FULL,\n        {\n          from: { transformOrigin: getTransformOrigin(node.placement, node.direction) },\n          to: { transformOrigin: getTransformOrigin(node.placement, node.direction) }\n        }\n      ],\n      {\n        duration: DURATION_LARGE\n      }\n    );\n  }\n};\n\n//TODO: Add animation to dropdown. JET-62628\n//TODO: Investigate best approach to have different virtual padding depending on the position and implement it.JET-57950\nexport function Dropdown({\n  isOpen = false,\n  anchorRef,\n  children,\n  id,\n  onClose,\n  minWidth,\n  placement = DEFAULT_PLACEMENT,\n  offset = DEFAULT_OFFSET,\n  onPosition,\n  flipOptions = DEFAULT_FLIP_OPTIONS,\n  sizeOptions = DEFAULT_SIZE_OPTIONS,\n  shiftOptions,\n  initialFocus = 'none'\n}: Props) {\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const onTransitionEnd = useCallback(\n    (isOpen: boolean) => {\n      if (isOpen && initialFocus === 'firstFocusable') {\n        const dropdownElement = dropdownRef.current;\n        if (dropdownElement) {\n          focusWithin(dropdownElement);\n        }\n      }\n    },\n    [initialFocus]\n  );\n\n  const {\n    status,\n    setAnimationElementRef,\n    onPosition: onPositionAnimated\n  } = usePopupAnimation({\n    isOpen,\n    placement,\n    isAnimatedOnMount: true,\n    animationStates,\n    onPosition,\n    onTransitionEnd\n  });\n\n  const handleMousedownClose = useCallback(\n    (event: MouseEvent) => {\n      onClose?.({ reason: 'outsideMousedown', target: event.target as Element });\n    },\n    [onClose]\n  );\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      switch (event.code) {\n        case KEYS.ESC:\n          onClose?.({ reason: 'dismissed' });\n          break;\n        case KEYS.TAB:\n          onClose?.({ reason: 'dismissed' });\n          break;\n        default:\n          break;\n      }\n    },\n    [onClose]\n  );\n\n  // use the mousedown event to be consistent with legacy JET\n  useOutsideMousedown({\n    isDisabled: false,\n    ref: [dropdownRef],\n    handler: handleMousedownClose\n  });\n\n  return (\n    <>\n      {status !== 'unmounted' ? (\n        <Layer logicalParentRef={toLogicalParentRef(anchorRef)}>\n          <Floating\n            anchorRef={anchorRef}\n            ref={setAnimationElementRef}\n            placement={placement}\n            flipOptions={flipOptions}\n            shiftOptions={shiftOptions}\n            sizeOptions={sizeOptions}\n            offsetValue={offset}\n            onPosition={onPositionAnimated}\n            boundaryOptions={{ padding: { top: 8, bottom: 8, left: 0, right: 0 } }}>\n            <div\n              ref={dropdownRef}\n              id={id}\n              class={dropdownStyles.base}\n              style={{ minWidth: `${minWidth || 0}px` }}\n              onKeyDown={handleKeyDown}>\n              <CollectionInteractionContext.Provider value={'embedded'}>\n                {children}\n              </CollectionInteractionContext.Provider>\n            </div>\n          </Floating>\n        </Layer>\n      ) : null}\n    </>\n  );\n}\n\nfunction toLogicalParentRef(anchorRef: FloatingProps['anchorRef']) {\n  const current = anchorRef.current;\n\n  if (current) {\n    if (current instanceof Element) {\n      return anchorRef as RefObject<Element>;\n    } else if ((current as UnsafeDomHandle<Element>)[UNSAFE_DOM_ACCESS]) {\n      return anchorRef as RefObject<UnsafeDomHandle<Element>>;\n    }\n  }\n\n  return null;\n}\n"],"names":["DEFAULT_OFFSET","mainAxis","crossAxis","DEFAULT_SIZE_OPTIONS","isMaxWidthAdjusted","isMaxHeightAdjusted","DEFAULT_FLIP_OPTIONS","animationStates","opening","node","mergeAnimationStateObjects","SCALE_UP_FULL","from","transformOrigin","getTransformOrigin","placement","direction","to","duration","DURATION_LARGE","toLogicalParentRef","anchorRef","current","Element","UNSAFE_DOM_ACCESS","isOpen","children","id","onClose","minWidth","offset","onPosition","flipOptions","sizeOptions","shiftOptions","initialFocus","dropdownRef","useRef","onTransitionEnd","useCallback","dropdownElement","focusWithin","status","setAnimationElementRef","onPositionAnimated","usePopupAnimation","isAnimatedOnMount","handleMousedownClose","event","reason","target","handleKeyDown","defaultPrevented","code","KEYS","ESC","TAB","useOutsideMousedown","isDisabled","ref","handler","_jsx","_Fragment","jsx","Layer","logicalParentRef","Floating","offsetValue","boundaryOptions","padding","top","bottom","left","right","class","dropdownStyles","base","style","onKeyDown","CollectionInteractionContext","Provider","value"],"mappings":"ueA8FA,MACMA,EAAiB,CAAEC,SAAU,EAAGC,UAAW,GAC3CC,EAAuB,CAAEC,oBAAoB,EAAMC,qBAAqB,GACxEC,EAAuB,CAAEL,UAAU,EAAMC,WAAW,GAEpDK,EAA8E,CAClFC,QAAUC,GACDC,6BACL,CACEC,EAAaA,cACb,CACEC,KAAM,CAAEC,gBAAiBC,EAAkBA,mBAACL,EAAKM,UAAWN,EAAKO,YACjEC,GAAI,CAAEJ,gBAAiBC,EAAkBA,mBAACL,EAAKM,UAAWN,EAAKO,cAGnE,CACEE,SAAUC,EAAcA,kBAkHhC,SAASC,EAAmBC,GAC1B,MAAMC,EAAUD,EAAUC,QAE1B,GAAIA,EAAS,CACX,GAAIA,aAAmBC,QACrB,OAAOF,EACF,GAAKC,EAAqCE,EAAAA,mBAC/C,OAAOH,CAEV,CAED,OAAO,IACT,sBAtHyBI,OACvBA,GAAS,EAAKJ,UACdA,EAASK,SACTA,EAAQC,GACRA,EAAEC,QACFA,EAAOC,SACPA,EAAQd,UACRA,EA/BwB,eA+BKe,OAC7BA,EAAS9B,EAAc+B,WACvBA,EAAUC,YACVA,EAAc1B,EAAoB2B,YAClCA,EAAc9B,EAAoB+B,aAClCA,EAAYC,aACZA,EAAe,SAEf,MAAMC,EAAcC,SAAuB,MAErCC,EAAkBC,eACrBd,IACC,GAAIA,GAA2B,mBAAjBU,EAAmC,CAC/C,MAAMK,EAAkBJ,EAAYd,QAChCkB,GACFC,EAAWA,YAACD,EAEf,IAEH,CAACL,KAGGO,OACJA,EAAMC,uBACNA,EACAZ,WAAYa,GACVC,EAAAA,kBAAkB,CACpBpB,SACAV,YACA+B,mBAAmB,EACnBvC,kBACAwB,aACAO,oBAGIS,EAAuBR,eAC1BS,IACCpB,IAAU,CAAEqB,OAAQ,mBAAoBC,OAAQF,EAAME,QAAoB,GAE5E,CAACtB,IAGGuB,EAAgBZ,eACnBS,IACC,IAAIA,EAAMI,iBAGV,OAAQJ,EAAMK,MACZ,KAAKC,EAAIA,KAACC,IAGV,KAAKD,EAAIA,KAACE,IACR5B,IAAU,CAAEqB,OAAQ,cAIvB,GAEH,CAACrB,IAUH,OANA6B,sBAAoB,CAClBC,YAAY,EACZC,IAAK,CAACvB,GACNwB,QAASb,IAITc,EAAAA,IAAAC,EAAAA,SAAA,CAAApC,SACc,cAAXgB,EACCmB,EAAAE,IAACC,QAAK,CAACC,iBAAkB7C,EAAmBC,GAC1CK,SAAAmC,EAAAA,IAACK,EAAAA,SAAQ,CACP7C,UAAWA,EACXsC,IAAKhB,EACL5B,UAAWA,EACXiB,YAAaA,EACbE,aAAcA,EACdD,YAAaA,EACbkC,YAAarC,EACbC,WAAYa,EACZwB,gBAAiB,CAAEC,QAAS,CAAEC,IAAK,EAAGC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,IACjE/C,SAAAmC,MAAA,MAAA,CACEF,IAAKvB,EACLT,GAAIA,EACJ+C,MAAOC,iBAAeC,KACtBC,MAAO,CAAEhD,SAAU,GAAGA,GAAY,OAClCiD,UAAW3B,EACXzB,SAAAmC,MAACkB,EAAAA,6BAA6BC,SAAS,CAAAC,MAAO,WAC3CvD,SAAAA,UAKP,MAGV"}