{"version":3,"file":"usePointerGesture-1c1dd806.js","sources":["../../src/PRIVATE_TimeComponent/hooks/usePointerGesture.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { RefObject } from 'preact';\nimport { useRef } from 'preact/hooks';\n\ntype PointerGesture = {\n  pointers: PointerEvent[];\n};\n\ntype UsePointerGestureOptions = {\n  captureTargetRef: RefObject<HTMLDivElement>;\n  numPointers: number;\n  onPointerGestureDown?: (detail: PointerGesture) => void;\n  onPointerGestureMove?: (detail: PointerGesture) => void;\n  onPointerGestureEnd?: (detail: PointerGesture) => void;\n  onExtraneousPointerDown?: (detail: PointerGesture) => void;\n  isDisabled?: boolean;\n};\n\n/**\n * Hook that enables and handles (multi) pointer gestures.\n */\nconst usePointerGesture = ({\n  captureTargetRef,\n  numPointers = 1,\n  onPointerGestureDown,\n  onPointerGestureMove,\n  onPointerGestureEnd,\n  onExtraneousPointerDown,\n  isDisabled = false\n}: UsePointerGestureOptions) => {\n  const activePointers = useRef<PointerEvent[]>([]);\n\n  if (isDisabled) {\n    activePointers.current = [];\n  }\n\n  const onPointerDown = (e: PointerEvent) => {\n    activePointers.current.push(e);\n    if (activePointers.current.length === numPointers) {\n      activePointers.current.forEach((e) =>\n        captureTargetRef.current!.setPointerCapture(e.pointerId)\n      );\n      onPointerGestureDown && onPointerGestureDown({ pointers: activePointers.current });\n    } else if (activePointers.current.length > numPointers) {\n      onExtraneousPointerDown && onExtraneousPointerDown({ pointers: activePointers.current });\n    }\n  };\n\n  const onPointerMove = (e: PointerEvent) => {\n    if (activePointers.current.length === 0) return;\n\n    const index = activePointers.current.findIndex(\n      (pointerEvent) => pointerEvent.pointerId === e.pointerId\n    );\n    if (index === -1) return;\n\n    activePointers.current[index] = e;\n    if (activePointers.current.length === numPointers) {\n      onPointerGestureMove && onPointerGestureMove({ pointers: activePointers.current });\n    }\n  };\n\n  const onPointerUp = (e: PointerEvent) => {\n    const index = activePointers.current.findIndex(\n      (pointerEvent) => pointerEvent.pointerId === e.pointerId\n    );\n    if (index === -1) return;\n\n    activePointers.current[index] = e;\n    if (activePointers.current.length === numPointers) {\n      onPointerGestureEnd && onPointerGestureEnd({ pointers: activePointers.current });\n    }\n    activePointers.current.splice(index, 1);\n  };\n\n  const onPointerCancel = onPointerUp;\n  const onPointerOut = onPointerUp;\n  const onPointerLeave = onPointerUp;\n\n  return isDisabled\n    ? {}\n    : {\n        onPointerDown,\n        onPointerMove,\n        onPointerUp,\n        onPointerCancel,\n        onPointerOut,\n        onPointerLeave\n      };\n};\n\nexport { usePointerGesture };\n"],"names":["captureTargetRef","numPointers","onPointerGestureDown","onPointerGestureMove","onPointerGestureEnd","onExtraneousPointerDown","isDisabled","activePointers","useRef","current","onPointerUp","e","index","findIndex","pointerEvent","pointerId","length","pointers","splice","onPointerDown","push","forEach","setPointerCapture","onPointerMove","onPointerCancel","onPointerOut","onPointerLeave"],"mappings":"kFA2B0B,EACxBA,mBACAC,cAAc,EACdC,uBACAC,uBACAC,sBACAC,0BACAC,cAAa,MAEb,MAAMC,EAAiBC,SAAuB,IAE1CF,IACFC,EAAeE,QAAU,IAG3B,MA0BMC,EAAeC,IACnB,MAAMC,EAAQL,EAAeE,QAAQI,WAClCC,GAAiBA,EAAaC,YAAcJ,EAAEI,aAElC,IAAXH,IAEJL,EAAeE,QAAQG,GAASD,EAC5BJ,EAAeE,QAAQO,SAAWf,GACpCG,GAAuBA,EAAoB,CAAEa,SAAUV,EAAeE,UAExEF,EAAeE,QAAQS,OAAON,EAAO,GAAE,EAOzC,OAAON,EACH,CAAE,EACF,CACEa,cA9CiBR,IACrBJ,EAAeE,QAAQW,KAAKT,GACxBJ,EAAeE,QAAQO,SAAWf,GACpCM,EAAeE,QAAQY,SAASV,GAC9BX,EAAiBS,QAASa,kBAAkBX,EAAEI,aAEhDb,GAAwBA,EAAqB,CAAEe,SAAUV,EAAeE,WAC/DF,EAAeE,QAAQO,OAASf,GACzCI,GAA2BA,EAAwB,CAAEY,SAAUV,EAAeE,SAC/E,EAsCGc,cAnCiBZ,IACrB,GAAsC,IAAlCJ,EAAeE,QAAQO,OAAc,OAEzC,MAAMJ,EAAQL,EAAeE,QAAQI,WAClCC,GAAiBA,EAAaC,YAAcJ,EAAEI,aAElC,IAAXH,IAEJL,EAAeE,QAAQG,GAASD,EAC5BJ,EAAeE,QAAQO,SAAWf,GACpCE,GAAwBA,EAAqB,CAAEc,SAAUV,EAAeE,UACzE,EAyBGC,cACAc,gBAVkBd,EAWlBe,aAVef,EAWfgB,eAViBhB,EAWlB"}