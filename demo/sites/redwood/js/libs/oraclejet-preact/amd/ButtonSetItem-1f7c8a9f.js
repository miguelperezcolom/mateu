define(['exports', 'preact/jsx-runtime', './ButtonSetButton-722af7d2', './ButtonSetIconButton-e65f43db', 'preact/hooks', './useButtonSetContext-dffdaea3', './ButtonSetPositionContext-fd98cc11', './useButtonSetPositionContext-b8534679', './toggleButtonUtils-0ebe4c56'], (function(t,e,o,n,u,s,i,l,a){"use strict";const c=({isDisabled:t,...i})=>{const{display:c,inputType:B,isDisabled:S,buttonSetValue:r,onCommit:v,...b}=s.useButtonSetContext(),f=l.useButtonSetPositionContext(),p=t??S,x={tooltip:i.label,value:i.value},g="radio"===B,C=u.useCallback((()=>{g&&v?.({previousValue:r,value:[i.value]})}),[r,v,g,i.value]),m=u.useCallback((()=>{if(!g){const t=a.toggleButtonSetItem(i.value,r);v?.({previousValue:r,value:t})}}),[r,v,g,i.value]);return"icons"===c?e.jsx(n.ButtonSetIconButton,{isSelected:d(i.value,r),onToggle:g?C:m,isDisabled:p,...x,...f,...b,children:i.startIcon}):e.jsx(o.ButtonSetButton,{isSelected:d(i.value,r),onToggle:g?C:m,isDisabled:p,...i,...f,...b})};function d(t,e){return!!e&&e?.indexOf(t)>-1}c.displayName="ButtonSetItem",t.ButtonSetItem=c}));
//# sourceMappingURL=ButtonSetItem-1f7c8a9f.js.map
