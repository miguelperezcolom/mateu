{"version":3,"file":"WindowOverlay-bd810e3b.js","sources":["../../src/UNSAFE_WindowOverlay/WindowOverlay.tsx"],"sourcesContent":["import type { JSX } from 'preact';\nimport type { UnpackSignals } from '@oracle/oraclejet-internal-utilities/attributeUtils';\nimport { mergeInterpolations } from '../utils/UNSAFE_mergeInterpolations';\n\nimport { assignInlineVars } from '@vanilla-extract/dynamic';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { windowOverlayStyles } from './themes/WindowOverlayStyles.css';\nimport { windowOverlayVars } from './themes/WindowOverlayContract.css';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport type { Offset } from '../UNSAFE_Floating';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { WindowOverlayRedwoodTheme } from './themes/redwood/WindowOverlayTheme';\n\nexport type { Offset };\n\ntype IntrinsicProps = Pick<UnpackSignals<JSX.IntrinsicElements['div']>, 'children'>;\n\nexport type WindowOverlayPlacement =\n  | 'center'\n  | 'top'\n  | 'top-start'\n  | 'top-end'\n  | 'start'\n  | 'start-top'\n  | 'start-bottom'\n  | 'bottom'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'end'\n  | 'end-top'\n  | 'end-bottom';\n\nconst offsetStyle = (offset?: Offset) => {\n  return typeof offset === 'number'\n    ? assignInlineVars({\n        [windowOverlayVars.notificationMainAxisOffset]: `${offset}px`,\n        [windowOverlayVars.notificationCrossAxisOffset]: `0px`\n      })\n    : assignInlineVars({\n        [windowOverlayVars.notificationMainAxisOffset]: `${offset?.mainAxis ?? 0}px`,\n        [windowOverlayVars.notificationCrossAxisOffset]: `${offset?.crossAxis ?? 0}px`\n      });\n};\n\ntype WindowOverlayProps = IntrinsicProps & {\n  /**\n   * Offset displaces the child element of the WindowOverlay component from its core placement along the specified axes.\n   *\n   * Offset could be a number or an object\n   *\n   * An object has the following type:\n   * <pre>\n   *   {\n   *     mainAxis?: number;\n   *     crossAxis?: number;\n   *   }\n   * </pre>\n   * <p><code>mainAxis</code> - represents the distance (gutter or margin) between the child element and the viewport along the mainAxis.</p>\n   * <p><code>crossAxis</code> - represents the distance (gutter or margin) between the child element and the viewport along the crossAxis.</p>\n   *\n   * where,\n   * <p>The <code>mainAxis</code> is an axis that runs along the side of the placement, i.e. the part before the hyphen (top-*, bottom-*, start-*, end-*).</p>\n   * <p>The <code>crossAxis</code> is an axis that runs along the alignment of the placement, i.e. the part after the hyphen (*-start, *-end, *-top, *-bottom).</p>\n   *\n   * For the placement value 'center' the convention for the offset type is that mainAxis defines offset from the top, crossAxis defines offset from the left side of the view port.\n   *\n   * A number is a shortcut for setting the mainAxis.\n   */\n  offset?: Offset;\n  /**\n   * Placement of the WindowOverlay element relative to the viewport.\n   * Possible values are:\n   * <p> <code>'center' </code> <code>'top' </code> <code>'top-start' </code> <code> 'top-end' </code>\n   * <code> 'end' </code> <code> 'end-top'  </code> <code> 'end-bottom' </code>\n   * <code> 'bottom'  </code> <code> 'bottom-start'  </code> <code> 'bottom-end' </code>\n   * <code> 'start' </code> <code> 'start-top'  </code> <code> 'start-bottom' </code>\n   * </p>\n   */\n  placement?: WindowOverlayPlacement;\n};\n\n/**\n * A WindowOverlay component allows the user to place a child component relative to the viewport\n */\nexport const WindowOverlay = ({ children, ...props }: WindowOverlayProps) => {\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n\n  if (props.placement == null) {\n    props.placement = 'center';\n  }\n\n  const { styles, baseTheme: windowOverlayTheme } = useComponentTheme(WindowOverlayRedwoodTheme);\n  const { baseStyle, gridStyles, placementStyles } = styles;\n\n  const placementInterpolations = [\n    ({ placement = 'center' }: Pick<WindowOverlayProps, 'placement'>) => ({\n      class: placementStyles[placement]\n    })\n  ];\n\n  const interpolations = [...Object.values(placementInterpolations)];\n\n  const styleInterpolations = mergeInterpolations<WindowOverlayProps>(interpolations);\n\n  const { class: cls, ...allStyles } = styleInterpolations(props);\n\n  const offsetClasses = (position?: string, isLtr?: boolean, theme?: string) => {\n    if (position == null) {\n      return;\n    }\n    let logicalPosition;\n    switch (position) {\n      case 'top-start':\n      case 'center':\n        logicalPosition = isLtr\n          ? windowOverlayStyles['top-left']\n          : windowOverlayStyles['top-right'];\n        break;\n      case 'top-end':\n        logicalPosition = isLtr\n          ? windowOverlayStyles['top-right']\n          : windowOverlayStyles['top-left'];\n        break;\n      case 'bottom-start':\n        logicalPosition = isLtr\n          ? windowOverlayStyles['bottom-left']\n          : windowOverlayStyles['bottom-right'];\n        break;\n      case 'bottom-end':\n        logicalPosition = isLtr\n          ? windowOverlayStyles['bottom-right']\n          : windowOverlayStyles['bottom-left'];\n        break;\n      case 'start-top':\n        logicalPosition = isLtr\n          ? windowOverlayStyles['left-top']\n          : windowOverlayStyles['right-top'];\n        break;\n      case 'end-top':\n        logicalPosition = isLtr\n          ? windowOverlayStyles['right-top']\n          : windowOverlayStyles['left-top'];\n        break;\n      case 'start-bottom':\n        logicalPosition = isLtr\n          ? windowOverlayStyles['left-bottom']\n          : windowOverlayStyles['right-bottom'];\n        break;\n      case 'end-bottom':\n        logicalPosition = isLtr\n          ? windowOverlayStyles['right-bottom']\n          : windowOverlayStyles['left-bottom'];\n        break;\n      case 'start':\n        logicalPosition = isLtr ? windowOverlayStyles['left'] : windowOverlayStyles['right'];\n        break;\n      case 'end':\n        logicalPosition = isLtr ? windowOverlayStyles['right'] : windowOverlayStyles['left'];\n        break;\n      case 'top':\n        logicalPosition = windowOverlayStyles['top'];\n        break;\n      case 'bottom':\n        logicalPosition = windowOverlayStyles['bottom'];\n        break;\n      default:\n        break;\n    }\n    return classNames([windowOverlayStyles.notificationPosition, logicalPosition, theme]);\n  };\n  const classes = offsetClasses(props.placement, isLtr, windowOverlayTheme);\n\n  const windowOverlayOffsetStyle = offsetStyle(props.offset);\n\n  return (\n    <div class={classNames([baseStyle, gridStyles, cls])} style={allStyles}>\n      <div\n        class={classes}\n        style={windowOverlayOffsetStyle !== undefined ? windowOverlayOffsetStyle : undefined}>\n        {children}\n      </div>\n    </div>\n  );\n};\n"],"names":["children","props","direction","useUser","isLtr","placement","styles","baseTheme","windowOverlayTheme","useComponentTheme","WindowOverlayRedwoodTheme","baseStyle","gridStyles","placementStyles","placementInterpolations","class","interpolations","Object","values","styleInterpolations","mergeInterpolations","cls","allStyles","classes","position","theme","logicalPosition","windowOverlayStyles","classNames","notificationPosition","offsetClasses","windowOverlayOffsetStyle","offset","assignInlineVars","windowOverlayVars","notificationMainAxisOffset","notificationCrossAxisOffset","mainAxis","crossAxis","_jsx","style","undefined"],"mappings":"uaAoF6B,EAAGA,cAAaC,MAC3C,MAAMC,UAAEA,GAAcC,EAAAA,UAChBC,EAAsB,QAAdF,EAES,MAAnBD,EAAMI,YACRJ,EAAMI,UAAY,UAGpB,MAAMC,OAAEA,EAAQC,UAAWC,GAAuBC,EAAAA,kBAAkBC,EAAAA,4BAC9DC,UAAEA,EAASC,WAAEA,EAAUC,gBAAEA,GAAoBP,EAE7CQ,EAA0B,CAC9B,EAAGT,YAAY,aAAuD,CACpEU,MAAOF,EAAgBR,MAIrBW,EAAiB,IAAIC,OAAOC,OAAOJ,IAEnCK,EAAsBC,sBAAwCJ,IAE5DD,MAAOM,KAAQC,GAAcH,EAAoBlB,GAkEnDsB,EAhEgB,EAACC,EAAmBpB,EAAiBqB,KACzD,GAAgB,MAAZD,EACF,OAEF,IAAIE,EACJ,OAAQF,GACN,IAAK,YACL,IAAK,SACHE,EAAkBtB,EACduB,EAAAA,oBAAoB,YACpBA,EAAmBA,oBAAC,aACxB,MACF,IAAK,UACHD,EAAkBtB,EACduB,EAAAA,oBAAoB,aACpBA,EAAmBA,oBAAC,YACxB,MACF,IAAK,eACHD,EAAkBtB,EACduB,EAAAA,oBAAoB,eACpBA,EAAmBA,oBAAC,gBACxB,MACF,IAAK,aACHD,EAAkBtB,EACduB,EAAAA,oBAAoB,gBACpBA,EAAmBA,oBAAC,eACxB,MACF,IAAK,YACHD,EAAkBtB,EACduB,EAAAA,oBAAoB,YACpBA,EAAmBA,oBAAC,aACxB,MACF,IAAK,UACHD,EAAkBtB,EACduB,EAAAA,oBAAoB,aACpBA,EAAmBA,oBAAC,YACxB,MACF,IAAK,eACHD,EAAkBtB,EACduB,EAAAA,oBAAoB,eACpBA,EAAmBA,oBAAC,gBACxB,MACF,IAAK,aACHD,EAAkBtB,EACduB,EAAAA,oBAAoB,gBACpBA,EAAmBA,oBAAC,eACxB,MACF,IAAK,QACHD,EAAkBtB,EAAQuB,EAAmBA,oBAAO,KAAIA,EAAAA,oBAA2B,MACnF,MACF,IAAK,MACHD,EAAkBtB,EAAQuB,EAAmBA,oBAAQ,MAAIA,EAAAA,oBAA0B,KACnF,MACF,IAAK,MACHD,EAAkBC,EAAAA,oBAAyB,IAC3C,MACF,IAAK,SACHD,EAAkBC,EAAAA,oBAA4B,OAKlD,OAAOC,EAAAA,WAAW,CAACD,EAAmBA,oBAACE,qBAAsBH,EAAiBD,GAAO,EAEvEK,CAAc7B,EAAMI,UAAWD,EAAOI,GAEhDuB,EA5ImB,iBADNC,EA6I0B/B,EAAM+B,QA3I/CC,mBAAiB,CACf,CAACC,EAAiBA,kBAACC,4BAA6B,GAAGH,MACnD,CAACE,EAAiBA,kBAACE,6BAA8B,QAEnDH,mBAAiB,CACf,CAACC,EAAAA,kBAAkBC,4BAA6B,GAAGH,GAAQK,UAAY,MACvE,CAACH,EAAAA,kBAAkBE,6BAA8B,GAAGJ,GAAQM,WAAa,QAR7D,IAACN,EA+InB,OACEO,MAAK,MAAA,CAAAxB,MAAOa,EAAAA,WAAW,CAACjB,EAAWC,EAAYS,IAAOmB,MAAOlB,WAC3DiB,MACE,MAAA,CAAAxB,MAAOQ,EACPiB,WAAoCC,IAA7BV,EAAyCA,OAA2BU,EAASzC,SACnFA,KAGL"}