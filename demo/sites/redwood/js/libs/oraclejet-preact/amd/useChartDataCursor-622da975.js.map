{"version":3,"file":"useChartDataCursor-622da975.js","sources":["../../src/hooks/PRIVATE_useChartDataCursor/useChartDataCursor.tsx","../../src/hooks/PRIVATE_useChartDataCursor/util.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { Dimension, MarkerShapes } from '#utils/UNSAFE_visTypes/common';\nimport type {\n  DataCursorPosition,\n  DataCursorStyle,\n  OnDataCursorPositionChange,\n  Scale,\n  Info\n} from '#utils/UNSAFE_visTypes/chart';\nimport { getDataCursorCoords, getMarkerCoords } from './util';\nimport { styles } from './themes/DataCursorStyles.css';\nimport { Marker } from '#PRIVATE_SvgShapes';\nimport { useRef } from 'preact/hooks';\nimport type { ColorProps } from '#utils/UNSAFE_interpolations/colors';\nimport { colorSchemeVars } from '@oracle/oraclejet-internal-theme-contract/themeContract.css';\nimport { rgb } from '#UNSAFE_Theme';\nimport { useVisHover } from '#hooks/PRIVATE_useVisHover';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\n\ntype Props = {\n  touchResponse: 'touchStart' | 'touchHold';\n  findNearest: (x: number, y: number, y2?: number) => any;\n  dataCursorPosition?: DataCursorPosition;\n  isDataCursorEnabled?: boolean;\n  isHoriz: boolean;\n  plotAreaSpace: Dimension;\n  yScale: Scale;\n  y2Scale: Scale;\n  xScale: Scale;\n  onDataCursorPositionChange?: OnDataCursorPositionChange;\n  dataCursorStyle?: DataCursorStyle;\n  focusedItemInfo: Info;\n  getDataItemPos: (seriesIndex: number, groupIndex: number) => Dimension | undefined;\n  getMarkerInfo: (\n    seriesIndex: number,\n    groupIndex: number\n  ) => { type?: MarkerShapes; color: ColorProps['color'] };\n};\n\nexport function useChartDataCursor({\n  touchResponse,\n  findNearest,\n  dataCursorPosition,\n  onDataCursorPositionChange,\n  isDataCursorEnabled,\n  isHoriz,\n  plotAreaSpace,\n  yScale,\n  y2Scale,\n  xScale,\n  dataCursorStyle,\n  focusedItemInfo,\n  getDataItemPos,\n  getMarkerInfo\n}: Props) {\n  let dataCursorContent = null;\n  let x = dataCursorPosition?.x;\n  const y = dataCursorPosition?.y;\n  const y2 = dataCursorPosition?.y2;\n  const isSnap = dataCursorStyle?.behavior === 'snap';\n\n  const itemInfo = useRef<{ x: number; y: number; groupIndex: number; seriesIndex: number }>();\n\n  const updateDataCursor = () => {\n    const { seriesIndex, groupIndex } = focusedItemInfo;\n    const elemBounds = getDataItemPos(seriesIndex!, groupIndex!);\n    if (!elemBounds) {\n      return;\n    }\n    const px = elemBounds?.x + elemBounds.width / 2;\n    const py = elemBounds?.y + elemBounds.height / 2;\n\n    let X = xScale.invert(isHoriz ? py : px);\n    let Y = yScale?.invert(isHoriz ? px : py);\n    let Y2 = y2Scale?.invert(isHoriz ? px : py);\n\n    const neareastItemInfo = findNearest(X, Y, Y2);\n\n    if (!neareastItemInfo) {\n      return;\n    }\n\n    itemInfo.current = neareastItemInfo;\n    if (isSnap) {\n      X = xScale.invert(neareastItemInfo.x);\n      Y = yScale?.invert(neareastItemInfo.y);\n      Y2 = y2Scale?.invert(neareastItemInfo.y2);\n    }\n    onDataCursorPositionChange?.({ x: X, y: Y, y2: Y2 });\n  };\n\n  const onHover = (event: PointerEvent) => {\n    const px = event.offsetX;\n    const py = event.offsetY;\n    if (\n      px < plotAreaSpace.x ||\n      py < plotAreaSpace.y ||\n      px > plotAreaSpace.x + plotAreaSpace.width ||\n      py > plotAreaSpace.y + plotAreaSpace.height\n    ) {\n      dataCursorContent = null;\n      onDataCursorPositionChange?.({ x: undefined, y: undefined, y2: undefined });\n      return;\n    }\n\n    let X = xScale.invert(isHoriz ? py : px);\n    let Y = yScale?.invert(isHoriz ? px : py);\n    let Y2 = y2Scale?.invert(isHoriz ? px : py);\n\n    const neareastItemInfo = findNearest(X, Y, Y2);\n\n    if (!neareastItemInfo) {\n      return;\n    }\n\n    itemInfo.current = neareastItemInfo;\n    if (isSnap) {\n      X = xScale.invert(neareastItemInfo.x);\n      Y = yScale.invert(neareastItemInfo.y);\n      Y2 = y2Scale.invert(neareastItemInfo.y2);\n    }\n    onDataCursorPositionChange?.({ x: X, y: Y, y2: Y2 });\n  };\n\n  const onHoverLeave = () => {\n    onDataCursorPositionChange?.({ x: undefined, y: undefined, y2: undefined });\n    itemInfo.current = undefined;\n  };\n\n  const hoverHandlers = useVisHover(onHover, undefined, onHoverLeave, touchResponse);\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      onDataCursorPositionChange?.({ x: undefined, y: undefined, y2: undefined });\n      itemInfo.current = undefined;\n      return;\n    }\n    updateDataCursor();\n  };\n\n  const onKeyUp = (event: KeyboardEvent) => {\n    if (event.key === 'Tab' && focusedItemInfo.isCurrent) {\n      return;\n    }\n    updateDataCursor();\n  };\n\n  if (x != undefined && (y != undefined || y2 != undefined) && isDataCursorEnabled) {\n    const info = itemInfo.current || findNearest(x, y!, y2);\n    if (isSnap) {\n      x = xScale.invert(info.x);\n    }\n    const { mainLineProps, contrastLineProps } = getDataCursorCoords(\n      xScale,\n      x,\n      plotAreaSpace,\n      isHoriz,\n      dataCursorStyle\n    );\n    const { type, color } = getMarkerInfo(info.seriesIndex!, info.groupIndex!);\n    const markerType = type || 'circle';\n    // TODO: JET-65336\n    const markerDims = markerType === 'circle' ? 18 : 16;\n\n    const { tx, ty } = getMarkerCoords(info, isHoriz);\n\n    dataCursorContent = (\n      <>\n        <g class={styles.dataCursor}>\n          <line {...mainLineProps} class={styles.dataCursorLine} />\n          <line {...contrastLineProps} class={styles.contrastLine} />\n        </g>\n        {dataCursorStyle?.isMarkerDisplayed && info && (\n          <Marker\n            type={markerType}\n            tx={tx}\n            ty={ty}\n            isInteractive={true}\n            scale={1}\n            fill={color}\n            stroke={rgb(colorSchemeVars.palette.neutral[0])}\n            outerStroke={color}\n            width={markerDims}\n            height={markerDims}\n            preserveRectAspectRatio\n          />\n        )}\n      </>\n    );\n  }\n\n  return {\n    dataCursorContent,\n    dataCursorProps: isDataCursorEnabled\n      ? mergeProps(hoverHandlers, {\n          onKeyDown,\n          onKeyUp\n        })\n      : {}\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { DataCursorStyle, Scale } from '#utils/UNSAFE_visTypes/chart';\n\nexport function getDataCursorCoords(\n  xScale: Scale,\n  x: number,\n  plotAreaSpace: { x: number; y: number; height: number; width: number },\n  isHoriz: boolean,\n  dataCursorStyle?: DataCursorStyle\n) {\n  const lineColor = dataCursorStyle?.lineColor;\n  const lineStyle = dataCursorStyle?.lineStyle;\n  const y1 = isHoriz ? xScale.transform(x) : plotAreaSpace.y + plotAreaSpace.height;\n  const x1 = isHoriz ? plotAreaSpace.x : xScale.transform(x);\n\n  const y2 = isHoriz ? xScale.transform(x) : plotAreaSpace.y;\n  const x2 = isHoriz ? plotAreaSpace.x + plotAreaSpace.width : xScale.transform(x);\n\n  const lineWidth = dataCursorStyle?.lineWidth || 1;\n  return {\n    mainLineProps: {\n      x1,\n      y1,\n      x2,\n      y2,\n      style: {\n        stroke: lineColor,\n        strokeDashArray: lineStyle === 'dotted' ? 3 : lineStyle === 'dashed' ? 6 : undefined,\n        strokeWidth: lineWidth\n      }\n    },\n    contrastLineProps: {\n      x1: isHoriz ? x1 : x1 + lineWidth,\n      y1: isHoriz ? y1 + lineWidth : y1,\n      x2: isHoriz ? x2 : x2 + lineWidth,\n      y2: isHoriz ? y2 + lineWidth : y2\n    }\n  };\n}\n\nexport function getMarkerCoords(info: { x: number; y: number; y2: number }, isHoriz: boolean) {\n  return {\n    tx: isHoriz ? (info.y != undefined ? info.y : info.y2) : info.x,\n    ty: isHoriz ? info.x : info.y != undefined ? info.y : info.y2\n  };\n}\n"],"names":["touchResponse","findNearest","dataCursorPosition","onDataCursorPositionChange","isDataCursorEnabled","isHoriz","plotAreaSpace","yScale","y2Scale","xScale","dataCursorStyle","focusedItemInfo","getDataItemPos","getMarkerInfo","dataCursorContent","x","y","y2","isSnap","behavior","itemInfo","useRef","updateDataCursor","seriesIndex","groupIndex","elemBounds","px","width","py","height","X","invert","Y","Y2","neareastItemInfo","current","hoverHandlers","useVisHover","event","offsetX","offsetY","undefined","info","mainLineProps","contrastLineProps","lineColor","lineStyle","y1","transform","x1","x2","lineWidth","style","stroke","strokeDashArray","strokeWidth","getDataCursorCoords","type","color","markerType","markerDims","tx","ty","getMarkerCoords","_jsxs","jsxs","_Fragment","Fragment","children","class","styles","dataCursor","_jsx","dataCursorLine","contrastLine","isMarkerDisplayed","Marker","isInteractive","scale","fill","rgb","colorSchemeVars","palette","neutral","outerStroke","preserveRectAspectRatio","dataCursorProps","mergeProps","onKeyDown","key","onKeyUp","isCurrent"],"mappings":"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"}