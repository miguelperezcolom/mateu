define(['exports', 'preact/jsx-runtime', 'preact/hooks', './Flex-4bc3a394', './useTestId-a2e433c2', './useFocusWithin-5a504fca', './useTranslationBundle-27bf6340', './calendarDateUtils-dd5b75ee', 'preact/compat', './useHiddenTestMethod-2f1d2e7e', './useBreakpointValues-3a067093', './Button-29507a64', './UNSAFE_DatePicker/themes/DatePickerContract.css', './useComponentTheme-5aa41a8f', './UNSAFE_DatePicker/themes/redwood/DatePickerTheme', './DatePickerHeader-0572351a', './MonthView-03070f25', './YearsGridView-325ea5c8'], (function(e,a,o,t,i,n,s,r,d,c,u,l,h,y,w,v,V,p){"use strict";const m=["monthView","monthsGridView","yearsGridView","viewFocus","viewBlur"],b=["dayFocused","daySelected","goToToday","previousDay","nextDay","previousWeek","nextWeek","previousMonth","previousMonthAndFocus","nextMonth","nextMonthAndFocus","previousYear","nextYear","firstDayOfMonth","lastDayOfMonth"],D=["previousMonthInGridView","nextMonthInGridView","previousMonthRowInGridView","nextMonthRowInGridView","monthFocused","monthSelected"],F=["previousYearInGridView","nextYearInGridView","previousYearRowInGridView","nextYearRowInGridView","previousDecade","previousDecadeAndFocus","nextDecade","nextDecadeAndFocus","yearFocused","yearSelected"],g=(e,a)=>{if("reset"===a.type)return a.payload;switch(a.type){case"monthView":return{...e,currentView:"monthView",isViewFocused:!1,isNextNavigationButtonHidden:!1,isPreviousNavigationButtonHidden:!1,isTodayNavigationButtonHidden:!1};case"monthsGridView":return{...e,currentView:"monthsGridView",focusableMonth:e.focusableDate.month,isViewFocused:!1,isNextNavigationButtonHidden:!0,isPreviousNavigationButtonHidden:!0,isTodayNavigationButtonHidden:!0};case"yearsGridView":return{...e,currentView:"yearsGridView",focusableYear:e.focusableDate.year,isViewFocused:!1,isNextNavigationButtonHidden:!1,isPreviousNavigationButtonHidden:!1,isTodayNavigationButtonHidden:!0};case"viewFocus":return e.isViewFocused?e:{...e,isViewFocused:!0};case"viewBlur":return e.isViewFocused?{...e,isViewFocused:!1}:e;case"dayFocused":case"daySelected":case"goToToday":return{...e,isViewFocused:!0,focusableDate:a.payload};case"previousDay":{const o=r.addToCalendarDate(a.payload,{days:-1});return{...e,isViewFocused:!0,focusableDate:o}}case"nextDay":{const o=r.addToCalendarDate(a.payload,{days:1});return{...e,isViewFocused:!0,focusableDate:o}}case"previousWeek":{const o=r.addToCalendarDate(a.payload,{days:-7});return{...e,isViewFocused:!0,focusableDate:o}}case"nextWeek":{const o=r.addToCalendarDate(a.payload,{days:7});return{...e,isViewFocused:!0,focusableDate:o}}case"previousMonth":case"previousMonthAndFocus":{const o=r.addToCalendarDate(a.payload,{months:-1});return{...e,isViewFocused:"previousMonthAndFocus"===a.type,focusableDate:o}}case"nextMonth":case"nextMonthAndFocus":{const o=r.addToCalendarDate(a.payload,{months:1});return{...e,isViewFocused:"nextMonthAndFocus"===a.type,focusableDate:o}}case"previousYear":{const o=r.addToCalendarDate(a.payload,{years:-1});return{...e,isViewFocused:!0,focusableDate:o}}case"nextYear":{const o=r.addToCalendarDate(a.payload,{years:1});return{...e,isViewFocused:!0,focusableDate:o}}case"firstDayOfMonth":{const o=a.payload,t={year:o.year,month:o.month,day:1};return{...e,isViewFocused:!0,focusableDate:t}}case"lastDayOfMonth":{const o=a.payload,t=r.getDaysInMonth(o.month,o.year),i={year:o.year,month:o.month,day:t};return{...e,isViewFocused:!0,focusableDate:i}}case"previousMonthInGridView":{const o=r.addToMonth(a.payload.month,-1);return{...e,focusableMonth:o,isViewFocused:!0}}case"previousMonthRowInGridView":{const o=r.addToMonth(a.payload.month,-4);return{...e,focusableMonth:o,isViewFocused:!0}}case"nextMonthInGridView":{const o=r.addToMonth(a.payload.month,1);return{...e,focusableMonth:o,isViewFocused:!0}}case"nextMonthRowInGridView":{const o=r.addToMonth(a.payload.month,4);return{...e,focusableMonth:o,isViewFocused:!0}}case"monthFocused":return{...e,focusableMonth:a.payload.month,isViewFocused:!0};case"monthSelected":{const o=a.payload.month-e.focusableDate.month,t=r.addToCalendarDate(e.focusableDate,{months:o});return{...e,currentView:"monthView",focusableDate:t,isViewFocused:!0,isNextNavigationButtonHidden:!1,isPreviousNavigationButtonHidden:!1,isTodayNavigationButtonHidden:!1}}case"previousYearInGridView":{const o=r.addToYear(a.payload.year,-1);return{...e,focusableYear:o,isViewFocused:!0}}case"previousYearRowInGridView":{const o=r.addToYear(a.payload.year,-4);return{...e,focusableYear:o,isViewFocused:!0}}case"previousDecade":case"previousDecadeAndFocus":{const o=r.addToYear(a.payload.year,-10);return{...e,focusableYear:o,isViewFocused:"previousDecadeAndFocus"===a.type}}case"nextYearInGridView":{const o=r.addToYear(a.payload.year,1);return{...e,focusableYear:o,isViewFocused:!0}}case"nextYearRowInGridView":{const o=r.addToYear(a.payload.year,4);return{...e,focusableYear:o,isViewFocused:!0}}case"nextDecade":case"nextDecadeAndFocus":{const o=r.addToYear(a.payload.year,10);return{...e,focusableYear:o,isViewFocused:"nextDecadeAndFocus"===a.type}}case"yearFocused":return{...e,focusableYear:a.payload.year,isViewFocused:!0};case"yearSelected":{const o=a.payload.year-e.focusableDate.year,t=r.addToCalendarDate(e.focusableDate,{years:o});return{...e,currentView:"monthView",focusableDate:t,isViewFocused:!0,isNextNavigationButtonHidden:!1,isPreviousNavigationButtonHidden:!1,isTodayNavigationButtonHidden:!1}}default:return e}},f={monthView:"none",monthsGridView:"month",yearsGridView:"year"},x=({isReadonly:e,max:a,min:o,rootRef:t,todayTimeZone:i,value:u,onCommit:l})=>{if(o&&a&&r.isCalendarDateBefore(a,o))throw new Error("DatePicker: min must be equal or less than max.");const h=r.getCalendarDateToday(i),y=d.useMemo((()=>r.constrainCalendarDate(u??h,o,a)),[u,h,o,a]),{state:w,actions:v}=(({initialFocusableDate:e})=>{const a={currentView:"monthView",focusableDate:e,focusableMonth:e.month,focusableYear:e.year,isViewFocused:!1,isNextNavigationButtonHidden:!1,isPreviousNavigationButtonHidden:!1,isTodayNavigationButtonHidden:!1},[o,t]=d.useReducer(g,a),i=d.useRef(e);return 0!==r.compareDates(i.current,e)&&(i.current=e,0!==r.compareDates(e,o.focusableDate)&&t({type:"reset",payload:a})),{state:o,actions:d.useMemo((()=>{const e={};return m.forEach((a=>{e[a]=()=>t({type:a})})),b.forEach((a=>{e[a]=e=>t({type:a,payload:e})})),D.forEach((a=>{e[a]=e=>t({type:a,payload:e})})),F.forEach((a=>{e[a]=e=>t({type:a,payload:e})})),e}),[t])}})({initialFocusableDate:y}),V=s.useTranslationBundle("@oracle/oraclejet-preact"),p={next:V.datePicker_next(),previous:V.datePicker_prev(),goToToday:V.datePicker_goToToday(),today:V.datePicker_today()},x=d.useCallback((a=>e?Promise.reject("Component is readonly"):(l({value:a,previousValue:u}),Promise.resolve())),[e,l,u]);c.useHiddenTestMethod({elementRef:t,method:x,name:"_changeValue"});const T={handleMonthToggle:d.useCallback((()=>{"monthsGridView"!==w.currentView?v.monthsGridView(void 0):v.monthView(void 0)}),[v,w.currentView]),handleYearToggle:d.useCallback((()=>{"yearsGridView"!==w.currentView?v.yearsGridView(void 0):v.monthView(void 0)}),[v,w.currentView]),handleTodayNavigation:d.useCallback((()=>{v.goToToday(h)}),[v,h]),handlePreviousNavigation:d.useCallback((()=>"monthView"===w.currentView?v.previousMonth(w.focusableDate):"yearsGridView"===w.currentView?v.previousDecade({year:w.focusableYear}):void 0),[v,w.currentView,w.focusableDate,w.focusableYear]),handleNextNavigation:d.useCallback((()=>"monthView"===w.currentView?v.nextMonth(w.focusableDate):"yearsGridView"===w.currentView?v.nextDecade({year:w.focusableYear}):void 0),[v,w.currentView,w.focusableDate,w.focusableYear]),handleMonthViewAction:d.useCallback((a=>{void 0===a.date||e||(v.daySelected(a.date),l?.({previousValue:u,value:a.date}))}),[v,e,l,u]),handleDayFocused:d.useCallback((e=>{v.dayFocused(e.date)}),[v]),handleMonthViewNavigation:d.useCallback((e=>{switch(e.direction){case"previousMonth":return v.previousMonthAndFocus(e.date);case"nextMonth":return v.nextMonthAndFocus(e.date);case"today":return v.goToToday(h);default:return v[e.direction](e.date)}}),[v,h]),handleMonthsGridViewAction:d.useCallback((e=>{v.monthSelected(e)}),[v]),handleMonthFocused:d.useCallback((e=>{v.monthFocused(e)}),[v]),handleMonthsGridViewNavigation:d.useCallback((e=>{switch(e.direction){case"down":return v.nextMonthRowInGridView({month:e.month});case"next":return v.nextMonthInGridView({month:e.month});case"previous":return v.previousMonthInGridView({month:e.month});case"up":return v.previousMonthRowInGridView({month:e.month})}}),[v]),handleYearsGridViewAction:d.useCallback((e=>{v.yearSelected(e)}),[v]),handleYearFocused:d.useCallback((e=>{v.yearFocused(e)}),[v]),handleYearsGridViewNavigation:d.useCallback((e=>{switch(e.direction){case"down":return v.nextYearRowInGridView({year:e.year});case"next":return v.nextYearInGridView({year:e.year});case"nextDecade":return v.nextDecadeAndFocus({year:e.year});case"previous":return v.previousYearInGridView({year:e.year});case"previousDecade":return v.previousDecadeAndFocus({year:e.year});case"up":return v.previousYearRowInGridView({year:e.year})}}),[v])},{focusProps:M}=n.useFocusWithin({onBlurWithin:d.useCallback((()=>v.viewBlur(void 0)),[v]),onFocusWithin:d.useCallback((()=>v.viewFocus(void 0)),[v])});return{accessibleLabels:p,actions:v,handlers:T,state:w,todaysDate:h,toggleSelection:f[w.currentView],viewContainerProps:{...M}}},T=({onTodayNavigationAction:e,testId:o,todayNavigationAriaLabel:i,todayNavigationLabel:n})=>a.jsx(t.Flex,{direction:"column",children:a.jsx(l.Button,{testId:o,label:n,"aria-label":i,size:"sm",onAction:e})});e.DatePicker=({dayFormatter:e,daysOutsideMonth:n,height:s,isReadonly:r=!1,monthAndYearPicker:d="on",max:c,maxWidth:l,min:m,value:b,testId:D,todayTimeZone:F,todayButton:g="visible",weekDisplay:f="none",width:M,onCommit:N})=>{const G=o.useRef(null),{accessibleLabels:Y,handlers:k,state:P,todaysDate:B,toggleSelection:A,viewContainerProps:C}=x({isReadonly:r,max:c,min:m,rootRef:G,todayTimeZone:F,value:b,onCommit:N}),{month:I,year:H}=P.focusableDate,R="on"===d&&!r,j=u.useBreakpointValues({sm:!0,md:!1},{sm:"0px",md:"360px"}),S=!P.isTodayNavigationButtonHidden&&j&&"visible"===g,{classes:_}=y.useComponentTheme(w.DatePickerRedwoodTheme),W=i.useTestId(D);return a.jsx("div",{class:_,ref:G,...W,children:a.jsxs(t.Flex,{direction:"column",gap:"monthView"===P.currentView?h.datePickerPropVars.calendarGridRowGap:h.datePickerPropVars.monthYearGridRowGap,height:"auto"===s?void 0:S?h.datePickerPropVars.todayFooterButtonHeight:h.datePickerPropVars.height,maxWidth:void 0!==l?l:h.datePickerPropVars.maxWidth,width:void 0!==M?M:h.datePickerPropVars.width,children:[a.jsx(v.DatePickerHeader,{testId:D?D+"_header":void 0,month:I,year:H,isPreviousNavigationButtonHidden:P.isPreviousNavigationButtonHidden,isTodayNavigationButtonHidden:"hidden"===g||P.isTodayNavigationButtonHidden||j,isNextNavigationButtonHidden:P.isNextNavigationButtonHidden,monthYearHeader:R?"independentButtons":"text",toggleSelection:R?A:void 0,previousNavigationAccessibleLabel:Y.previous,todayNavigationAccessibleLabel:Y.goToToday,nextNavigationAccessibleLabel:Y.next,onTodayNavigationAction:k.handleTodayNavigation,onPreviousNavigationAction:k.handlePreviousNavigation,onNextNavigationAction:k.handleNextNavigation,onMonthToggle:R?k.handleMonthToggle:void 0,onYearToggle:R?k.handleYearToggle:void 0}),a.jsxs("div",{...C,children:["monthView"===P.currentView&&a.jsx(V.MonthView,{dayFormatter:e,daysOutsideMonth:n,isReadonly:r,max:c,min:m,selectedDate:b,focusableDate:P.focusableDate,isFocused:P.isViewFocused,testId:D?D+"_monthView":void 0,todaysDate:B,onNavigation:k.handleMonthViewNavigation,onDayFocused:k.handleDayFocused,onAction:k.handleMonthViewAction,weekDisplay:f}),"monthsGridView"===P.currentView&&a.jsx(p.MonthsGridView,{currentMonth:B.month,focusableMonth:P.focusableMonth,isFocused:P.isViewFocused,selectedMonth:I,testId:D?D+"_monthsGridView":void 0,onAction:k.handleMonthsGridViewAction,onMonthFocused:k.handleMonthFocused,onNavigation:k.handleMonthsGridViewNavigation}),"yearsGridView"===P.currentView&&a.jsx(p.YearsGridView,{currentYear:B.year,focusableYear:P.focusableYear,isFocused:P.isViewFocused,selectedYear:H,testId:D?D+"_yearsGridView":void 0,onAction:k.handleYearsGridViewAction,onNavigation:k.handleYearsGridViewNavigation,onYearFocused:k.handleYearFocused})]}),S&&a.jsx("div",{children:a.jsx(T,{testId:D?D+"_footerTodayButton":void 0,todayNavigationLabel:Y.today,todayNavigationAriaLabel:Y.goToToday,onTodayNavigationAction:k.handleTodayNavigation})})]})})}}));
//# sourceMappingURL=DatePicker-26834e69.js.map
