{"version":3,"file":"ToolbarWebElement.js","sourceRoot":"","sources":["ToolbarWebElement.ts"],"names":[],"mappings":";;;AAAA,2DAAwC;AACxC,mEAAgE;AAChE,kDAQ4B;AAE5B;;;;GAIG;AACH,MAAa,iBAAkB,SAAQ,6CAAqB;IAC1D,qBAAqB;IACrB;;;;;OAKG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAgB,OAAO,CAAC,CAAC;IAClD,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,eAAe,CACnB,WAA4B,EAC5B,IAAgD;QAEhD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CACxC,uBAAE,CAAC,GAAG,CAAC,yBAAyB,WAAW,CAAC,GAAG,IAAI,CAAC,CACrD,CAAC;QACF,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;QAE5C,QAAQ,WAAW,EAAE,CAAC;YACpB,KAAK,4BAAgB,CAAC;YACtB,KAAK,oCAAwB;gBAC3B,IAAI,IAAI,EAAE,CAAC;oBACT,MAAM,KAAK,CACT,2FAA2F,CAC5F,CAAC;gBACJ,CAAC;qBAAM,CAAC;oBACN,MAAO,WAA2D,CAAC,QAAQ,EAAE,CAAC;gBAChF,CAAC;gBACD,MAAM;YACR,KAAK,gCAAoB;gBACvB,IAAI,IAAI,EAAE,CAAC;oBACT,MAAO,WAAoC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvE,CAAC;gBACD,MAAM;YACR,KAAK,qCAAyB;gBAC5B,IAAI,IAAI,EAAE,CAAC;oBACT,MAAO,WAAyC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5E,CAAC;qBAAM,CAAC;oBACN,MAAO,WAAyC,CAAC,QAAQ,EAAE,CAAC;gBAC9D,CAAC;gBACD,MAAM;YACR,KAAK,qCAAyB,CAAC;YAC/B,KAAK,uCAA2B,CAAC;YACjC,KAAK,kCAAsB;gBACzB,MAAM,KAAK,CACT,8CAA8C,IAAI,CAAC,SAAS,CAC1D,WAAW,EACX,IAAI,EACJ,CAAC,CACF,mKAAmK,CACrK,CAAC;QACN,CAAC;IACH,CAAC;CACF;AAjED,8CAiEC","sourcesContent":["import { By } from 'selenium-webdriver';\nimport { ToolbarWebElementBase } from './ToolbarWebElementBase';\nimport {\n  ButtonWebElement,\n  SplitMenuButtonWebElement,\n  MenuButtonWebElement,\n  ProgressButtonWebElement,\n  ButtonsetSingleWebElement,\n  ButtonsetMultipleWebElement,\n  ToggleButtonWebElement\n} from '../../../webdriver';\n\n/**\n * The component WebElement for [oj-c-toolbar](../../jsdocs/oj-c.Toolbar.html).\n * Do not instantiate this class directly, instead, use\n * [findToolbar](../functions/findToolbar.html).\n */\nexport class ToolbarWebElement extends ToolbarWebElementBase {\n  // Put overrides here\n  /**\n   * Gets the value of <code>items</code> property.\n   * Specifies the content to be placed into the toolbar.\n   * @return The value of <code>items</code> property.\n   *\n   */\n  public getItems(): Promise<Array<object>> {\n    return this.getProperty<Array<object>>('items');\n  }\n\n  /**\n   * Performs action of toolbar item specified by key.\n   * @param itemLocation object containing key of the item to be activated.\n   * Used for triggering the action on an item of type 'button' or 'progress-button', triggering the action on the button portion of an item of type 'oj-c-split-menu-button', or triggering the action on a menu item inside of an item of type 'menu-button' or 'split-menu-button'.\n   * For changing the selection state of an item of type buttonset-single or buttonset-multiple, changing the selection state of a menu selection group inside of an item of type oj-c-menu-button or oj-c-split-menu-button, or changing the value of an item of type toggle-button, use the changeToolbarSelection method.\n   * @override\n   * @typeparam string\n   * @param path optional object of label or labels, only needed for menu items\n   */\n  async doToolbarAction(\n    itemLocator: { key: string },\n    path?: { label: string | string[]; key?: never }\n  ): Promise<void> {\n    const toolbarItem = await this.findElement(\n      By.css(`[data-oj-private-key=\"${itemLocator.key}\"]`)\n    );\n    const elementType = toolbarItem.constructor;\n\n    switch (elementType) {\n      case ButtonWebElement:\n      case ProgressButtonWebElement:\n        if (path) {\n          throw Error(\n            `A path was supplied, but item types of 'button' or 'progress-button' do not support menus`\n          );\n        } else {\n          await (toolbarItem as ButtonWebElement | ProgressButtonWebElement).doAction();\n        }\n        break;\n      case MenuButtonWebElement:\n        if (path) {\n          await (toolbarItem as MenuButtonWebElement).doMenuAction(path.label);\n        }\n        break;\n      case SplitMenuButtonWebElement:\n        if (path) {\n          await (toolbarItem as SplitMenuButtonWebElement).doMenuAction(path.label);\n        } else {\n          await (toolbarItem as SplitMenuButtonWebElement).doAction();\n        }\n        break;\n      case ButtonsetSingleWebElement:\n      case ButtonsetMultipleWebElement:\n      case ToggleButtonWebElement:\n        throw Error(\n          `The toolbar item found for the itemLocator ${JSON.stringify(\n            itemLocator,\n            null,\n            2\n          )} is of item type 'buttonset-single', 'buttonset-multiple', or 'toggle-button', which do not support actions. Try using the changeToolbarSelection method instead.`\n        );\n    }\n  }\n}\n"]}