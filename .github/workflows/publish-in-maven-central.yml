# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Publish to maven central

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]+'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: corretto
        server-id: mateu-central # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
    - name: Import GPG Key
      uses: crazy-max/ghaction-import-gpg@v1
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    - name: Cat settings.xml
      run: cat ~/.m2/settings.xml
    - name: Copy settings.xml
      run: cp -f settings.xml ~/.m2

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Build front
      run: cd frontend && npm i && npm run build && npm run copy

    - name: list pom files
      run: grep -rl '<version>0.0.1-MATEU</version>' --exclude-dir=.git backend | grep pom.xml

    - name: Show context
      run: echo '${{ toJson(github.event) }}'

    - name: fix version
      run: grep -rl '<version>0.0.1-MATEU</version>' --exclude-dir=.git backend | grep pom.xml | xargs sed -i 's/0\.0\.1\-MATEU/${{ env.RELEASE_VERSION }}/g'

    - name: Build with Maven
      run: mvn -B install --file backend/pom.xml

    - name: Publish to Maven Central
      run: mvn deploy -f backend/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.REPO_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.REPO_PASSWORD }}
#        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
#        PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
