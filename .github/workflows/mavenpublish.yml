# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on: [push]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: corretto
        server-id: mateu-central # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
    - name: Import GPG Key
      uses: crazy-max/ghaction-import-gpg@v1
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    - name: Cat settings.xml
      run: cat ~/.m2/settings.xml
    - name: Copy settings.xml
      run: cp -f settings.xml ~/.m2
    - name: Cd to project
      run: cd backend && pwd && ls -lh
    - name: Build with Maven
      run: pwd && mvn -B install --file backend/pom.xml

# already done
#    - name: Checkout
#      uses: actions/checkout@v1

    # Install NPM dependencies, cache them correctly
    # and run all Cypress tests
    - name: Pwd
      run: pwd
    - name: Ls
      run: ls -lh
    - name: Cypress run
      uses: cypress-io/github-action@v5
      with:
        working-directory: e2e
        #build: npm install
        start: mvn spring-boot:run -f ../demo-remote/pom.xml
        wait-on: 'http://localhost:8081'

#    - name: Publish to GitHub Packages Apache Maven
#      run: mvn deploy
#      env:
#        MAVEN_USERNAME: ${{ secrets.REPO_USERNAME }}
#        MAVEN_CENTRAL_TOKEN: ${{ secrets.REPO_PASSWORD }}
