{"version":3,"file":"scales-20b1dd5e.js","sources":["../../src/utils/UNSAFE_visTimeComponentScales/scales.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { getWeekStart } from '../../utils/PRIVATE_dayUtils';\nimport { getFormatParse } from '../../UNSAFE_IntlDateTime';\n\ntype ScaleOptions = {\n  target?: 'majorAxis' | 'minorAxis';\n  formatter?: (date: string) => string;\n  labelPosition?: 'start' | 'center';\n};\n\ntype TimeComponentScale = {\n  labelPosition?: 'start' | 'center';\n  formatter: (date: string) => string;\n  getNextDate: (date: string) => string;\n  getPreviousDate: (date: string) => string;\n};\n\nconst getFirstDayOfWeek = () => getWeekStart(navigator.language);\n\nconst getSecondsScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        hour: 'numeric',\n        minute: '2-digit',\n        second: '2-digit'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setMilliseconds(0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const time = Date.parse(date);\n      return new Date(time + 1000).toISOString();\n    }\n  };\n};\n\nconst getMinutesScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        hour: 'numeric',\n        minute: '2-digit'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setSeconds(0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const time = Date.parse(date);\n      return new Date(time + 60000).toISOString();\n    }\n  };\n};\n\nconst getHoursScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        hour: 'numeric'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setMinutes(0, 0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const time = Date.parse(date);\n      return new Date(time + 3600000).toISOString();\n    }\n  };\n};\n\nconst getDaysScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { target, formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        month: 'numeric',\n        day: '2-digit'\n      }).format,\n    labelPosition: labelPosition || (target === 'majorAxis' ? 'center' : 'start'),\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setHours(0, 0, 0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setDate(nextDate.getDate() + 1);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nconst getWeeksScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        month: 'numeric',\n        day: '2-digit'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      const rollAmt = (prevDate.getDay() - getFirstDayOfWeek() + 7) % 7;\n      prevDate.setHours(0, 0, 0, 0);\n      if (rollAmt > 0) {\n        // Work with date instead of time in ms to avoid daylight savings issues\n        prevDate.setDate(prevDate.getDate() - rollAmt);\n      }\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setDate(nextDate.getDate() + 7);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nconst getMonthsScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        month: 'long'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setDate(1);\n      prevDate.setHours(0, 0, 0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setMonth(nextDate.getMonth() + 1);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nconst getQuartersScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        month: 'long'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      const quarter = Math.floor(prevDate.getMonth() / 3);\n      prevDate.setDate(1);\n      prevDate.setHours(0, 0, 0, 0);\n      prevDate.setMonth(quarter * 3);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setMonth(nextDate.getMonth() + 3);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nconst getYearsScale = (options: ScaleOptions = { target: 'minorAxis' }): TimeComponentScale => {\n  const { formatter, labelPosition } = options;\n  return {\n    formatter:\n      formatter ||\n      getFormatParse({\n        locale: navigator.language,\n        year: 'numeric'\n      }).format,\n    labelPosition: labelPosition || 'start',\n    getPreviousDate: (date: string) => {\n      const prevDate = new Date(date);\n      prevDate.setMonth(0);\n      prevDate.setDate(1);\n      prevDate.setHours(0, 0, 0, 0);\n      return prevDate.toISOString();\n    },\n    getNextDate: (date: string) => {\n      const nextDate = new Date(date);\n      nextDate.setFullYear(nextDate.getFullYear() + 1);\n      return nextDate.toISOString();\n    }\n  };\n};\n\nexport {\n  getSecondsScale,\n  getMinutesScale,\n  getHoursScale,\n  getDaysScale,\n  getWeeksScale,\n  getMonthsScale,\n  getQuartersScale,\n  getYearsScale\n};\n"],"names":["options","target","formatter","labelPosition","getFormatParse","locale","navigator","language","month","day","format","getPreviousDate","date","prevDate","Date","setHours","toISOString","getNextDate","nextDate","setDate","getDate","hour","setMinutes","time","parse","minute","setSeconds","setMonth","getMonth","quarter","Math","floor","second","setMilliseconds","rollAmt","getDay","getWeekStart","year","setFullYear","getFullYear"],"mappings":"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"}