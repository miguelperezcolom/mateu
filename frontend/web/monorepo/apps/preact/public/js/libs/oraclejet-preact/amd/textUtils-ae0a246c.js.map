{"version":3,"file":"textUtils-ae0a246c.js","sources":["../../src/utils/UNSAFE_visUtils/textUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Dimension, VisTextStyle } from '../UNSAFE_visTypes/common';\n\nconst isOverlap = (L1: number, R1: number, L2: number, R2: number) => L1 <= R2 && L2 <= R1;\n\n/**\n * Checks if the two dimensions are overlapping horizontally.\n * @param dimsA\n * @param dimsB\n * @returns\n */\nexport function isWidthOverlap(dimsA: Dimension, dimsB: Dimension) {\n  return isOverlap(dimsA.x, dimsA.x + dimsA.width, dimsB.x, dimsB.x + dimsB.width);\n}\n\n/**\n * Checks if the two dimensions are overlapping vertically.\n * @param dimsA\n * @param dimsB\n * @returns\n */\nexport function isHeightOverlap(dimsA: Dimension, dimsB: Dimension) {\n  return isOverlap(dimsA.y, dimsA.y + dimsA.height, dimsB.y, dimsB.y + dimsB.height);\n}\n\n/**\n * Returns the updated title style.\n * @returns\n */\nexport function updateVisTextStyleProperties(style?: VisTextStyle) {\n  if (style) {\n    const { color, ...rest } = style;\n    return { ...rest, stroke: color };\n  }\n  return style;\n}\n"],"names":["isOverlap","L1","R1","L2","R2","dimsA","dimsB","y","height","x","width","style","color","rest","stroke"],"mappings":"6CAUA,MAAMA,EAAY,CAACC,EAAYC,EAAYC,EAAYC,IAAeH,GAAMG,GAAMD,GAAMD,oBAkBxE,SAAgBG,EAAkBC,GAChD,OAAON,EAAUK,EAAME,EAAGF,EAAME,EAAIF,EAAMG,OAAQF,EAAMC,EAAGD,EAAMC,EAAID,EAAME,OAC7E,mBAZgB,SAAeH,EAAkBC,GAC/C,OAAON,EAAUK,EAAMI,EAAGJ,EAAMI,EAAIJ,EAAMK,MAAOJ,EAAMG,EAAGH,EAAMG,EAAIH,EAAMI,MAC5E,iCAgBM,SAAuCC,GAC3C,GAAIA,EAAO,CACT,MAAMC,MAAEA,KAAUC,GAASF,EAC3B,MAAO,IAAKE,EAAMC,OAAQF,EAC3B,CACD,OAAOD,CACT"}