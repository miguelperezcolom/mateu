{"version":3,"file":"ButtonLayout.spec.js","sources":["../../../../src/UNSAFE_ButtonLayout/tests/ButtonLayout.spec.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { expect } from 'chai';\nimport { ButtonLayout } from '../ButtonLayout';\nimport { ToolbarSeparator } from '#UNSAFE_Toolbar/ToolbarSeparator';\nimport { BaseButton } from '../../UNSAFE_BaseButton';\nimport { Button } from '../../UNSAFE_Button';\nimport { MenuButton } from '../../UNSAFE_MenuButton';\nimport { SplitMenuButton } from '../../UNSAFE_SplitMenuButton';\n\ndescribe('Test ButtonLayout component', () => {\n  it('Checks for ButtonLayout content', async () => {\n    const sampleButtonLayout = (\n      <ButtonLayout>\n        <BaseButton></BaseButton>\n        <Button isDisabled={true}></Button>\n        <ToolbarSeparator />\n        <MenuButton></MenuButton>\n        <SplitMenuButton></SplitMenuButton>\n      </ButtonLayout>\n    );\n    const dom = render(sampleButtonLayout);\n    const buttonLayout = dom.container.querySelector('div');\n    const content = buttonLayout?.childNodes;\n\n    expect(buttonLayout).not.to.be.null;\n    expect(content?.length).equals(5);\n  });\n  it('Checks for \"lg\" spacing class', async () => {\n    const sampleLgButtonLayout = (\n      <ButtonLayout spacing=\"lg\">\n        <BaseButton></BaseButton>\n        <Button isDisabled={true}></Button>\n        <ToolbarSeparator />\n        <MenuButton></MenuButton>\n        <SplitMenuButton></SplitMenuButton>\n      </ButtonLayout>\n    );\n\n    const dom = render(sampleLgButtonLayout);\n    const buttonLayout = dom.container.querySelector('div');\n\n    // @ts-ignore\n    const className = buttonLayout.className;\n    const lgClass = 'ButtonLayoutVariants_multiVariantStyles_spacing_lg';\n    expect(className).to.be.a('string').that.contains(lgClass);\n  });\n  it('Checks for \"sm\" spacing class', async () => {\n    const sampleSmButtonLayout = (\n      <ButtonLayout spacing=\"sm\">\n        <BaseButton></BaseButton>\n        <Button isDisabled={true}></Button>\n        <ToolbarSeparator />\n        <MenuButton></MenuButton>\n        <SplitMenuButton></SplitMenuButton>\n      </ButtonLayout>\n    );\n\n    const dom = render(sampleSmButtonLayout);\n    const buttonLayout = dom.container.querySelector('div');\n\n    // @ts-ignore\n    const className = buttonLayout.className;\n    const smClass = 'ButtonLayoutVariants_multiVariantStyles_spacing_sm';\n    expect(className).to.be.a('string').that.contains(smClass);\n  });\n});\n"],"names":["describe","it","async","sampleButtonLayout","_jsxs","jsxs","ButtonLayout","children","_jsx","BaseButton","Button","isDisabled","jsx","ToolbarSeparator","MenuButton","SplitMenuButton","buttonLayout","render","container","querySelector","content","childNodes","expect","not","to","be","null","length","equals","sampleLgButtonLayout","spacing","className","a","that","contains","sampleSmButtonLayout"],"mappings":"+hQASAA,SAAS,+BAA+B,KACtCC,GAAG,mCAAmCC,UACpC,MAAMC,EACJC,EAAAC,KAACC,eAAY,CAAAC,SAAA,CACXC,EAAAA,IAACC,EAAUA,WAAc,CAAA,GACzBD,EAAAA,IAACE,EAAMA,QAACC,YAAY,IACpBH,EAAAI,IAACC,EAAgBA,iBAAA,IACjBL,EAACI,IAAAE,EAAUA,WAAc,IACzBN,EAACI,IAAAG,EAAeA,gBAAmB,CAAA,MAIjCC,EADMC,SAAOd,GACMe,UAAUC,cAAc,OAC3CC,EAAUJ,GAAcK,WAE9BC,EAAMA,OAACN,GAAcO,IAAIC,GAAGC,GAAGC,KAC/BJ,EAAAA,OAAOF,GAASO,QAAQC,OAAO,EAAE,IAEnC3B,GAAG,iCAAiCC,UAClC,MAAM2B,EACJzB,EAAAC,KAACC,EAAYA,aAAC,CAAAwB,QAAQ,eACpBtB,EAAAA,IAACC,EAAAA,WAAwB,CAAA,GACzBD,MAACE,EAAMA,OAAA,CAACC,YAAY,IACpBH,EAACI,IAAAC,EAAgBA,qBACjBL,EAAAA,IAACM,EAAAA,WAAU,CAAA,GACXN,EAACI,IAAAG,EAAeA,gBAAmB,CAAA,MAQjCgB,EAJMd,SAAOY,GACMX,UAAUC,cAAc,OAGlBY,UAE/BT,EAAAA,OAAOS,GAAWP,GAAGC,GAAGO,EAAE,UAAUC,KAAKC,SADzB,qDAC0C,IAE5DjC,GAAG,iCAAiCC,UAClC,MAAMiC,EACJ/B,EAAAC,KAACC,EAAYA,aAAC,CAAAwB,QAAQ,eACpBtB,EAAAA,IAACC,EAAAA,WAAwB,CAAA,GACzBD,MAACE,EAAMA,OAAA,CAACC,YAAY,IACpBH,EAACI,IAAAC,EAAgBA,qBACjBL,EAAAA,IAACM,EAAAA,WAAU,CAAA,GACXN,EAACI,IAAAG,EAAeA,gBAAmB,CAAA,MAQjCgB,EAJMd,SAAOkB,GACMjB,UAAUC,cAAc,OAGlBY,UAE/BT,EAAAA,OAAOS,GAAWP,GAAGC,GAAGO,EAAE,UAAUC,KAAKC,SADzB,qDAC0C,GAC1D"}