{"version":3,"file":"useAccessibleContext-23e8a333.js","sources":["../../src/hooks/UNSAFE_useAccessibleContext/AccessibleContext.ts","../../src/hooks/UNSAFE_useAccessibleContext/useAccessibleContext.ts"],"sourcesContent":["import { createContext } from 'preact';\n\ntype AccessibleContextProps = {\n  /**\n   * The id of an external label element for some component.\n   */\n  UNSAFE_ariaLabelledBy?: string;\n};\n\n/**\n * Context used by the parent to pass accessibility related information.\n */\nconst AccessibleContext = createContext<AccessibleContextProps>({\n  UNSAFE_ariaLabelledBy: undefined\n});\n\nexport { AccessibleContext };\nexport type { AccessibleContextProps };\n","import { useContext } from 'preact/hooks';\nimport { AccessibleContext } from './AccessibleContext';\n\n/**\n * Utility hook for consuming the AccessibleContext\n *\n * @returns The value of closest AccessibleContext provider\n */\nfunction useAccessibleContext() {\n  return useContext(AccessibleContext);\n}\n\nexport { useAccessibleContext };\n"],"names":["AccessibleContext","createContext","UNSAFE_ariaLabelledBy","undefined","useContext"],"mappings":"yEAYM,MAAAA,EAAoBC,EAAAA,cAAsC,CAC9DC,2BAAuBC,iDCLzB,WACE,OAAOC,EAAAA,WAAWJ,EACpB"}