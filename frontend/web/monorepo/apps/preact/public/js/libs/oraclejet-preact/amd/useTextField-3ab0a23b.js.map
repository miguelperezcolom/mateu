{"version":3,"file":"useTextField-3ab0a23b.js","sources":["../../src/hooks/UNSAFE_useTextField/useTextField.ts"],"sourcesContent":["import type { ComponentProps, ContextType, JSX } from 'preact';\nimport { useCallback, useRef, useState } from 'preact/hooks';\n\nimport type { UnpackSignals } from '@oracle/oraclejet-internal-utilities/attributeUtils';\nimport { merge } from '@oracle/oraclejet-internal-utilities/stringUtils';\n\nimport { detectTruncation } from '#utils/PRIVATE_truncationUtils';\nimport type { FormVariantContext } from '#hooks/UNSAFE_useFormVariantContext';\nimport type { Label } from '#UNSAFE_Label';\nimport type { TextField } from '#UNSAFE_TextField';\nimport type { InlineUserAssistance, UserAssistanceDensityType } from '#UNSAFE_UserAssistance';\nimport { useMessageSeverity } from '../PRIVATE_useMessageSeverity';\nimport { useFocusWithin } from '../UNSAFE_useFocusWithin';\nimport { useFormFieldContextProps } from '../UNSAFE_useFormFieldContextProps';\nimport { useId } from '../UNSAFE_useId';\n\ntype InlineUserAssistanceProps = ComponentProps<typeof InlineUserAssistance>;\ntype PickedUserAssistanceProps = Pick<InlineUserAssistanceProps, 'messages'>;\n\ntype UseTextFieldProps<V> = PickedUserAssistanceProps & {\n  ariaDescribedBy?: string;\n  contentVariant?: 'input' | 'textarea';\n  helpSourceLink?: string;\n  helpSourceText?: string;\n  isDisabled?: boolean;\n  isFocused?: boolean;\n  isLoading?: boolean;\n  isReadonly?: boolean;\n  isRequiredShown?: boolean;\n  labelEdge?: ComponentProps<typeof TextField>['labelEdge'] | 'none';\n  styleVariant?: ContextType<typeof FormVariantContext>;\n  userAssistanceDensity?: UserAssistanceDensityType;\n  value?: V;\n};\n\n/**\n * A custom hook to determine the props for a component that renders\n * a text field\n */\nexport function useTextField<V>({\n  ariaDescribedBy,\n  contentVariant,\n  helpSourceLink,\n  helpSourceText,\n  isDisabled,\n  isFocused,\n  isLoading,\n  isReadonly,\n  isRequiredShown,\n  labelEdge,\n  messages,\n  styleVariant,\n  userAssistanceDensity,\n  value\n}: UseTextFieldProps<V>) {\n  const baseId = useId();\n  const labelId = labelEdge !== 'none' ? `${baseId}-label` : undefined;\n  const inputId = !isReadonly ? `${baseId}-input` : undefined;\n  const uaId = !isDisabled ? `${baseId}-ua` : undefined;\n  const helpIconId = userAssistanceDensity === 'compact' ? `${baseId}-helpIcon` : undefined;\n\n  // JET-73197: Truncated Text Enhancements for Core Pack\n  // Create a ref to the Label element. When we see focusWithin the input, measure the label\n  // to determine if the text is truncated and if so, set showTruncatedTooltip to true.\n  // If we see a blurWithin event and the input is no longer focused, set the flag to false.\n  const labelRef = useRef<HTMLLabelElement>(null);\n  const [showTruncatedTooltip, setShowTruncatedTooltip] = useState(false);\n  const onBlurWithin = useCallback(() => {\n    setShowTruncatedTooltip(false);\n  }, []);\n  const onFocusWithin = useCallback(() => {\n    const isTruncated = labelEdge === 'inside' && !isDisabled ? detectTruncation(labelRef) : false;\n    setShowTruncatedTooltip(isTruncated);\n  }, [isDisabled, labelEdge, labelRef]);\n\n  const { focusProps, isFocused: isInputFocused } = useFocusWithin({\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin\n  });\n  const hasValue = value !== undefined && (typeof value !== 'string' || value !== '');\n\n  // Create the form field context\n  const formFieldContext = useFormFieldContextProps({\n    hasTruncatedLabel: showTruncatedTooltip,\n    hasValue,\n    isDisabled,\n    isFocused,\n    isInputFocused,\n    isLoading,\n    isReadonly\n  });\n\n  // Determine the highest severity from the messages\n  const messageSeverity = useMessageSeverity(messages);\n\n  // Determine the label variant\n  const labelVariant: ComponentProps<typeof Label>['variant'] =\n    labelEdge !== 'none' ? labelEdge : undefined;\n\n  return {\n    baseId,\n    formFieldContext,\n    inputProps: {\n      id: inputId,\n      'aria-describedby': merge([helpIconId, uaId, ariaDescribedBy]),\n      'aria-invalid':\n        messageSeverity === 'error'\n          ? 'true'\n          : (undefined as UnpackSignals<JSX.AriaAttributes>['aria-invalid']),\n      variant: styleVariant,\n      onBlur: focusProps?.onFocusOut,\n      onFocus: focusProps?.onFocusIn\n    },\n    labelProps: {\n      forId: inputId,\n      helpIconId,\n      helpSourceLink,\n      helpSourceText,\n      id: labelId,\n      isRequiredShown,\n      labelRef,\n      userAssistanceDensity,\n      variant: labelVariant\n    },\n    textFieldProps: {\n      contentVariant,\n      statusVariant: /error|warning/.test(messageSeverity ?? '')\n        ? (messageSeverity as 'error' | 'warning')\n        : undefined,\n      styleVariant\n    },\n    userAssistanceProps: {\n      id: uaId\n    }\n  };\n}\n"],"names":["ariaDescribedBy","contentVariant","helpSourceLink","helpSourceText","isDisabled","isFocused","isLoading","isReadonly","isRequiredShown","labelEdge","messages","styleVariant","userAssistanceDensity","value","baseId","useId","labelId","undefined","inputId","uaId","helpIconId","labelRef","useRef","showTruncatedTooltip","setShowTruncatedTooltip","useState","onBlurWithin","useCallback","onFocusWithin","isTruncated","detectTruncation","focusProps","isInputFocused","useFocusWithin","hasValue","formFieldContext","useFormFieldContextProps","hasTruncatedLabel","messageSeverity","useMessageSeverity","labelVariant","inputProps","id","merge","variant","onBlur","onFocusOut","onFocus","onFocusIn","labelProps","forId","textFieldProps","statusVariant","test","userAssistanceProps"],"mappings":"oQAuCgB,UAAgBA,gBAC9BA,EAAeC,eACfA,EAAcC,eACdA,EAAcC,eACdA,EAAcC,WACdA,EAAUC,UACVA,EAASC,UACTA,EAASC,WACTA,EAAUC,gBACVA,EAAeC,UACfA,EAASC,SACTA,EAAQC,aACRA,EAAYC,sBACZA,EAAqBC,MACrBA,IAEA,MAAMC,EAASC,EAAAA,QACTC,EAAwB,SAAdP,EAAuB,GAAGK,eAAiBG,EACrDC,EAAWX,OAAiCU,EAApB,GAAGH,UAC3BK,EAAQf,OAA8Ba,EAAjB,GAAGH,OACxBM,EAAuC,YAA1BR,EAAsC,GAAGE,kBAAoBG,EAM1EI,EAAWC,SAAyB,OACnCC,EAAsBC,GAA2BC,EAAQA,UAAC,GAC3DC,EAAeC,EAAAA,aAAY,KAC/BH,GAAwB,EAAM,GAC7B,IACGI,EAAgBD,EAAAA,aAAY,KAChC,MAAME,EAA4B,WAAdpB,IAA2BL,GAAa0B,mBAAiBT,GAC7EG,EAAwBK,EAAY,GACnC,CAACzB,EAAYK,EAAWY,KAErBU,WAAEA,EAAY1B,UAAW2B,GAAmBC,EAAAA,eAAe,CAC/D7B,aACAsB,eACAE,kBAEIM,OAAqBjB,IAAVJ,IAAyC,iBAAVA,GAAgC,KAAVA,GAGhEsB,EAAmBC,EAAAA,yBAAyB,CAChDC,kBAAmBd,EACnBW,WACA9B,aACAC,YACA2B,iBACA1B,YACAC,eAII+B,EAAkBC,qBAAmB7B,GAGrC8B,EACU,SAAd/B,EAAuBA,OAAYQ,EAErC,MAAO,CACLH,SACAqB,mBACAM,WAAY,CACVC,GAAIxB,EACJ,mBAAoByB,EAAAA,EAAM,CAACvB,EAAYD,EAAMnB,IAC7C,eACsB,UAApBsC,EACI,YACCrB,EACP2B,QAASjC,EACTkC,OAAQd,GAAYe,WACpBC,QAAShB,GAAYiB,WAEvBC,WAAY,CACVC,MAAOhC,EACPE,aACAlB,iBACAC,iBACAuC,GAAI1B,EACJR,kBACAa,WACAT,wBACAgC,QAASJ,GAEXW,eAAgB,CACdlD,iBACAmD,cAAe,gBAAgBC,KAAKf,GAAmB,IAClDA,OACDrB,EACJN,gBAEF2C,oBAAqB,CACnBZ,GAAIvB,GAGV"}