{"version":3,"file":"Submenu-d0c548f0.js","sources":["../../src/UNSAFE_Menu/DropdownSubmenu.tsx","../../src/UNSAFE_Menu/SheetSubmenu.tsx","../../src/UNSAFE_Menu/Submenu.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState } from 'preact/compat';\n\nimport { DirectionalExpandArrowIcon } from '../PRIVATE_ThemedIcons/DirectionalExpandArrowIcon';\nimport { useId } from '../hooks/UNSAFE_useId';\n\nimport { BaseMenuItem } from './MenuItem';\nimport { DropdownMenu } from './DropdownMenu';\nimport { useMenuContainerContext } from './useMenuContainerContext';\nimport { SubmenuProps } from './Submenu';\nimport { scaleVars } from '@oracle/oraclejet-internal-theme-contract/themeContract.css';\nimport { useScale } from '#hooks/UNSAFE_useScale';\n\nexport const DropdownSubmenu = ({ label, children, startIcon, itemKey }: SubmenuProps) => {\n  //Id of the submenu that will be used to connect via aria-owns, menuItem with its submenu\n  const submenuId = useId();\n\n  const preProcessedMenuItemID = useId();\n  //MenuItem id\n  const menuItemId = useMemo(\n    () => `oj-menu-item-${preProcessedMenuItemID}`,\n    [preProcessedMenuItemID]\n  );\n\n  const { changeKey, currentKey } = useMenuContainerContext();\n\n  const submenuMenuItemRef = useRef<HTMLAnchorElement | null>(null);\n  const dropdownSubmenuRef = useRef<HTMLDivElement | null>(null);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [currentFocus, setCurrentFocus] = useState<'menu' | 'firstItem' | 'none'>('none');\n\n  const [pxPerUnit, setPxPerUnit] = useState(DEFAULT_PX_PER_UNIT);\n  const scale = useScale();\n\n  useEffect(() => {\n    // Important to have scale as a posible reason for running this effect since changing scale would produce a need of updating px per unit\n    if (!scale || !scaleVars?.size?.units) {\n      setPxPerUnit(0.25 * remInPx());\n    } else {\n      // We asume scale vars has the form of var(x), due to that we obtain string inside parenthesis, if not found empty string is passed\n      const cssVar = /\\(([^)]+)\\)/.exec(scaleVars.size.units)?.[1] || '';\n      // We try to get css var value, if this could not be obtained we use 0.25rem as fallback value\n      const valueofCSSVar = window\n        .getComputedStyle(submenuMenuItemRef.current as Element)\n        .getPropertyValue(cssVar);\n      if (valueofCSSVar.endsWith('px')) {\n        setPxPerUnit(parseFloat(valueofCSSVar));\n      } else if (valueofCSSVar.endsWith('rem')) {\n        setPxPerUnit(parseFloat(valueofCSSVar) * remInPx());\n      } else {\n        setPxPerUnit(0.25 * remInPx());\n      }\n    }\n  }, [scale]);\n\n  useEffect(() => {\n    if (menuItemId !== currentKey) {\n      setIsOpen(false);\n    }\n  }, [currentKey, menuItemId]);\n\n  //This function is used when pressing submenuitem and hovering over it\n  const openSubmenuAction = useCallback((e: Event) => {\n    submenuMenuItemRef.current?.focus();\n    //If not click/touch we set the focus on the first item\n    setIsOpen(true);\n    if (e.type === 'keyup') {\n      setCurrentFocus('firstItem');\n    } else {\n      setCurrentFocus('none');\n    }\n  }, []);\n\n  //TODO: There is a bug in a Icon, once that bug is solved we have to check this again. JET-56980\n  const hoverStatus = useRef<{ recentClose: boolean; pendingUnhover: boolean }>({\n    recentClose: false,\n    pendingUnhover: false\n  });\n\n  return (\n    <>\n      <BaseMenuItem\n        itemKey={itemKey}\n        startIcon={startIcon}\n        id={menuItemId}\n        submenuId={submenuId}\n        ref={submenuMenuItemRef}\n        label={label}\n        endIcon={<DirectionalExpandArrowIcon></DirectionalExpandArrowIcon>}\n        type=\"submenu\"\n        role=\"menuitem\"\n        onAction={openSubmenuAction}\n        hoverInfo={{\n          //Specific hover events of submenuItem\n          hoverProps: {\n            onMouseEnter: (e: MouseEvent) => {\n              openSubmenuAction(e);\n            }\n          },\n          hoverStatus\n        }}\n        //Open submenu using right/left key\n        openSubmenu={() => {\n          setIsOpen(true);\n          setCurrentFocus('firstItem');\n        }}\n        submenuRef={dropdownSubmenuRef}\n        isSubmenuOpen={isOpen}></BaseMenuItem>\n\n      <DropdownMenu\n        isOpen={isOpen}\n        menuLevel=\"sub\"\n        menuId={submenuId}\n        //Close submenu with left/right key\n        closeSubmenu={() => {\n          hoverStatus.current.recentClose = true;\n          changeKey({ key: currentKey, reason: 'keyboard' });\n          setTimeout(() => {\n            hoverStatus.current.recentClose = false;\n          }, HOVER_SHIFT_TIMEOUT);\n          setIsOpen(false);\n          //CurrentKey can be the same as submenuItem, because of that we explicitly focus it\n          submenuMenuItemRef.current?.focus();\n        }}\n        /*For now we are exposing ref if this is exposed at some point we would look for other\n            mechanisms to use this ref */\n        ref={dropdownSubmenuRef}\n        anchorRef={submenuMenuItemRef}\n        defaultPlacement=\"end-top\"\n        currentFocus={currentFocus}\n        offsetValue={{\n          mainAxis: -(2 * pxPerUnit), //TODO: need to figure out how to make this themable.\n          crossAxis: -(2 * pxPerUnit + 1)\n        }}\n        flipOptions={{\n          crossAxis: true,\n          mainAxis: true,\n          fallbackPlacements: ['start-top', 'end-bottom', 'start-bottom']\n        }}>\n        {children}\n      </DropdownMenu>\n    </>\n  );\n};\n\nconst HOVER_SHIFT_TIMEOUT = 100;\nconst DEFAULT_PX_PER_UNIT = 4;\nconst remInPx = () => {\n  return parseInt(window.getComputedStyle(document.documentElement).fontSize || '16px', 10);\n};\n","import { useCallback, useRef, useState } from 'preact/hooks';\n\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { DirectionalCollapseArrowIcon } from '../PRIVATE_ThemedIcons/DirectionalCollapseArrowIcon';\nimport { DirectionalExpandArrowIcon } from '../PRIVATE_ThemedIcons/DirectionalExpandArrowIcon';\n\nimport { BaseMenuItem } from './MenuItem';\nimport { useMenuContainerContext } from './useMenuContainerContext';\nimport { SubmenuProps } from './Submenu';\nimport { createPortal } from 'preact/compat';\nimport { MenuContainer } from './MenuContainer';\nimport { useMenuContext } from './useMenuContext';\n\nexport const SheetSubmenu = ({ label, children, startIcon, itemKey }: SubmenuProps) => {\n  const { isMobile } = useMenuContext();\n  const submenuId = useId();\n  const submenuItemId = useId();\n  const submenuTitleId = useId();\n\n  const submenuMenuItemRef = useRef<HTMLAnchorElement | null>(null);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [initialFocus, setInitialFocus] = useState<'menu' | 'secondItem' | 'secondItemDueToTouch'>(\n    'menu'\n  );\n\n  const { menuContainerRef, changeKey } = useMenuContainerContext();\n\n  const openSubmenuDirectional = useCallback(() => {\n    openSubmenu();\n    setInitialFocus('secondItem');\n  }, []);\n\n  const openSubmenuAction = useCallback((e: Event) => {\n    openSubmenu();\n    //If the submenu is open using keyboard focus has to go to second item(first is the title), if not to the menu Container\n    if (e.type === 'keyup') {\n      setInitialFocus('secondItem');\n    } else {\n      if (isMobile) {\n        setInitialFocus('secondItemDueToTouch');\n      } else {\n        setInitialFocus('menu');\n      }\n    }\n  }, []);\n\n  const returnFocusToSubmenuItem = useCallback(() => {\n    changeKey({ key: submenuItemId, reason: 'keyboard' });\n    submenuMenuItemRef.current?.focus();\n  }, [changeKey, submenuItemId, submenuMenuItemRef]);\n\n  /* No need to \"save\" these functions with useCallback */\n\n  const openSubmenu = () => {\n    /* Menu hidden instead of unmounted for two main reasons:\n      1. Children need to be updated even if menu is not present.\n      2. We can't unmount parent since all the submenus are children of main menu */\n    (menuContainerRef.current as HTMLElement).style.display = 'none';\n    setIsOpen(true);\n  };\n  const closeSubmenu = () => {\n    setIsOpen(false);\n    if (menuContainerRef.current) {\n      //Submenu is unmounted and prev menu is visible again.\n      /*Dom manipulation is kind of dirty. Have to check for new approaches. JET-57239 */\n      menuContainerRef.current.style.display = 'block';\n    }\n  };\n\n  const closeSubmenuPressingTitleItem = (e: Event) => {\n    closeSubmenu();\n    //If the submenu is closed using keyboard focus has to go to submenuItem that opened submenu, if not to the menu Container\n    if (e.type === 'keyup') {\n      returnFocusToSubmenuItem();\n    } else {\n      if (isMobile) {\n        changeKey({ key: submenuItemId, reason: 'touch' });\n        // We need to add a little delay due to VO double tap producing focusing wrong item. Will be removed once animation is added for sheet submenus\n        setTimeout(() => {\n          submenuMenuItemRef.current?.focus();\n        }, 0);\n      } else {\n        changeKey({ key: undefined, reason: 'click' });\n        menuContainerRef.current?.focus();\n      }\n    }\n  };\n\n  const closeDirectional = () => {\n    closeSubmenu();\n    returnFocusToSubmenuItem();\n  };\n\n  return (\n    <>\n      <BaseMenuItem\n        itemKey={itemKey}\n        startIcon={startIcon}\n        id={submenuItemId}\n        submenuId={submenuId}\n        ref={submenuMenuItemRef}\n        label={label}\n        endIcon={<DirectionalExpandArrowIcon></DirectionalExpandArrowIcon>}\n        type=\"submenu\"\n        role=\"menuitem\"\n        onAction={openSubmenuAction}\n        openSubmenu={openSubmenuDirectional}\n        isSubmenuOpen={isOpen}></BaseMenuItem>\n      {!isOpen\n        ? null\n        : // We need to use portal to ensure all submenus are siblings so if one dissapear not every submenu dissapear\n          createPortal(\n            <MenuContainer\n              display=\"sheet\"\n              aria-label={label}\n              menuId={submenuId}\n              closeSubmenu={closeDirectional}\n              menuLevel=\"sub\"\n              anchorRef={submenuMenuItemRef}\n              //TODO: We need to check if this initial focus is desired based on some W3C specs\n              currentFocus={initialFocus}>\n              <BaseMenuItem\n                id={submenuTitleId}\n                menuItemLabelWeight=\"bold\"\n                role=\"menuitem\"\n                type=\"submenu\"\n                startIcon={<DirectionalCollapseArrowIcon></DirectionalCollapseArrowIcon>}\n                onAction={closeSubmenuPressingTitleItem}\n                label={label}></BaseMenuItem>\n              {children}\n            </MenuContainer>,\n            menuContainerRef.current?.parentElement as HTMLElement\n          )}\n    </>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\n\nimport { DropdownSubmenu } from './DropdownSubmenu';\nimport { SheetSubmenu } from './SheetSubmenu';\nimport { useMenuContext } from './useMenuContext';\n\nexport type SubmenuProps = {\n  /**\n   * Set of menu groups or menu items that submenumenu will hold.Even though you could pass other type of children,\n   * is strongly recommended to use MenuItem, menu groups or components that return this type of components\n   * since passing other type of components children produces not desirable behaviors.\n   */\n  children?: ComponentChildren;\n\n  /**\n   *  Determines submenu text.\n   */\n  label: string;\n\n  /**\n   *  Submenu item startIcon\n   */\n  startIcon?: ComponentChildren;\n  /**\n   *  Item key\n   */\n  itemKey?: string;\n};\n\n/*Submenu behaves differently depending the device */\nexport const Submenu = (props: SubmenuProps) => {\n  const { isMobile } = useMenuContext();\n  return (\n    <>\n      {isMobile ? (\n        <SheetSubmenu {...props}></SheetSubmenu>\n      ) : (\n        <DropdownSubmenu {...props}></DropdownSubmenu>\n      )}\n    </>\n  );\n};\n"],"names":["DropdownSubmenu","label","children","startIcon","itemKey","submenuId","useId","preProcessedMenuItemID","menuItemId","useMemo","changeKey","currentKey","useMenuContainerContext","submenuMenuItemRef","useRef","dropdownSubmenuRef","isOpen","setIsOpen","useState","currentFocus","setCurrentFocus","pxPerUnit","setPxPerUnit","DEFAULT_PX_PER_UNIT","scale","useScale","useEffect","scaleVars","size","units","cssVar","exec","valueofCSSVar","window","getComputedStyle","current","getPropertyValue","endsWith","parseFloat","remInPx","openSubmenuAction","useCallback","e","focus","type","hoverStatus","recentClose","pendingUnhover","_jsxs","_jsx","BaseMenuItem","id","ref","endIcon","jsx","DirectionalExpandArrowIcon","role","onAction","hoverInfo","hoverProps","onMouseEnter","openSubmenu","submenuRef","isSubmenuOpen","DropdownMenu","menuLevel","menuId","closeSubmenu","key","reason","setTimeout","HOVER_SHIFT_TIMEOUT","anchorRef","defaultPlacement","offsetValue","mainAxis","crossAxis","flipOptions","fallbackPlacements","parseInt","document","documentElement","fontSize","SheetSubmenu","isMobile","useMenuContext","submenuItemId","submenuTitleId","initialFocus","setInitialFocus","menuContainerRef","openSubmenuDirectional","returnFocusToSubmenuItem","style","display","_Fragment","createPortal","jsxs","MenuContainer","menuItemLabelWeight","DirectionalCollapseArrowIcon","undefined","parentElement","props"],"mappings":"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"}