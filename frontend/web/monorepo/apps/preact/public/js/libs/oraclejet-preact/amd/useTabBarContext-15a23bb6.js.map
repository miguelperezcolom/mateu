{"version":3,"file":"useTabBarContext-15a23bb6.js","sources":["../../src/UNSAFE_TabBarCommon/TabBarContext.ts","../../src/UNSAFE_TabBarCommon/useTabBarContext.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext } from 'preact';\nimport { TabBarProps } from '../UNSAFE_TabBar';\n\nexport type TabBarContextProps<K extends string | number> = Pick<\n  TabBarProps<K>,\n  'layout' | 'display' | 'size' | 'selection' | 'onSelect' | 'onRemove'\n> & {\n  currentKey?: K;\n  showFocusRing: boolean;\n  hideTooltip: boolean;\n  isEdgeBottom?: boolean;\n  tabItemPrefix: string;\n};\n/**\n * Context used to pass TabBar information without having to pass it to TabBar children props.\n * We want to communicate information down to any interested TabBar item children.\n */\n\nconst TabBarContext = createContext<TabBarContextProps<string | number>>(null!);\n\nexport { TabBarContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\nimport { TabBarContext } from './TabBarContext';\n\n/**\n * Utility hook for consuming the TabBarContext\n *\n * @returns The value of TabBarContext provider\n */\nfunction useTabBarContext() {\n  return useContext(TabBarContext);\n}\n\nexport { useTabBarContext };\n"],"names":["TabBarContext","createContext","useContext"],"mappings":"yEA0BA,MAAMA,EAAgBC,EAAaA,cAAsC,2CCVzE,WACE,OAAOC,EAAAA,WAAWF,EACpB"}