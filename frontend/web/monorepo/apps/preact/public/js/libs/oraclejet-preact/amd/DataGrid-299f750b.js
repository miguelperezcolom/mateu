define(['exports', 'preact/jsx-runtime', 'preact/hooks', './Skeleton-a7e166a0', './classNames-08d99695', './PRIVATE_DataGrid/themes/DataGridCell.css', './PRIVATE_DataGrid/themes/DataGrid.css'], (function(e,t,o,l,r,n,a){"use strict";const c=(e,t,o)=>{let l=`\n    grid-row-start: ${e.rowStart+1};\n    grid-row-end: ${e.rowStart+e.rowExtent+1};\n    grid-column-start: ${e.columnStart+1};\n    grid-column-end: ${e.columnStart+e.columnExtent+1};\n  `;switch(e.cellType){case"rowHeader":case"rowHeaderSkeleton":l+=`left: ${t*e.level}px;`;break;case"rowEndHeader":case"rowEndHeaderSkeleton":case"rowEndHeaderLabel":l+=`right: ${t*e.level}px;`;break;case"columnEndHeader":case"columnEndHeaderSkeleton":case"columnEndHeaderLabel":l+=`bottom: ${o*e.level}px;`;break;case"columnHeader":case"columnHeaderSkeleton":l+=`top: ${o*e.level}px;`;break;case"rowHeaderLabel":case"columnHeaderLabel":l+=`\n        top: ${o*e.rowStart}px;\n        left: ${t*e.columnStart}px;\n      `}return l.trim()},d=e=>{const t=[n.dataGridCellStyles.base];return["rowHeader","rowEndHeader","columnEndHeader","columnHeader","rowHeaderSkeleton","rowEndHeaderSkeleton","columnEndHeaderSkeleton","columnHeaderSkeleton"].includes(e.cellType)?t.push(n.dataGridCellStyles.header):["rowHeaderLabel","columnHeaderLabel","topLeftSpacer"].includes(e.cellType)?t.push(n.dataGridCellStyles.topLeft):["rowEndHeaderLabel","topRightSpacer"].includes(e.cellType)?t.push(n.dataGridCellStyles.topRight):["columnEndHeaderLabel","bottomLeftSpacer"].includes(e.cellType)?t.push(n.dataGridCellStyles.bottomLeft):["bottomRightSpacer"].includes(e.cellType)?t.push(n.dataGridCellStyles.bottomRight):"rowHeaderSpacer"===e.cellType?t.push(n.dataGridCellStyles.rhSpacer):"columnHeaderSpacer"===e.cellType&&t.push(n.dataGridCellStyles.chSpacer),e.lastRow&&t.push(n.dataGridCellStyles.lastRow),e.lastColumn&&t.push(n.dataGridCellStyles.lastColumn),e.borderLeft&&t.push(n.dataGridCellStyles.borderLeft),e.borderTop&&t.push(n.dataGridCellStyles.borderTop),r.classNames(t)};function s({cell:e,height:o,width:r}){return e.cellType.includes("Skeleton")?t.jsx("div",{style:c(e,r,o),class:d(e),children:t.jsx(l.Skeleton,{height:"6x",width:"16x"})}):t.jsx("div",{style:c(e,r,o),class:d(e),children:e.data})}const u="row",m="rowEnd",w="column",i="columnEnd",S=({ranges:e,totalColumnCount:t,totalRowCount:o,onLoadRange:l,height:n,width:c,cell:d,header:s},S)=>{const p=(t,o)=>{const l=t?.[o]?.levels;let r;return"row"===o?r=e.rowHeaders:"rowEnd"===o?r=e.rowEndHeaders:"column"===o?r=e.columnHeaders:"columnEnd"===o&&(r=e.columnEndHeaders),r&&l&&l>0?l:0},E=(e,t)=>{const o=e?.[t]?.label;return o&&p(e,t)>0},h=(e,t,o)=>p(e,t)>0&&p(e,o)>0,f=(e,t,o)=>E(e,t)&&E(e,o),H=h(s,u,w),y=f(s,u,w),x=!E(s,u),b=!E(s,w),C=p(s,u),g=p(s,w),v=H&&(!y&&x&&b||y&&C>g||y&&C>1&&g>1),k=h(s,m,w)&&!E(s,m),T=h(s,u,i)&&!E(s,i),L=h(s,m,i),$=h(s,u,w)&&f(s,u,w)&&Math.min(p(s,u),p(s,w))>=1,G=(E(s,w)||E(s,i))&&p(s,u)<=0,R=(E(s,u)||E(s,m))&&p(s,w)<=0,I=(e,t)=>p(e,t)>0?p(e,t):0;let j="unknown"===t?0:t;const M=j;j+=I(s,u)+I(s,m),j+=G?1:0;let O="unknown"===o?0:o;const P=O;O+=I(s,w)+I(s,i),O+=$?1:0,O+=R?1:0;const A=p(s,w)+($||R?1:0),D=A,B=O-p(s,i),N=p(s,u)+(G?1:0),W=N,V=j-p(s,m),_=(e=>{if(!e||0===e.length)return!1;const t=[];e.sort(((e,t)=>e.rowStart===t.rowStart?e.columnStart-t.columnStart:e.rowStart-t.rowStart));for(const o of e){const e=t[t.length-1];!e||e.rowStart+e.rowCount<o.rowStart||e.columnStart+e.columnCount<o.columnStart?t.push(o):(e.rowCount=Math.max(e.rowStart+e.rowCount,o.rowStart+o.rowCount)-e.rowStart,e.columnCount=Math.max(e.columnStart+e.columnCount,o.columnStart+o.columnCount)-e.columnStart)}return t})(e.dataBody);let q=0,z=0;_&&_.forEach((e=>{z+=e.columnCount,q+=e.rowCount}));const F=[],J=new Map,K=(e,t,o)=>{for(let l=e;l<e+o;l++)J.set(`${l},${t}`,{cellType:"skip"})},Q=(e,t,o)=>{for(let l=t;l<t+o;l++)J.set(`${e},${l}`,{cellType:"skip"})},U=(e,t,o)=>{let l=1,r=1,n=0,a=0;const c=p(s,w),d=p(s,u);switch(e){case"rowEndHeaderLabel":a=t-o-1,l=$?c+1:c;break;case"columnEndHeaderLabel":n=t-o-1,r=d>0?d:1;break;case"rowHeaderLabel":a=o,l=$?1:c;break;case"columnHeaderLabel":n=o,r=$?1:d}return{rowExtent:l,columnExtent:r,rowOffset:n,columnOffset:a}},X=(e,t,o,l,r,n)=>{if(e.label)for(let a=0;a<e.levels;a++){const c=e.label.data(a),{rowExtent:d,columnExtent:s,rowOffset:u,columnOffset:m}=U(l,e.levels,a),w=t+u,i=o+m;F.push({cellType:l,rowStart:w,rowExtent:d,columnStart:i,columnExtent:s,data:c.data,borderTop:!(r||!n)&&a===e.levels-1,borderLeft:!(!r||!n)&&a===e.levels-1,level:a})}};if(e.rowHeaders&&s?.row&&s.row.label&&X(s.row,$?A-1:0,0,"rowHeaderLabel",!0,!1),e.columnHeaders&&s?.column&&s.column.label&&X(s.column,0,$?N-1:0,"columnHeaderLabel",!1,!1),e.rowEndHeaders&&s?.rowEnd&&s.rowEnd.label&&X(s.rowEnd,0,V,"rowEndHeaderLabel",!0,!0),e.columnEndHeaders&&s?.columnEnd&&s.columnEnd.label&&X(s.columnEnd,B,0,"columnEndHeaderLabel",!1,!0),T){const e=p(s,u)>0?p(s,u):0,t=p(s,i),o=B;F.push({cellType:"bottomLeftSpacer",rowStart:o,rowExtent:t,columnStart:0,columnExtent:e,borderRight:!0,borderTop:!0})}if(L){const e=p(s,m),t=p(s,i),o=B,l=j-p(s,m);F.push({cellType:"bottomRightSpacer",rowStart:o,rowExtent:t,columnStart:l,columnExtent:e,borderTop:!0,borderLeft:!0})}if(k){const e=p(s,m);let t=p(s,w)>0?p(s,w):1;$&&(t+=1);const o=0,l=V;F.push({cellType:"topRightSpacer",rowStart:o,rowExtent:t,columnStart:l,columnExtent:e,borderLeft:!0})}if(v){const e=$?p(s,u)-1:p(s,u),t=p(s,w),o=0,l=0;F.push({cellType:"topLeftSpacer",rowStart:o,rowExtent:t,columnStart:l,columnExtent:e})}if(G){let e=E(s,w)?p(s,w):0,t=O;E(s,w)&&(t-=p(s,w)),E(s,i)&&(t-=p(s,i)),R&&(t-=1,e+=1),F.push({cellType:"rowHeaderSpacer",rowStart:e,rowExtent:t,columnStart:0,columnExtent:1,lastRow:!!E(s,i)})}if(R){const e=E(s,u)?p(s,u):0;let t=j;E(s,u)&&(t-=p(s,u)),E(s,m)&&(t-=p(s,m)),F.push({cellType:"columnHeaderSpacer",rowStart:0,rowExtent:1,columnStart:e,columnExtent:t,lastColumn:!!E(s,m)})}const Y=(e,t,o,l)=>{let r=e,n=t;return"rowEndHeader"===o?n=l-t-1:"columnEndHeader"===o&&(r=l-e-1),{rowOffset:r,columnOffset:n}},Z=(e,t,o,l,r,n,a)=>{t.forEach((t=>{const{rowStart:c,rowEnd:d,columnStart:s,columnEnd:u}=((e,t,o)=>t?{rowStart:e.rowStart,rowEnd:e.rowCount+e.rowStart,columnStart:0,columnEnd:o}:{rowStart:0,rowEnd:o,columnStart:e.columnStart,columnEnd:e.columnCount+e.columnStart})(t,n,e.levels);for(let m=c;m<d;m++)for(let c=s;c<u;c++){const{rowOffset:d,columnOffset:s}=Y(m,c,r,e.levels),u=o+d,w=l+s,i=J.get(`${u},${w}`);if("skip"===i?.cellType)continue;const S=e.data(n?m:c,n?c:m);let p=S.extent,E=S.depth;"columnHeader"===r&&m===e.levels-1&&$&&(E+=1);const h=n?t.rowStart+t.rowCount:t.columnStart+t.columnCount;(n&&m+p>h||!n&&c+p>h)&&(p=n?h-m:h-c),F.push({cellType:r,rowStart:u,rowExtent:n?p:E,columnStart:w,columnExtent:n?E:p,data:S.data,level:n?c:m,borderTop:!(n||!a)&&m===e.levels-1,borderLeft:!(!n||!a)&&c===e.levels-1,lastColumn:!n&&c+p===M,lastRow:n&&m+p===P}),p>1&&(n?K(u,w,p):Q(u,w,p)),E>1&&(n?Q(u,w,E):K(u,w,E))}}))},ee=(e,t,o)=>{const l=[];e.sort(((e,o)=>t(e)-t(o)));for(let r=0;r<e.length;r++)if(!l.length||o(l[l.length-1])<t(e[r]))l.push(e[r]);else{const t=l[l.length-1];l[l.length-1]={...t,end:Math.max(o(t),o(e[r]))}}return l};if(e.rowHeaders&&s?.row){const t=ee(e.rowHeaders,(e=>e.rowStart),(e=>e.rowCount));Z(s.row,t,A,0,"rowHeader",!0,!1)}if(e.rowEndHeaders&&s?.rowEnd){const t=ee(e.rowEndHeaders,(e=>e.rowStart),(e=>e.rowCount));Z(s.rowEnd,t,D,V,"rowEndHeader",!0,!0)}if(e.columnHeaders&&s?.column){const t=ee(e.columnHeaders,(e=>e.columnStart),(e=>e.columnCount));Z(s.column,t,0,N,"columnHeader",!1,!1)}if(e.columnEndHeaders&&s?.columnEnd){const t=ee(e.columnEndHeaders,(e=>e.columnStart),(e=>e.columnCount));Z(s.columnEnd,t,B,W,"columnEndHeader",!1,!0)}const te=(e,t,o,l)=>{for(let r=e;r<e+t;r++)for(let e=o;e<o+l;e++)J.set(`${r},${e}`,{cellType:"skip"})};var oe;d&&_&&(oe=d,_.forEach((e=>{if((e=>null!=e?.rowCount&&null!=e?.rowStart&&null!=e?.columnCount&&null!=e?.columnStart)(e)){const{rowStart:t,rowEnd:o,columnStart:l,columnEnd:r}=(e=>({rowStart:e.rowStart,rowEnd:e.rowCount+e.rowStart,columnStart:e.columnStart,columnEnd:e.columnCount+e.columnStart}))(e);for(let e=t;e<o;e++)for(let t=l;t<r;t++){const o=A+e,l=N+t,r=J.get(`${o},${l}`);if("skip"===r?.cellType)continue;const n=oe.data(e,t),a=n.rowExtent,c=n.columnExtent;F.push({cellType:"cell",rowStart:o,rowExtent:a,columnStart:l,columnExtent:c,data:n.data,lastColumn:t+c===M,lastRow:e+a===P}),(a>1||c>1)&&te(o,a,l,c)}}}))),S.forEach((e=>{let t=e.rowIndex?e.rowIndex:0,o=1;let l=e.columnIndex?e.columnIndex:0;"columnHeaderSkeleton"===e.type?(t=0+e.level,$&&e.level+1===s?.column?.levels&&(o=2),l=N+l):"columnEndHeaderSkeleton"===e.type?(t=B+p(s,i)-t-1,l=W+l):"rowHeaderSkeleton"===e.type?(l=0+e.level,t=A+t):"rowEndHeaderSkeleton"===e.type?(l=V+p(s,m)-l-1,t=D+t):(t=A+t,l=N+l),F.push({cellType:e.type,rowStart:t,rowExtent:o,columnStart:l,columnExtent:1,level:e.level,borderTop:"columnEndHeaderSkeleton"===e.type&&e.level+1===s?.columnEnd?.levels,borderLeft:"rowEndHeaderSkeleton"===e.type&&e.level+1===s?.rowEnd?.levels})})),l({});const le=r.classNames([a.dataGridStyles.base]);return{grid:F,classes:le,style:`grid-template-rows: ${Array(O).fill("50px").join(" ")}; grid-template-columns: ${Array(j).fill("85px").join(" ")}; width: ${c}px; height: ${n}px;`,cellHeight:50,cellWidth:85}};e.DataGrid=function(e){const[l,r]=o.useState([]),{grid:n,classes:a,style:c,cellHeight:d,cellWidth:u}=S(e,l),m=(e,t,o,l)=>{const r=Math.round((l?e.offsetHeight:e.offsetWidth)/t),n=Math.round((l?e.scrollTop:e.scrollLeft)/t),a=Math.round(r/2),c=n-a,d=c>0?c:0,s=d+r+2*a;return{topPosition:d,bottomPosition:s<o?s:o}},w=(e,t,o,l,r,n,a=!0)=>{if(t&&e)for(let c=0;c<e;c++){const e=new Array(l).fill(null);t.forEach((t=>{const o=a?t.rowStart:t.columnStart,l=a?t.rowCount:t.columnCount;for(let t=o;t<o+l;t++)t<e.length&&(e[t]=!0)}));for(let t=o;t<e.length;t++)e[t]||n.push({type:`${r}Skeleton`,[a?"rowIndex":"columnIndex"]:t,level:c})}};return o.useEffect((()=>{const t=document.getElementById("dataGrid"),{topPosition:o,bottomPosition:l}=m(t,d,e.totalRowCount,!0),{topPosition:n,bottomPosition:a}=m(t,u,e.totalColumnCount,!1),c=[];if(w(e.header?.row?.levels,e.ranges.rowHeaders,o,l,"rowHeader",c,!0),w(e.header?.rowEnd?.levels,e.ranges.rowEndHeaders,o,l,"rowEndHeader",c,!0),w(e.header?.column?.levels,e.ranges.columnHeaders,n,a,"columnHeader",c,!1),w(e.header?.columnEnd?.levels,e.ranges.columnEndHeaders,n,a,"columnEndHeader",c,!1),e.ranges.dataBody){const t=new Array(a).fill(null).map((()=>new Array(l).fill(null)));e.ranges.dataBody.forEach((e=>{for(let o=e.columnStart;o<e.columnStart+e.columnCount;o++)if(o<t.length)for(let l=e.rowStart;l<e.rowStart+e.rowCount;l++)l<t[o].length&&(t[o][l]=!0)}));for(let e=n;e<t.length;e++)for(let l=o;l<t[e].length;l++)t[e][l]||c.push({type:"cellSkeleton",columnIndex:e,rowIndex:l})}r(c)}),[d,u,e]),t.jsx("div",{id:"dataGrid",role:"application",class:a,style:c,children:n.map((e=>t.jsx(s,{cell:e,height:d,width:u})))})}}));
//# sourceMappingURL=DataGrid-299f750b.js.map
