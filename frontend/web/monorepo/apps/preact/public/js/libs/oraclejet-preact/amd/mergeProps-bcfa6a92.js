define(['exports'], (function(e){"use strict";function t(e,t,r){if("class"===t){const t=e.class;e.class=t?[t,r].join(" ").trim():r}else if("style"===t){if("object"!=typeof r)throw new Error(`Unable to merge prop '${t}'. Only support 'style' objects not 'style' strings`);e.style={...e.style,...r}}else if("function"==typeof r){const s=e[t];e[t]=s?(...e)=>{s(...e),r(...e)}:r}else{if(void 0===r||"object"!=typeof r&&r===e[t])return;if(t in e){if("aria-describedby"!==t&&"aria-labelledby"!==t&&"aria-owns"!==t&&"aria-controls"!==t&&"aria-details"!==t)throw new Error(`Unable to merge prop '${t}'. Only support 'className', 'style', some aria properties, and event handlers`);{const s=e[t];e[t]=s?[s,r].join(" ").trim():r}}else e[t]=r}}e.mergeProps=function(...e){return 1===e.length?e[0]:e.reduce(((e,r)=>{for(const s in r)t(e,s,r[s]);return e}),{})}}));
//# sourceMappingURL=mergeProps-bcfa6a92.js.map
