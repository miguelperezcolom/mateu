{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;AAiBA,kDAiBC;AAjCD,qEAAmE;AACnE,2EAAwE;AAC/D,0GADA,qDAAyB,OACA;AAElC;;;;;;;;;;;GAWG;AACI,KAAK,UAAU,mBAAmB,CACvC,MAAkB,EAClB,EAAM;IAEN,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAC3C,8DAA8D;IAC9D,IAAI,CAAC,CAAC,KAAK,YAAY,qDAAyB,CAAC,EAAE,CAAC;QAClD,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,UAAU,EAAE,CAAC;QACzC,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,KAAK,2BAA2B,EAAE,CAAC;YAC3D,YAAY,GAAG,yDAAyD,CAAC;QAC3E,CAAC;QACD,MAAM,KAAK,CACT,uBAAuB,EAAE,aAAa,KAAK,CAAC,WAAW,CAAC,IAAI,SAAS,OAAO,mBAAmB,qDAAyB,CAAC,IAAI,KAAK,YAAY,EAAE,CACjJ,CAAC;IACJ,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,IAAA,8BAAQ,EAAC,uBAAuB,EAAE,qDAAyB,CAAC,CAAC","sourcesContent":["import { By } from 'selenium-webdriver';\nimport { DriverLike, register } from '@oracle/oraclejet-webdriver';\nimport { ButtonsetSingleWebElement } from './ButtonsetSingleWebElement';\nexport { ButtonsetSingleWebElement };\n\n/**\n * Retrieve an instance of [ButtonsetSingleWebElement](../classes/ButtonsetSingleWebElement.html).\n * @example\n * ```javascript\n * import { findButtonsetSingle } from '@oracle/oraclejet-core-pack/webdriver';\n * const el = await findButtonsetSingle(driver, By.id('my-oj-c-buttonset-single'));\n * ```\n * @param driver A WebDriver/WebElement instance from where the element will be\n * searched. If WebDriver is passed, the element will be searched globally in the\n * document. If WebElement is passed, the search will be relative to this element.\n * @param by The locator with which to find the element\n */\nexport async function findButtonsetSingle(\n  driver: DriverLike,\n  by: By\n): Promise<ButtonsetSingleWebElement> {\n  const webEl = await driver.findElement(by);\n  // Check that the element is of type ButtonsetSingleWebElement\n  if (!(webEl instanceof ButtonsetSingleWebElement)) {\n    const tagName = await webEl.getTagName();\n    let supplemental = '';\n    if (webEl.constructor.name === 'ButtonsetSingleWebElement') {\n      supplemental = 'You likely have multiple installations of this package.';\n    }\n    throw Error(\n      `findButtonsetSingle(${by}) created ${webEl.constructor.name} for <${tagName}>, but expected ${ButtonsetSingleWebElement.name}. ${supplemental}`\n    );\n  }\n  return webEl;\n}\n\nregister('oj-c-buttonset-single', ButtonsetSingleWebElement);\n"]}