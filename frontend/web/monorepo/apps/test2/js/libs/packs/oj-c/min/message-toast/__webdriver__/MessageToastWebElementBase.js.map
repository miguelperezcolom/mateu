{"version":3,"file":"MessageToastWebElementBase.js","sourceRoot":"","sources":["MessageToastWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,0BAA2B,SAAQ,uBAAY;IAC1D;;;;;OAKG;IACI,OAAO;QACZ,OAAO,IAAI,CAAC,WAAW,CAAU,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACI,sBAAsB;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAgB,qBAAqB,CAAC,CAAC;IAChE,CAAC;IAED;;;;;OAKG;IACI,oBAAoB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAgB,mBAAmB,CAAC,CAAC;IAC9D,CAAC;IAED;;;;;OAKG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,WAAW,CAAkB,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAS,UAAU,CAAC,CAAC;IAC9C,CAAC;CACF;AAlDD,gEAkDC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-message-toast WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, MessageToastWebElement.ts.\n */\nexport class MessageToastWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>data</code> property.\n   * Data for the Message Toast component.\n   * @return The value of <code>data</code> property.\n   * @deprecated Since 15.0.0. Data sets from a DataProvider cannot be sent to WebDriverJS; use ViewModels or page variables instead.\n   */\n  public getData(): Promise<unknown> {\n    return this.getProperty<unknown>('data');\n  }\n\n  /**\n   * Gets the value of <code>detailTemplateValue</code> property.\n   * A dynamic template key or a function that determines the detail template for the current row.\n   * @return The value of <code>detailTemplateValue</code> property.\n   *\n   */\n  public getDetailTemplateValue(): Promise<string | null> {\n    return this.getProperty<string | null>('detailTemplateValue');\n  }\n\n  /**\n   * Gets the value of <code>iconTemplateValue</code> property.\n   * A dynamic template key or a function that determines the icon template for the current row.\n   * @return The value of <code>iconTemplateValue</code> property.\n   *\n   */\n  public getIconTemplateValue(): Promise<string | null> {\n    return this.getProperty<string | null>('iconTemplateValue');\n  }\n\n  /**\n   * Gets the value of <code>offset</code> property.\n   * Offset for the Message Toast component's position.\n   * @return The value of <code>offset</code> property.\n   *\n   */\n  public getOffset(): Promise<number | object> {\n    return this.getProperty<number | object>('offset');\n  }\n\n  /**\n   * Gets the value of <code>position</code> property.\n   * Position for the Message Toast component.\n   * @return The value of <code>position</code> property.\n   *\n   */\n  public getPosition(): Promise<string> {\n    return this.getProperty<string>('position');\n  }\n}\n"]}