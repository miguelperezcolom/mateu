{"version":3,"file":"ConveyorBeltWebElement.js","sourceRoot":"","sources":["ConveyorBeltWebElement.ts"],"names":[],"mappings":";;;AACA,6EAA0E;AAE1E;;;;GAIG;AACH,MAAa,sBAAuB,SAAQ,uDAA0B;IACpE,qBAAqB;IAErB;;;;OAIG;IACH,KAAK,CAAC,qBAAqB,CAAC,OAAgB;QAC1C,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;QACvB,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,aAAa,CACzC,CAAC,EAAO,EAAE,EAAW,EAAE,EAAE,CAAC,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC,EACtD,IAAI,EACJ,EAAE,CACH,CAAC;IACJ,CAAC;CACF;AAjBD,wDAiBC","sourcesContent":["import { Locator } from 'selenium-webdriver';\nimport { ConveyorBeltWebElementBase } from './ConveyorBeltWebElementBase';\n\n/**\n * The component WebElement for [oj-c-conveyor-belt](../../jsdocs/oj-c.ConveyorBelt.html).\n * Do not instantiate this class directly, instead, use\n * [findConveyorBelt](../functions/findConveyorBelt.html).\n */\nexport class ConveyorBeltWebElement extends ConveyorBeltWebElementBase {\n  // Put overrides here\n\n  /**\n   * Scroll the conveyor belt, so that the conveyor belt's element (button, tab bar) of interest is in the view\n   *\n   * @param {Locator} locator The lookup to pass into findElement\n   */\n  async scrollElementIntoView(locator: Locator): Promise<void> {\n    await this.whenReady();\n    let el = await this.findElement(locator);\n    return await this.getDriver().executeScript(\n      (cb: any, el: Element) => cb.scrollElementIntoView(el),\n      this,\n      el\n    );\n  }\n}\n"]}