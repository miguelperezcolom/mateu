{"version":3,"file":"MenuButtonWebElement.js","sourceRoot":"","sources":["MenuButtonWebElement.ts"],"names":[],"mappings":";;;AAAA,yEAAsE;AACtE,2DAAwC;AAExC,MAAM,kBAAkB,GACtB,8EAA8E;IAC9E,wFAAwF;IACxF,4FAA4F,CAAC;AAE/F;;;;GAIG;AACH,MAAa,oBAAqB,SAAQ,mDAAwB;IAAlE;;QAkDE;;;WAGG;QACK,UAAK,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAiB1E,CAAC;IAtEC;;OAEG;IACH,KAAK,CAAC,KAAK;QACT,kEAAkE;QAClE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED;;SAEK;IACL,KAAK,CAAC,mBAAmB,CACvB,KAAU,EACV,SAAqC;QAErC,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC;YACtB,IAAI,MAAM,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;gBACvB,OAAO,CAAC,CAAC;YACX,CAAC;QACH,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,YAAY,CAAC,aAAgC;QACxD,gBAAgB;QAChB,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;YACjC,KAAK,MAAM,KAAK,IAAI,aAAa,EAAE,CAAC;gBAClC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;QACH,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,QAAQ;QACpB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAE,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACrE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAQD;;OAEG;IACK,KAAK,CAAC,WAAW,CAAC,aAAqB;QAC7C,wCAAwC;QACxC,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC,uBAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAElF,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;YACrE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YAClC,OAAO,IAAI,KAAK,aAAa,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,MAAM,KAAK,EAAE,KAAK,EAAE,CAAC;IACvB,CAAC;CACF;AAvED,oDAuEC","sourcesContent":["import { MenuButtonWebElementBase } from './MenuButtonWebElementBase';\nimport { By } from 'selenium-webdriver';\n\nconst MENU_ITEM_LOCATION =\n  '#__oj_zorder_container [role=menuitem], #__root_layer_host [role=menuitem], ' +\n  '#__oj_zorder_container [role=menuitemradio], #__root_layer_host [role=menuitemradio], ' +\n  '#__oj_zorder_container [role=menuitemcheckbox], #__root_layer_host [role=menuitemcheckbox]';\n\n/**\n * The component WebElement for [oj-c-menu-button](../../jsdocs/oj-c.MenuButton.html).\n * Do not instantiate this class directly, instead, use\n * [findMenuButton](../functions/findMenuButton.html).\n */\nexport class MenuButtonWebElement extends MenuButtonWebElementBase {\n  /**\n   * Perform a click on the button to open the menu or close the menu\n   */\n  async click() {\n    // Find the <button> element to click so that it can receive focus\n    const button = await this.findElement(By.css('button'));\n    return button.click();\n  }\n\n  /**\n   * Helper util\n   * */\n  async findAsyncSequential<T>(\n    array: T[],\n    predicate: (t: T) => Promise<boolean>\n  ): Promise<T | undefined> {\n    for (const t of array) {\n      if (await predicate(t)) {\n        return t;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Fire the ojMenuAction event on the oj-c-menu-button, and\n   * invoke the Action handler of the selected value.\n   *\n   */\n  public async doMenuAction(selectedValue: string | string[]): Promise<void> {\n    // open the menu\n    await this.openMenu();\n    if (Array.isArray(selectedValue)) {\n      for (const value of selectedValue) {\n        await this.doMenuClick(value);\n      }\n    } else {\n      await this.doMenuClick(selectedValue);\n    }\n  }\n\n  /**\n   * openMenu - opens the menu\n   */\n  private async openMenu() {\n    const button = await this.findElement(By.css('button[type=button]'));\n    await button.click();\n  }\n\n  /**\n   * delay - delays the milliseconds\n   * await delay(2000);\n   */\n  private delay = (ms: number) => new Promise((fn) => setTimeout(fn, ms));\n\n  /**\n   * In order to do nested selections, we need an isolated menu clicker\n   */\n  private async doMenuClick(selectedValue: string): Promise<void> {\n    // Find the <menu-item> element to click\n    await this.delay(350);\n    const menuItems = await this.getDriver().findElements(By.css(MENU_ITEM_LOCATION));\n\n    const match = await this.findAsyncSequential(menuItems, async (item) => {\n      const text = await item.getText();\n      return text === selectedValue;\n    });\n\n    await match?.click();\n  }\n}\n"]}