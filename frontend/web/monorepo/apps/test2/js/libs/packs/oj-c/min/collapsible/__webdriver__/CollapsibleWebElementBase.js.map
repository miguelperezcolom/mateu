{"version":3,"file":"CollapsibleWebElementBase.js","sourceRoot":"","sources":["CollapsibleWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,yBAA0B,SAAQ,uBAAY;IACzD;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;OAKG;IACI,eAAe;QACpB,OAAO,IAAI,CAAC,WAAW,CAAS,cAAc,CAAC,CAAC;IAClD,CAAC;IAED;;;;;OAKG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;IAC7C,CAAC;CACF;AAxCD,8DAwCC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-collapsible WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, CollapsibleWebElement.ts.\n */\nexport class CollapsibleWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>disabled</code> property.\n   * Disables the collapsible if set to true.\n   * @return The value of <code>disabled</code> property.\n   *\n   */\n  public getDisabled(): Promise<boolean> {\n    return this.getProperty<boolean>('disabled');\n  }\n\n  /**\n   * Gets the value of <code>expanded</code> property.\n   * Specifies if the content is expanded.\n   * @return The value of <code>expanded</code> property.\n   *\n   */\n  public getExpanded(): Promise<boolean> {\n    return this.getProperty<boolean>('expanded');\n  }\n\n  /**\n   * Gets the value of <code>iconPosition</code> property.\n   * Controls placement of the icon in the header.\n   * @return The value of <code>iconPosition</code> property.\n   *\n   */\n  public getIconPosition(): Promise<string> {\n    return this.getProperty<string>('iconPosition');\n  }\n\n  /**\n   * Gets the value of <code>variant</code> property.\n   * Controls display of the optional divider below the header.\n   * @return The value of <code>variant</code> property.\n   *\n   */\n  public getVariant(): Promise<string> {\n    return this.getProperty<string>('variant');\n  }\n}\n"]}