/**
 * @license
 * Copyright (c) 2014, 2025, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojeventtarget","ojs/ojarraydataproviderimpl"],function(e,t){"use strict";
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */const i=(e,t,i,r)=>{const s=Math.min,n=Math.max,a=[];let l;const o=e.length;let h;const u=t.length,g=u-o||1,c=o+u+1;let d,p,y,f;for(l=0;l<=o;l++)for(p=d,a.push(d=[]),y=s(u,l+g),f=n(0,l-1),h=f;h<=y;h++)if(h)if(l)if(e[l-1]===t[h-1])d[h]=p[h-1];else{const e=p[h]||c,t=d[h-1]||c;d[h]=s(e,t)+1}else d[h]=h+1;else d[h]=l+1;const _=[];let m;const K=[],v=[];for(l=o,h=u;l||h;)m=a[l][h]-1,h&&m===a[l][h-1]?(--h,K.push(_[_.length]={status:i,value:t[h],index:h})):l&&m===a[l-1][h]?(--l,v.push(_[_.length]={status:r,value:e[l],index:l})):(--h,--l);return _.reverse()};class r{set data(e){const t=this._data?.slice()??[];let r;Array.isArray(e)?Object.isFrozen(e)?r=e:(r=e.slice(),Object.freeze(r)):r=null==e?[]:[].concat(e),0===t.length&&r.length>0||0===r.length&&t.length>0?(this._keys=null,this._data=r,this._impl.flushQueue(),this._impl.resetTotalFilteredRowCount()):(this._generateKeysIfNeeded(()=>this._impl.generateKeys()),this._data=r,this._changes=((e,t)=>{const r="added",s="deleted";return t=t||[],(e=e||[]).length<t.length?i(e,t,r,s):i(t,e,s,r)})(t,this._data),null!=this._changes&&this._changes.length>0&&(this._impl.queueMutationEvent(this._changes),this._impl.flushQueue()))}get data(){return this._data}get dataChanges(){return this._changes}constructor(e=[],i){this._data=e,this.options=i,this._impl=new t.ArrayDataProviderImpl(i,{getData:()=>this._data,getKeys:()=>this._keys,generateKeysIfNeeded:e=>this._generateKeysIfNeeded(e),mergeSortCriteria:e=>this._mergeSortCriteria(e),getSortComparator:e=>this._getSortComparator(e),dispatchEvent:e=>this.dispatchEvent(e),supportAbortController:!1,getKeyForDelete:(e,t)=>this._getKeyForDelete(e,t),spliceKeys:(...e)=>this._keys.splice(...e),keysSpecified:!1}),this.data=e}containsKeys(e){return this._impl.containsKeys(e)}fetchByKeys(e){return this._impl.fetchByKeys(e)}fetchByOffset(e){return this._impl.fetchByOffset(e)}fetchFirst(e){return this._impl.fetchFirst(e)}getCapability(e){return t.getCapability(e)}static getCapability(e){return t.getCapability(e)}getTotalSize(){return this._impl.getTotalSize()}isEmpty(){return this._impl.isEmpty()}createOptimizedKeySet(e){return t.createOptimizedKeySet(e)}createOptimizedKeyMap(e){return t.createOptimizedKeyMap(e)}_getKeyForDelete(e,t){return this._keys[e.index]}_generateKeysIfNeeded(e){return null==this._keys&&(this._keys=e(),!0)}_getSortComparator(e){return(i,r)=>{const s=null!=this.options?this.options.sortComparators:null;let n,a,l,o,h,u;for(n=0;n<e.length;n++)if(a=e[n].direction,l=e[n].attribute,o=null,null!=s&&(o=s.comparators.get(l)),h=t.getVal(i.value,l),u=t.getVal(r.value,l),null!=o){const e="descending"==a?-1:1,t=o(h,u)*e;if(0!=t)return t}else{let e=0;const t="string"==typeof h?h:new String(h).toString(),i="string"==typeof u?u:new String(u).toString();if("ascending"===a){if("null"===t||"undefined"===t)return 1;if("null"===i||"undefined"===i)return-1;e=t.localeCompare(i,void 0,{numeric:!0,sensitivity:"base"})}else{if("null"===t||"undefined"===t)return-1;if("null"===i||"undefined"===i)return 1;e=i.localeCompare(t,void 0,{numeric:!0,sensitivity:"base"})}if(0!=e)return e}return 0}}_mergeSortCriteria(e){return e&&e.length>0?e:this.options?.implicitSort}}return e.EventTargetMixin.applyMixin(r),r});
//# sourceMappingURL=ojmutablearraydataprovider.js.map