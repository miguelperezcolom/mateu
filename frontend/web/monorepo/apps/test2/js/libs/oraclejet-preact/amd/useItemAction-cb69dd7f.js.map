{"version":3,"file":"useItemAction-cb69dd7f.js","sources":["../../src/hooks/PRIVATE_useItemAction/useItemAction.tsx"],"sourcesContent":["import { useCallback } from 'preact/hooks';\nimport { DataState, ItemActionDetail, ListItemContext, Metadata } from '../../UNSAFE_Collection';\n\nimport { keyExtractor } from '../../utils/PRIVATE_collectionUtils';\n\nexport const useItemAction = <K extends string | number, D>(\n  currentKey: K | undefined,\n  dataState: DataState<K, D> | null,\n  onItemAction: ((detail: ItemActionDetail<K, D>) => void) | undefined,\n  itemSelector: string,\n  allowSpacebar: boolean\n) => {\n  const onClick = useCallback(\n    (event: MouseEvent) => {\n      const key = keyExtractor(event.target as HTMLElement, itemSelector) as K;\n      if (\n        handleItemAction(\n          event,\n          key,\n          dataState as DataState<K, D>,\n          onItemAction as (detail: ItemActionDetail<K, D>) => void\n        )\n      ) {\n        event.stopPropagation();\n      }\n    },\n    [dataState, onItemAction, itemSelector]\n  );\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        handleItemAction(\n          event,\n          currentKey,\n          dataState as DataState<K, D>,\n          onItemAction as (detail: ItemActionDetail<K, D>) => void\n        );\n      } else if (allowSpacebar && event.key === ' ') {\n        handleItemAction(\n          event,\n          currentKey,\n          dataState as DataState<K, D>,\n          onItemAction as (detail: ItemActionDetail<K, D>) => void\n        );\n        event.preventDefault();\n      }\n    },\n    [dataState, onItemAction, currentKey, allowSpacebar]\n  );\n\n  return !dataState || !onItemAction\n    ? {}\n    : {\n        onClick,\n        onKeyDown\n      };\n};\n\nconst handleItemAction = <K, D>(\n  event: MouseEvent | KeyboardEvent,\n  key: K | undefined,\n  dataState: DataState<K, D>,\n  onItemAction: (detail: ItemActionDetail<K, D>) => void\n) => {\n  if (key !== undefined) {\n    const context = findItemContext(key, dataState);\n    context && onItemAction({ context: context, target: event.target });\n    return context !== undefined;\n  }\n  return false;\n};\n\n// returns a ListItemContext based on key\nexport const findItemContext = <K, D>(\n  key: K,\n  dataState: DataState<K, D>\n): ListItemContext<K, D> | undefined => {\n  const index = dataState?.data?.findIndex((d) => d.metadata.key === key) ?? -1;\n  if (index > -1) {\n    const context: ListItemContext<K, D> = {\n      index: index + (dataState?.offset || 0),\n      data: dataState?.data[index].data as D,\n      metadata: dataState?.data[index].metadata as Metadata<K>\n    };\n    return context;\n  }\n  return undefined;\n};\n"],"names":["handleItemAction","event","key","dataState","onItemAction","undefined","context","findItemContext","target","index","data","findIndex","d","metadata","offset","currentKey","itemSelector","allowSpacebar","onClick","useCallback","keyExtractor","stopPropagation","onKeyDown","preventDefault"],"mappings":"6FAKO,MAsDDA,EAAmB,CACvBC,EACAC,EACAC,EACAC,KAEA,QAAYC,IAARH,EAAmB,CACrB,MAAMI,EAAUC,EAAgBL,EAAKC,GAErC,OADAG,GAAWF,EAAa,CAAEE,QAASA,EAASE,OAAQP,EAAMO,cACvCH,IAAZC,CACR,CACD,OAAO,CAAK,EAIDC,EAAkB,CAC7BL,EACAC,KAEA,MAAMM,EAAQN,GAAWO,MAAMC,WAAWC,GAAMA,EAAEC,SAASX,MAAQA,MAAS,EAC5E,GAAIO,GAAS,EAAG,CAMd,MALuC,CACrCA,MAAOA,GAASN,GAAWW,QAAU,GACrCJ,KAAMP,GAAWO,KAAKD,GAAOC,KAC7BG,SAAUV,GAAWO,KAAKD,GAAOI,SAGpC,CACe,sCAlFW,CAC3BE,EACAZ,EACAC,EACAY,EACAC,KAEA,MAAMC,EAAUC,eACblB,IACC,MAAMC,EAAMkB,EAAYA,aAACnB,EAAMO,OAAuBQ,GAEpDhB,EACEC,EACAC,EACAC,EACAC,IAGFH,EAAMoB,iBACP,GAEH,CAAClB,EAAWC,EAAcY,IAGtBM,EAAYH,eACflB,IACmB,UAAdA,EAAMC,IACRF,EACEC,EACAc,EACAZ,EACAC,GAEOa,GAA+B,MAAdhB,EAAMC,MAChCF,EACEC,EACAc,EACAZ,EACAC,GAEFH,EAAMsB,iBACP,GAEH,CAACpB,EAAWC,EAAcW,EAAYE,IAGxC,OAAQd,GAAcC,EAElB,CACEc,UACAI,aAHF,CAAE,CAID"}