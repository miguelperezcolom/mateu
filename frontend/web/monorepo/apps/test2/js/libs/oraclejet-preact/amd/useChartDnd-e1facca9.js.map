{"version":3,"file":"useChartDnd-e1facca9.js","sources":["../../src/hooks/PRIVATE_useChartDnd/useChartDnd.ts","../../src/hooks/PRIVATE_useChartDnd/dndChartUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { RefObject } from 'preact';\nimport type { Dispatch, StateUpdater } from 'preact/hooks';\nimport type {\n  ChartDndProps,\n  ChartSeriesData,\n  DragStartDetail,\n  DropDetail,\n  ChartItemData,\n  SelectionDetail\n} from '#utils/UNSAFE_visTypes/chart';\nimport {\n  getChartDragContext,\n  getChartDropContext,\n  isChartDraggable,\n  getDragImageElements\n} from '#hooks/PRIVATE_useChartDnd/dndChartUtils';\nimport { Dimension } from '#utils/UNSAFE_visTypes/common';\nimport { DragImageProps, useDnd } from '#hooks/PRIVATE_useVisDnd';\nimport { GroupLevelItem } from '#PRIVATE_Axis/groupAxis/hierarchicalUtils';\n\ntype Props<K, D> = {\n  levelsArray: GroupLevelItem[][];\n  series: ChartSeriesData<K, D>[];\n  getDataItem: (seriesIndex: number, groupIndex: number, groupPath: number[]) => D | undefined;\n  rootRef: RefObject<HTMLDivElement>;\n  xSpace: Dimension;\n  ySpace: Dimension;\n  plotAreaSpace: Dimension;\n  selectedIds: Set<K>;\n  setDragOver: Dispatch<StateUpdater<{ accepted: boolean | undefined; type: string }>>;\n  setDatatipDisabled: Dispatch<StateUpdater<boolean>>;\n  onSelectionChange?: SelectionDetail<K, D>;\n} & ChartDndProps<D>;\n\nexport const useChartDnd = <K, D extends ChartItemData<K>>({\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  onDragEnter,\n  onDragLeave,\n  onDragOver,\n  onDrop,\n  rootRef,\n  series,\n  selectedIds,\n  levelsArray,\n  getDataItem,\n  groupDraggable,\n  itemsDraggable,\n  xSpace,\n  ySpace,\n  plotAreaSpace,\n  setDragOver,\n  setDatatipDisabled,\n  onSelectionChange\n}: Props<K, D>) => {\n  const draggable = isChartDraggable(\n    series,\n    levelsArray,\n    getDataItem,\n    groupDraggable,\n    itemsDraggable\n  );\n\n  const getDragContext = function (target: HTMLElement, event: DragEvent) {\n    return getChartDragContext<K, D>(\n      target,\n      levelsArray,\n      rootRef,\n      event,\n      selectedIds,\n      series,\n      getDataItem,\n      groupDraggable,\n      itemsDraggable\n    );\n  };\n  const getDropContext = function (event: DragEvent) {\n    const context = getChartDropContext(xSpace, ySpace, plotAreaSpace, event);\n    return context;\n  };\n  const getChartDragImage = function (props: DragImageProps<DragStartDetail<D>>) {\n    return getDragImageElements(rootRef, props.context, props.event);\n  };\n\n  const onPreDndStart = function (context: DragStartDetail<D>) {\n    if (context?.type === 'items') {\n      const items = context.items;\n      const ids = items.map((item) => item.data.id);\n      const data = items.map((item) => item.data);\n      onSelectionChange?.({ ids: [...ids], data: [...data] });\n    }\n  };\n\n  const showDropEffect = function (context: DropDetail) {\n    setDragOver({\n      accepted: true,\n      type: context.type\n    });\n  };\n\n  const showRejectedDropEffect = function (context: DropDetail) {\n    setDragOver({\n      accepted: false,\n      type: context.type\n    });\n  };\n\n  const clearDropEffect = function () {\n    setDragOver({\n      accepted: undefined,\n      type: ''\n    });\n  };\n\n  const { dragProps, dropProps, content } = useDnd<DragStartDetail<D>, DropDetail>({\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragOver,\n    onDrop,\n    getDragContext,\n    getDropContext,\n    getDragImage: getChartDragImage,\n    onPreDndStart,\n    setDatatipDisabled,\n    showRejectedDropEffect,\n    showDropEffect,\n    clearDropEffect\n  });\n  return {\n    draggable: draggable,\n    dndProps: draggable ? { ...dragProps, ...dropProps } : dropProps,\n    dndContent: content\n  };\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Dimension } from '#utils/UNSAFE_visTypes/common';\nimport type {\n  Group,\n  DragStartDetail,\n  ChartSeriesData,\n  DropDetail,\n  ChartItemData\n} from '#utils/UNSAFE_visTypes/chart';\nimport { getInfo, inSpace } from '#utils/UNSAFE_visUtils';\nimport type { RefObject } from 'preact';\nimport { findSeriesGroupIndexFromId } from '#utils/PRIVATE_chartUtils/utils';\nimport { GroupLevelItem } from '#PRIVATE_Axis/groupAxis/hierarchicalUtils';\n\nexport function getChartDragContext<K, D extends ChartItemData<K>>(\n  target: HTMLElement,\n  levelsArray: GroupLevelItem[][],\n  rootRef: RefObject<HTMLElement>,\n  event: DragEvent,\n  selectedIds: Set<K>,\n  series: ChartSeriesData<K, D>[],\n  getDataItem?: (seriesIndex: number, groupIndex: number, groupPath: number[]) => D | undefined,\n  groupDraggable?: (group: Group) => 'on' | 'off',\n  itemsDraggable?: (data: D, seriesIndex: number, groupIndex: number) => 'on' | 'off'\n) {\n  //We search for the key using the target of the event\n  const info = getInfo(rootRef, target);\n  const seriesIndex = info ? info.seriesIndex : undefined;\n  const groupIndex = info ? info.groupIndex : undefined;\n  const levelIndex = info ? info.levelIndex : undefined;\n\n  let context;\n  if (\n    seriesIndex !== undefined &&\n    groupIndex !== undefined &&\n    getDataItem?.(seriesIndex, groupIndex, levelsArray[levelsArray.length - 1]?.[groupIndex].path)\n  ) {\n    const currentData = getDataItem(\n      seriesIndex,\n      groupIndex,\n      levelsArray[levelsArray.length - 1]?.[groupIndex].path\n    )! as D;\n    if (itemsDraggable && itemsDraggable(currentData, seriesIndex, groupIndex) == 'on') {\n      const data = [];\n      if (selectedIds.size > 1 && selectedIds.has(currentData.id)) {\n        const iterator = selectedIds.values();\n        let current = iterator.next().value;\n        while (current !== undefined) {\n          const { seriesIndex, groupIndex } = findSeriesGroupIndexFromId(\n            series,\n            current,\n            levelsArray,\n            getDataItem\n          );\n          data.push({\n            data: getDataItem(\n              seriesIndex,\n              groupIndex,\n              levelsArray[levelsArray.length - 1]?.[groupIndex].path\n            ),\n            seriesIndex,\n            groupIndex\n          });\n          current = iterator.next().value;\n        }\n      } else {\n        data.push({\n          data: getDataItem(\n            seriesIndex,\n            groupIndex,\n            levelsArray[levelsArray.length - 1]?.[groupIndex]?.path\n          ),\n          seriesIndex,\n          groupIndex\n        });\n      }\n      context = {\n        items: data,\n        type: 'items',\n        event\n      } as DragStartDetail<D>;\n    }\n  } else if (groupIndex !== undefined && levelIndex != undefined) {\n    if (groupDraggable && groupDraggable(levelsArray[levelIndex][groupIndex].item)) {\n      context = {\n        group: levelsArray[levelIndex][groupIndex].item,\n        groupIndex: groupIndex,\n        type: 'xAxisTickLabel',\n        event\n      } as DragStartDetail<D>;\n    }\n  }\n  return context as DragStartDetail<D>;\n}\n\nexport function getChartDropContext(\n  xSpace: Dimension,\n  ySpace: Dimension,\n  plotAreaSpace: Dimension,\n  event: DragEvent\n) {\n  //We search for the key using the target of the event\n  const offSetX = event.offsetX;\n  const offSetY = event.offsetY;\n  let context;\n  if (inSpace(offSetX, offSetY, xSpace)) {\n    context = {\n      type: 'xAxis',\n      x: offSetX - xSpace.x,\n      event\n    };\n  } else if (inSpace(offSetX, offSetY, ySpace)) {\n    context = {\n      type: 'yAxis',\n      y: offSetY - ySpace.y,\n      event\n    };\n  } else if (inSpace(offSetX, offSetY, plotAreaSpace)) {\n    context = {\n      type: 'plotArea',\n      x: offSetX - plotAreaSpace.x,\n      y: offSetY - plotAreaSpace.y,\n      event\n    };\n  }\n  return context as DropDetail;\n}\n\nexport function isChartDraggable<K, D>(\n  series: ChartSeriesData<K, D>[],\n  levelsArray: GroupLevelItem[][],\n  getDataItem: (seriesIndex: number, groupIndex: number, groupPath: number[]) => D | undefined,\n  groupDraggable?: (group: Group) => 'on' | 'off',\n  itemsDraggable?: (data: D, seriesIndex: number, groupIndex: number) => 'on' | 'off'\n) {\n  if (groupDraggable) {\n    for (let levelIndex = 0; levelIndex < levelsArray.length; levelIndex++) {\n      const groupItems = levelsArray[levelIndex];\n      for (let groupIndex = 0; groupIndex < groupItems.length; groupIndex++) {\n        if (groupDraggable(levelsArray[levelIndex][groupIndex].item) === 'on') {\n          return true;\n        }\n      }\n    }\n  }\n\n  if (itemsDraggable && getDataItem) {\n    const leafgroups = levelsArray[levelsArray.length - 1];\n    for (let i = 0; i < leafgroups.length; i++) {\n      for (let j = 0; j < series.length; j++) {\n        if (\n          getDataItem(j, i, leafgroups[i].path) &&\n          itemsDraggable(getDataItem(j, i, leafgroups[i].path)!, j, i) === 'on'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nexport function getDragImageElements<D>(\n  rootRef: RefObject<Element>,\n  context: DragStartDetail<D>,\n  event: DragEvent\n) {\n  const elems = [];\n  let elem;\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  const container = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  let width;\n  let height;\n\n  if (context?.type === 'items') {\n    const items = context.items;\n    // only component specific\n    for (let i = 0; i < items.length; i++) {\n      elem = rootRef.current?.querySelector(\n        `[data-oj-private-series-index=\"${items[i].seriesIndex}\"][data-oj-private-group-index=\"${items[i].groupIndex}\"]`\n      );\n      if (elem) elems.push(elem);\n    }\n  } else if (context?.type === 'xAxisTickLabel') {\n    elem = rootRef.current?.querySelector(`[data-oj-private-group-index=\"${context?.groupIndex}\"]`);\n    if (elem) elems.push(elem);\n  }\n  if (elems.length > 0) {\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    const bboxs = [];\n    for (let i = 0; i < elems.length; i++) {\n      const bbox = (elems[i] as SVGGraphicsElement).getBBox();\n      if (bbox.x < minX) {\n        minX = bbox.x;\n      }\n      if (bbox.x + bbox.width > maxX) {\n        maxX = bbox.x + bbox.width;\n      }\n      if (bbox.y < minY) {\n        minY = bbox.y;\n      }\n      if (bbox.y + bbox.height > maxY) {\n        maxY = bbox.y + bbox.height;\n      }\n      bboxs.push(bbox);\n    }\n    // Call getComputedStyles for font on the rootref\n    const styles = window.getComputedStyle(elems[0].parentElement!);\n    for (let i = 0; i < elems.length; i++) {\n      elem = elems[i];\n      const clone = elem.cloneNode(true) as SVGGraphicsElement;\n      container.appendChild(clone);\n    }\n    container.setAttribute('transform', `translate(${-minX},${-minY})`);\n    container.style.fontSize = styles.getPropertyValue('font-size');\n    container.style.fontFamily = styles.getPropertyValue('font-family');\n    container.style.textAnchor = styles.getPropertyValue('text-anchor');\n    container.style.dominantBaseline = styles.getPropertyValue('dominant-baseline');\n    width = maxX - minX;\n    height = maxY - minY;\n    svg.appendChild(container);\n    return {\n      image: svg,\n      offSetX: event.offsetX - minX,\n      offSetY: event.offsetY - minY,\n      width,\n      height\n    };\n  }\n  return null;\n}\n"],"names":["onDragStart","onDrag","onDragEnd","onDragEnter","onDragLeave","onDragOver","onDrop","rootRef","series","selectedIds","levelsArray","getDataItem","groupDraggable","itemsDraggable","xSpace","ySpace","plotAreaSpace","setDragOver","setDatatipDisabled","onSelectionChange","draggable","levelIndex","length","groupItems","groupIndex","item","leafgroups","i","j","path","isChartDraggable","dragProps","dropProps","content","useDnd","getDragContext","target","event","info","getInfo","seriesIndex","undefined","context","currentData","data","size","has","id","iterator","values","current","next","value","findSeriesGroupIndexFromId","push","items","type","group","getChartDragContext","getDropContext","offSetX","offsetX","offSetY","offsetY","inSpace","x","y","getChartDropContext","getDragImage","props","elems","elem","svg","document","createElementNS","container","width","height","querySelector","minX","Infinity","minY","maxX","maxY","bbox","getBBox","styles","window","getComputedStyle","parentElement","clone","cloneNode","appendChild","setAttribute","style","fontSize","getPropertyValue","fontFamily","textAnchor","dominantBaseline","image","getDragImageElements","onPreDndStart","ids","map","showRejectedDropEffect","accepted","showDropEffect","clearDropEffect","dndProps","dndContent"],"mappings":"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"}