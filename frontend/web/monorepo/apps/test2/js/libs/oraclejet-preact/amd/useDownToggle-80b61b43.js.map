{"version":3,"file":"useDownToggle-80b61b43.js","sources":["../../src/hooks/UNSAFE_useDownToggle/useDownToggle.ts"],"sourcesContent":["import { useCallback } from 'preact/hooks';\n\nexport type DownToggleDetail = {\n  value: boolean;\n};\n\nexport type DownToggleOptions = {\n  isDisabled?: boolean;\n  onToggle?: (details: DownToggleDetail) => void;\n  isOpen?: boolean;\n};\n\nexport type DownToggleReturnType = {\n  triggerProps: Record<string, any>;\n};\n\n/**\n * Toggle a state when down arrow is pressed to control a popup.\n * This can be used to control the visibility of a dropdown such as a color picker or menu.\n *\n * @returns\n */\nexport function useDownToggle({\n  isDisabled,\n  isOpen,\n  onToggle\n}: DownToggleOptions): DownToggleReturnType {\n  // DOWN ARROW invokes dropdown\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key == 'ArrowDown') {\n        !isDisabled && onToggle?.({ value: !isOpen });\n        event.preventDefault();\n      }\n    },\n    [isDisabled, isOpen, onToggle]\n  );\n\n  const triggerProps = isDisabled\n    ? {}\n    : {\n        onKeyDown,\n        'aria-haspopup': 'true',\n        'aria-expanded': isOpen\n      };\n\n  return {\n    triggerProps: triggerProps\n  };\n}\n"],"names":["isDisabled","isOpen","onToggle","onKeyDown","useCallback","event","key","value","preventDefault","triggerProps"],"mappings":"8EAsBM,UAAwBA,WAC5BA,EAAUC,OACVA,EAAMC,SACNA,IAGA,MAAMC,EAAYC,eACfC,IACkB,aAAbA,EAAMC,OACPN,GAAcE,IAAW,CAAEK,OAAQN,IACpCI,EAAMG,iBACP,GAEH,CAACR,EAAYC,EAAQC,IAWvB,MAAO,CACLO,aATmBT,EACjB,CAAE,EACF,CACEG,YACA,gBAAiB,OACjB,gBAAiBF,GAMzB"}