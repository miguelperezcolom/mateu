{"version":3,"file":"useThemeInterpolations-1dff2f9d.js","sources":["../../src/utils/PRIVATE_unsafeDomRefUtils/unsafeDomRefUtils.ts","../../src/hooks/UNSAFE_useThemeInterpolations/useThemeInterpolations.ts"],"sourcesContent":["import { RefObject } from 'preact';\n\nimport { UnsafeDomHandle, UNSAFE_DOM_ACCESS } from '#utils/UNSAFE_unsafeDomAccess';\n\n/**\n * Extracts and returns an element from an element-based ref\n *\n * @returns the element or null if no element can be extracted\n */\nexport function toUnsafeDomElement(\n  elementRef?: RefObject<Element> | RefObject<UnsafeDomHandle<Element>> | null\n) {\n  const current = elementRef?.current;\n\n  if (current) {\n    return current instanceof Element ? current : current[UNSAFE_DOM_ACCESS];\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { RefObject } from 'preact';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useColorScheme } from '../UNSAFE_useColorScheme';\nimport { useScale } from '../UNSAFE_useScale';\nimport { themeInterpolations } from '../../utils/UNSAFE_interpolations/theme';\nimport type { ThemeProps } from '../../utils/UNSAFE_interpolations/theme';\nimport { mergeInterpolations } from '../../utils/UNSAFE_mergeInterpolations';\nimport { DefaultEnvironment } from '../../UNSAFE_Environment/EnvironmentContext';\nimport { DARK_CLASS, INVERT_CLASS } from '../../UNSAFE_Theme';\nimport { useDensity } from '#hooks/UNSAFE_useDensity';\nimport { UnsafeDomHandle } from '#utils/UNSAFE_unsafeDomAccess';\n\nimport { toUnsafeDomElement } from '#utils/PRIVATE_unsafeDomRefUtils/unsafeDomRefUtils';\n\n/**\n * The logical parent of the re-parented content that 'launched' it in the popup/dropdown.\n */\ntype LogicalParentRef = RefObject<Element> | RefObject<UnsafeDomHandle<Element>> | null;\n\n// This hook encapsulates the logic required to determine which theme style classes are needed\n// for the current environment context's colorScheme, density, and scale value.  This would be used when\n// rendering dom outside of the current dom tree, but desire to match the colorScheme, density, and scale\n// of the original dom tree.\nexport function useThemeInterpolations(logicalParentRef?: LogicalParentRef) {\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark' | undefined>(undefined);\n\n  const currentColorScheme = useColorScheme();\n  const currentDensity = useDensity();\n  const currentScale = useScale();\n  // We don't want to interpolate the default environment values for scale or density. Those should get picked up by default.\n  // This fixes an issue for core pack components that utilize the Layer component, when in a legacy cookbook page.\n  const density = currentDensity !== DefaultEnvironment.density ? currentDensity : undefined;\n  const scale = currentScale !== DefaultEnvironment.scale ? currentScale : undefined;\n\n  // We want to use useLayoutEffect instead of useEffect here. Otherwise there could be\n  // flashing due to light colorScheme initial render then dark colorScheme after useEffect.\n  useLayoutEffect(() => {\n    // for colorScheme in Legacy, things are a bit more complicated because unlike scale which is always applied to\n    // the root dom element, we can switch to dark theme by adding the .oj-color-invert class to any dom element where\n    // we want the dark theme to start.  In Legacy, you can't switch back to light theme once you switch to dark (no nesting).\n    // The problem with our core pack Components that use Layer to display the dropdown, it is not in the same dom\n    // tree as the parent component.  It is in its own dom tree off of the root dom element, so it won't see the\n    // .oj-color-invert class in the dom tree of the select single.\n    // Since in legacy .oj-color-invert can appear anywhere, not just on the root dom element, if the colorScheme\n    // is the same as the default colorScheme then we need to look at the ref to determine if it or any of its\n    // ancestors has the .oj-color-invert class.  If it does(and doesn't have the preact .oj-c-colorscheme-dark class),\n    // use 'dark' colorScheme.\n    // We only want to do this for legacy, so if the closest element that has the .oj-color-invert also has .oj-c-colorscheme-dark,\n    // then we don't want to override since this isn't a legacy color change and we already handle it in our environment context\n    // so the color scheme nesting will work in Preact/Core Pack.\n    const logicalParent = toUnsafeDomElement(logicalParentRef);\n    const closestElementWithColorInvertClass = logicalParent?.closest(\n      `.${INVERT_CLASS}:not(.${DARK_CLASS})`\n    );\n\n    setColorScheme(\n      currentColorScheme !== DefaultEnvironment.colorScheme\n        ? currentColorScheme\n        : closestElementWithColorInvertClass\n        ? 'dark'\n        : undefined\n    );\n  }, [logicalParentRef, currentColorScheme]);\n\n  const interpolations = mergeInterpolations<ThemeProps>([...Object.values(themeInterpolations)]);\n  const { class: classes } = interpolations({ colorScheme, scale, density });\n  return classes;\n}\n"],"names":["toUnsafeDomElement","elementRef","current","Element","UNSAFE_DOM_ACCESS","logicalParentRef","colorScheme","setColorScheme","useState","undefined","currentColorScheme","useColorScheme","currentDensity","useDensity","currentScale","useScale","density","DefaultEnvironment","scale","useLayoutEffect","logicalParent","closestElementWithColorInvertClass","closest","INVERT_CLASS","DARK_CLASS","interpolations","mergeInterpolations","Object","values","themeInterpolations","class","classes"],"mappings":"mRASM,SAAUA,EACdC,GAEA,MAAMC,EAAUD,GAAYC,QAE5B,OAAIA,EACKA,aAAmBC,QAAUD,EAAUA,EAAQE,EAAiBA,mBAGlE,IACT,iDCWM,SAAiCC,GACrC,MAAOC,EAAaC,GAAkBC,EAAQA,cAA+BC,GAEvEC,EAAqBC,EAAAA,iBACrBC,EAAiBC,EAAAA,aACjBC,EAAeC,EAAAA,WAGfC,EAAUJ,IAAmBK,EAAAA,mBAAmBD,QAAUJ,OAAiBH,EAC3ES,EAAQJ,IAAiBG,EAAAA,mBAAmBC,MAAQJ,OAAeL,EAIzEU,EAAAA,iBAAgB,KAcd,MAAMC,EAAgBpB,EAAmBK,GACnCgB,EAAqCD,GAAeE,QACxD,IAAIC,EAAYA,qBAASC,EAAAA,eAG3BjB,EACEG,IAAuBO,EAAAA,mBAAmBX,YACtCI,EACAW,EACA,YACAZ,EACL,GACA,CAACJ,EAAkBK,IAEtB,MAAMe,EAAiBC,EAAAA,oBAAgC,IAAIC,OAAOC,OAAOC,EAAAA,wBACjEC,MAAOC,GAAYN,EAAe,CAAEnB,cAAaY,QAAOF,YAChE,OAAOe,CACT"}