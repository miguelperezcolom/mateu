{"version":3,"file":"soundUtils-f6535f03.js","sources":["../../src/utils/UNSAFE_soundUtils/soundUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nlet audioContext: AudioContext | undefined | null = undefined;\n\n/**\n * Creates a new audioContext or reuses the existing audioContext.\n *\n * @returns The audioContext instance\n * @throws {Error} Throws an error if WebAudio is not supported\n */\nfunction getAudioContext() {\n  // If we have already created an instance, then return the stored instance\n  if (audioContext) {\n    return audioContext;\n  }\n\n  // If we have the stored instance as null (not undefined, which represents we have not tried\n  // creating an instance of AudioContext yet), then WebAudio is not supported. Then throw an error\n  if (audioContext === null) {\n    throw new Error('Browser does not support WebAudio API');\n  }\n\n  // AudioContext is not created yet, try creating one.\n  try {\n    audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n  } catch (e) {\n    // WebAudio is not supported, store the value as null and throw an error\n    audioContext = null;\n    throw new Error('Browser does not support WebAudio API');\n  }\n\n  // Return the successfully created audioContext\n  return audioContext;\n}\n\n/**\n * Plays an audio using the URL specified.\n *\n * @param url The URL of the audio file\n * @returns A promise that resolves when the audio is play or rejects if there are any issues\n */\nexport function playAudioFromURL(url: string) {\n  let resolve;\n  let reject;\n  const returnPromise = new Promise<void | Error>((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  // Using an <audio> element is simple for our use case.\n  const audioElement = document.createElement('audio');\n  audioElement.src = url;\n\n  // Attach a listener for Invalid URL\n  audioElement.addEventListener('error', reject as any);\n\n  // Play the audio\n  // Some older browsers will not return a Promise, like IE. Though we do not have to support them\n  // it is safe to handle to it.\n  (audioElement.play() || Promise.resolve()).then(resolve, reject).catch(reject);\n\n  return returnPromise;\n}\n\n/**\n * Plays a notification sound using WebAudio API\n *\n * @throws {Error} Throws an error if WebAudio is not supported\n */\nexport function playDefaultNotificationSound() {\n  const audioContext = getAudioContext();\n  // Now that we know WebAudio API is supported, play a beep sound\n  // We will be using the default gain node, so simply creating an\n  // oscillator node should suffice.\n  const oscillatorNode = audioContext.createOscillator();\n\n  // For simple beep, we will be using the default values in the oscillator.\n  // sine wave, with frequency 440Hz.\n  // Connect the oscillatorNode to the default destination and play the sound\n  // for 100ms\n  oscillatorNode.connect(audioContext.destination);\n  oscillatorNode.start(0);\n  oscillatorNode.stop(audioContext.currentTime + 0.1); // 0.1 = 100ms\n}\n"],"names":["audioContext","getAudioContext","Error","window","AudioContext","webkitAudioContext","e","url","resolve","reject","returnPromise","Promise","_resolve","_reject","audioElement","document","createElement","src","addEventListener","play","then","catch","oscillatorNode","createOscillator","connect","destination","start","stop","currentTime"],"mappings":"6CAQA,IAAIA,EAQJ,SAASC,IAEP,GAAID,EACF,OAAOA,EAKT,GAAqB,OAAjBA,EACF,MAAM,IAAIE,MAAM,yCAIlB,IACEF,EAAe,IAAKG,OAAOC,cAAiBD,OAAeE,mBAC5D,CAAC,MAAOC,GAGP,MADAN,EAAe,KACT,IAAIE,MAAM,wCACjB,CAGD,OAAOF,CACT,oBAQM,SAA2BO,GAC/B,IAAIC,EACAC,EACJ,MAAMC,EAAgB,IAAIC,SAAsB,CAACC,EAAUC,KACzDL,EAAUI,EACVH,EAASI,CAAO,IAGZC,EAAeC,SAASC,cAAc,SAW5C,OAVAF,EAAaG,IAAMV,EAGnBO,EAAaI,iBAAiB,QAAST,IAKtCK,EAAaK,QAAUR,QAAQH,WAAWY,KAAKZ,EAASC,GAAQY,MAAMZ,GAEhEC,CACT,4CAQE,MAAMV,EAAeC,IAIfqB,EAAiBtB,EAAauB,mBAMpCD,EAAeE,QAAQxB,EAAayB,aACpCH,EAAeI,MAAM,GACrBJ,EAAeK,KAAK3B,EAAa4B,YAAc,GACjD"}