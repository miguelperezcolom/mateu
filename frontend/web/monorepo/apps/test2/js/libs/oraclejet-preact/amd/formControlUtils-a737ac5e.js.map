{"version":3,"file":"formControlUtils-a737ac5e.js","sources":["../../src/utils/UNSAFE_formControlUtils/formControlUtils.ts"],"sourcesContent":["import { Size, sizeToCSS } from '#utils/UNSAFE_size';\nimport { fallbackVar } from '#UNSAFE_Theme/utils';\nimport { layoutLocalVars } from '#utils/UNSAFE_styles/Layout/LayoutStyles.css';\nimport { LayoutColumnSpan } from '#utils/UNSAFE_styles/Layout';\n\nconst CssUnitsRegex = /^([+-]?(?:\\d+|\\d*\\.\\d+))([a-z]*|%)$/;\n\n// (originally copied from rt/src/main/javascript/oracle/oj/ojvformgenerator/ojvstartlabeler.tsx)\n/**\n * Calculate the width of a start label, taking into account the column span.\n * @param labelStartWidth specified width of the start label\n * @param columnSpan  number of columns to span\n * @returns start label width to use\n */\nfunction computeStartLabelWidth(labelStartWidth: Size, columnSpan: LayoutColumnSpan) {\n  const origWidth = sizeToCSS(labelStartWidth);\n  const labelWidth = origWidth === 0 ? '0' : origWidth;\n  const actualColumnCount = fallbackVar(layoutLocalVars.actualColumnCount, '1');\n  const actualColumnGapWidth = fallbackVar(layoutLocalVars.actualColumnGapWidth, '0');\n  const actualColSpan = `min(${columnSpan},${actualColumnCount})`;\n\n  if (columnSpan > 1) {\n    // for units that are (or can be) relative to horizontal screen size.\n    // for '%' labelWidth, we need to divide the value by the number of columns this component\n    // is spanning (which can be less than the colspan property value);\n    const parts = labelWidth.match(CssUnitsRegex);\n    if (parts === null) {\n      return labelWidth;\n    }\n\n    const labelWidthNumber = parseFloat(parts[1]);\n    const labelWidthUnits = parts[2];\n\n    switch (labelWidthUnits) {\n      case 'vw':\n      case 'vmin':\n      case 'vmax':\n      case '%':\n        return (\n          `calc( ( (${labelWidth} / ${actualColSpan}) - ` +\n          `( ${actualColumnGapWidth} * ` +\n          `(${actualColSpan} - 1) * ` +\n          `(${labelWidthNumber}/${actualColSpan}/100) ) ) )`\n        );\n      default:\n        break;\n    }\n  }\n\n  return labelWidth;\n}\n\nexport { computeStartLabelWidth };\n"],"names":["CssUnitsRegex","labelStartWidth","columnSpan","origWidth","sizeToCSS","labelWidth","actualColumnCount","fallbackVar","layoutLocalVars","actualColumnGapWidth","actualColSpan","parts","match","labelWidthNumber","parseFloat"],"mappings":"sHAKA,MAAMA,EAAgB,+DAStB,SAAgCC,EAAuBC,GACrD,MAAMC,EAAYC,YAAUH,GACtBI,EAA2B,IAAdF,EAAkB,IAAMA,EACrCG,EAAoBC,EAAWA,YAACC,EAAeA,gBAACF,kBAAmB,KACnEG,EAAuBF,EAAWA,YAACC,EAAeA,gBAACC,qBAAsB,KACzEC,EAAgB,OAAOR,KAAcI,KAE3C,GAAIJ,EAAa,EAAG,CAIlB,MAAMS,EAAQN,EAAWO,MAAMZ,GAC/B,GAAc,OAAVW,EACF,OAAON,EAGT,MAAMQ,EAAmBC,WAAWH,EAAM,IAG1C,OAFwBA,EAAM,IAG5B,IAAK,KACL,IAAK,OACL,IAAK,OACL,IAAK,IACH,MACE,YAAYN,OAAgBK,UACvBD,QACDC,aACAG,KAAoBH,eAK/B,CAED,OAAOL,CACT"}