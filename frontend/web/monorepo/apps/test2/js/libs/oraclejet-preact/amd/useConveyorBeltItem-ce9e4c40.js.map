{"version":3,"file":"useConveyorBeltItem-ce9e4c40.js","sources":["../../src/UNSAFE_ConveyorBelt/useConveyorBeltItem.ts"],"sourcesContent":["import type { RefObject } from 'preact';\nimport { useEffect, useRef, useContext, useCallback } from 'preact/hooks';\nimport { ConveyorBeltContext } from './ConveyorBeltContext';\nimport { useId } from '../hooks/UNSAFE_useId';\n\ntype ConveyorBeltItemOptions<T extends HTMLElement> = {\n  /**\n   * Specifies the current item which should be scrolled into view\n   */\n  isCurrent?: boolean;\n  /**\n   * Conevyor belt item reference, if not provided is created in the hook\n   */\n  itemRef?: RefObject<T>;\n};\n\n/**\n * It is a convenience hook for interacting with ConveyorBeltContext.\n * Marks ConveyorBelt item and specifies current item to be scrolled into view.\n * The hook returns the necessary props: ref for ConveyorBelt child component\n * and 'data-oj-conveyorbelt-item' data attribute to mark conveyorbelt item.\n * If the item is set as current, then it is scrolled into the view.\n * If the hook detects ConveyorBeltContext then it should apply the methods of the ConveyorBeltContext.\n * @param options ConveyorBeltItemOptions: isCurrent boolean,\n * specifies whether the item is current and should be scrolled into the view and\n * itemRef Conevyor belt item reference which if not provided is created in the hook\n * @returns ref for ConveyorBelt child component\n * and 'data-oj-conveyorbelt-item' data attribute to mark conveyorbelt item.\n */\nexport function useConveyorBeltItem<T extends HTMLElement = HTMLDivElement>(\n  options: ConveyorBeltItemOptions<T>\n) {\n  const { isCurrent, itemRef } = options;\n  const context = useContext(ConveyorBeltContext);\n  const ref = useRef<T>(null);\n  const id = useId();\n  const getResolvedRef = useCallback(() => {\n    return itemRef ?? ref;\n  }, [itemRef]);\n\n  useEffect(() => {\n    if (getResolvedRef().current && context && context.setCurrentItem) {\n      if (isCurrent) {\n        context.setCurrentItem(getResolvedRef().current!);\n      }\n    }\n  }, [context, isCurrent, getResolvedRef]);\n\n  const conveyorBeltItemProps = {\n    ref: ref,\n    ...(context && { 'data-oj-conveyorbelt-item': id })\n  };\n\n  return conveyorBeltItemProps;\n}\n"],"names":["options","isCurrent","itemRef","context","useContext","ConveyorBeltContext","ref","useRef","id","useId","getResolvedRef","useCallback","useEffect","current","setCurrentItem"],"mappings":"4IA6BM,SACJA,GAEA,MAAMC,UAAEA,EAASC,QAAEA,GAAYF,EACzBG,EAAUC,aAAWC,EAAAA,qBACrBC,EAAMC,SAAU,MAChBC,EAAKC,EAAAA,QACLC,EAAiBC,EAAAA,aAAY,IAC1BT,GAAWI,GACjB,CAACJ,IAeJ,OAbAU,EAAAA,WAAU,KACJF,IAAiBG,SAAWV,GAAWA,EAAQW,gBAC7Cb,GACFE,EAAQW,eAAeJ,IAAiBG,QAE3C,GACA,CAACV,EAASF,EAAWS,IAEM,CAC5BJ,IAAKA,KACDH,GAAW,CAAE,4BAA6BK,GAIlD"}