{"version":3,"file":"Gridlines-545ae30a.js","sources":["../../src/PRIVATE_PlotArea/utils.ts","../../src/PRIVATE_PlotArea/Gridlines.tsx","../../src/PRIVATE_PlotArea/PlotArea.tsx"],"sourcesContent":["import { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { Dimension } from '../utils/UNSAFE_visTypes/common';\n\nexport function getXAxisLineProps(\n  availSpace: Dimension,\n  axisPosition: 'left' | 'right' | 'top' | 'bottom',\n  axisLine?: {\n    lineColor?: ColorProps['color'];\n    lineWidth?: number;\n    isRendered: boolean;\n  }\n) {\n  return {\n    x1: axisPosition === 'right' ? availSpace.x + availSpace.width : availSpace.x,\n    x2: axisPosition === 'left' ? availSpace.x : availSpace.x + availSpace.width,\n    y1: axisPosition === 'bottom' ? availSpace.y + availSpace.height : availSpace.y,\n    y2: axisPosition === 'top' ? availSpace.y : availSpace.y + availSpace.height,\n    stroke: axisLine?.lineColor,\n    strokeWidth: axisLine?.lineWidth\n  };\n}\n\nexport function getYAxisLineProps(\n  availSpace: Dimension,\n  axisPosition: 'left' | 'right' | 'top' | 'bottom',\n  isRtl?: boolean,\n  axisLine?: {\n    lineColor?: ColorProps['color'];\n    lineWidth?: number;\n    isRendered: boolean;\n  }\n) {\n  let x1, x2, y1, y2: number;\n  if (axisPosition === 'bottom') {\n    x1 = isRtl ? availSpace.x + availSpace.width : availSpace.x;\n    x2 = isRtl ? availSpace.x + availSpace.width : availSpace.x;\n    y1 = availSpace.y;\n    y2 = availSpace.y + availSpace.height;\n  } else {\n    x1 = availSpace.x;\n    x2 = availSpace.x + availSpace.width;\n    y1 = isRtl ? availSpace.y : availSpace.y + availSpace.height;\n    y2 = isRtl ? availSpace.y : availSpace.y + availSpace.height;\n  }\n  return {\n    x1,\n    x2,\n    y1,\n    y2,\n    stroke: axisLine?.lineColor,\n    strokeWidth: axisLine?.lineWidth\n  };\n}\n\nexport function getY2AxisLineProps(\n  availSpace: Dimension,\n  axisPosition: 'left' | 'right' | 'top' | 'bottom',\n  isRtl?: boolean,\n  axisLine?: {\n    lineColor?: ColorProps['color'];\n    lineWidth?: number;\n    isRendered: boolean;\n  }\n) {\n  let x1, x2, y1, y2: number;\n  if (axisPosition === 'bottom') {\n    x1 = isRtl ? availSpace.x : availSpace.x + availSpace.width;\n    x2 = isRtl ? availSpace.x : availSpace.x + availSpace.width;\n    y1 = availSpace.y;\n    y2 = availSpace.y + availSpace.height;\n  } else {\n    x1 = availSpace.x;\n    x2 = availSpace.x + availSpace.width;\n    y1 = isRtl ? availSpace.y + availSpace.height : availSpace.y;\n    y2 = isRtl ? availSpace.y + availSpace.height : availSpace.y;\n  }\n  return {\n    x1,\n    x2,\n    y1,\n    y2,\n    stroke: axisLine?.lineColor,\n    strokeWidth: axisLine?.lineWidth\n  };\n}\n\nexport function getBaseLineProps(\n  availSpace: Dimension,\n  coord: number,\n  axisPosition: 'left' | 'right' | 'top' | 'bottom'\n) {\n  let x1, x2, y1, y2: number;\n  if (axisPosition === 'bottom') {\n    x1 = availSpace.x;\n    x2 = availSpace.x + availSpace.width;\n    y1 = coord;\n    y2 = coord;\n  } else {\n    x1 = coord;\n    x2 = coord;\n    y1 = availSpace.y;\n    y2 = availSpace.y + availSpace.height;\n  }\n\n  return { x1, x2, y1, y2 };\n}\n\nexport function getBaseLineCoords(\n  isHoriz: boolean,\n  coord: number,\n  range1: number,\n  range2: number,\n  isYAxis: boolean\n) {\n  let x1, x2, y1, y2: number;\n  if (isHoriz) {\n    if (isYAxis) {\n      x1 = coord;\n      x2 = coord;\n      y1 = range1;\n      y2 = range2;\n    } else {\n      x1 = range1;\n      x2 = range2;\n      y1 = coord;\n      y2 = coord;\n    }\n  } else {\n    if (isYAxis) {\n      x1 = range1;\n      x2 = range2;\n      y1 = coord;\n      y2 = coord;\n    } else {\n      x1 = coord;\n      x2 = coord;\n      y1 = range1;\n      y2 = range2;\n    }\n  }\n\n  return { x1, x2, y1, y2 };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { styles } from './themes/PlotAreaStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { ChartPlotArea, DataAxisProps, Scale } from '../utils/UNSAFE_visTypes/chart';\nimport { useColorScheme } from '../hooks/UNSAFE_useColorScheme';\nimport {\n  getBaseLineCoords,\n  getXAxisLineProps,\n  getY2AxisLineProps,\n  getYAxisLineProps\n} from './utils';\nimport { Dimension } from '#utils/UNSAFE_visTypes/common';\n\ntype Props = {\n  availSpace: Dimension;\n  xAxisPosition: 'left' | 'right' | 'top' | 'bottom';\n  isRtl?: boolean;\n  hasAxisLine: boolean;\n  xScale: Scale;\n  yScale: Scale;\n  y2Scale: Scale;\n  isLog: boolean;\n  yTicks: number[];\n  y2Ticks: number[];\n  xTicks: number[];\n  yMinorTicks: number[];\n  y2MinorTicks: number[];\n  xMinorTicks?: number[];\n  plotArea?: ChartPlotArea;\n  yAxisPosition: 'left' | 'right' | 'top' | 'bottom';\n  isDataXAxis?: boolean;\n  xAxis?: DataAxisProps;\n  yAxis?: DataAxisProps;\n  y2Axis?: DataAxisProps;\n  isSplitDualY: boolean;\n};\n\nconst TICK_DEFAULT = {\n  yMajorTick: {\n    isRendered: true\n  },\n  y2MajorTick: {\n    isRendered: false\n  },\n  yMinorTick: {\n    isRendered: false\n  },\n  y2MinorTick: {\n    isRendered: false\n  },\n  xMajorTick: {\n    isRendered: false\n  },\n  xMinorTick: {\n    isRendered: false\n  }\n};\n\nexport function Gridlines({\n  plotArea,\n  yMinorTicks,\n  xMinorTicks,\n  xScale,\n  yScale,\n  y2Scale,\n  isLog,\n  yTicks,\n  y2Ticks,\n  xTicks,\n  yAxisPosition,\n  isDataXAxis,\n  xAxis,\n  yAxis,\n  y2Axis,\n  availSpace,\n  xAxisPosition,\n  isRtl,\n  hasAxisLine,\n  y2MinorTicks,\n  isSplitDualY\n}: Props) {\n  const isHoriz = yAxisPosition === 'top' || yAxisPosition === 'bottom';\n  const hasY2 = !!y2Axis?.isRendered;\n  const [x1, x2] = xScale.range();\n  const [y1, y2] = hasY2 ? y2Scale.range() : yScale.range();\n\n  const xAxisBaselineStyle = {\n    stroke: isDataXAxis ? plotArea?.xMajorTick?.baselineColor : plotArea?.xMajorTick?.lineColor,\n    strokeWidth: isDataXAxis ? plotArea?.xMajorTick?.baselineWidth : plotArea?.xMajorTick?.lineWidth\n  };\n  const yAxisBaselineStyle = {\n    stroke: plotArea?.yMajorTick?.baselineColor,\n    strokeWidth: plotArea?.yMajorTick?.baselineWidth\n  };\n  const y2AxisBaselineStyle = {\n    stroke: plotArea?.y2MajorTick?.baselineColor,\n    strokeWidth: plotArea?.y2MajorTick?.baselineWidth\n  };\n  let yLinesPath = '';\n  let y2LinesPath = '';\n  let xLinesPath = '';\n  let yMinorPath = '';\n  let xMinorPath = '';\n  let y2MinorPath = '';\n\n  const yMajorTick = { ...TICK_DEFAULT.yMajorTick, ...plotArea?.yMajorTick };\n  const yMinorTick = { ...TICK_DEFAULT.yMinorTick, ...plotArea?.yMinorTick };\n  const y2MinorTick = { ...TICK_DEFAULT.y2MinorTick, ...plotArea?.y2MinorTick };\n  const xMinorTick = { ...TICK_DEFAULT.xMinorTick, ...plotArea?.xMinorTick };\n  const xMajorTick = { ...TICK_DEFAULT.xMajorTick, ...plotArea?.xMajorTick };\n  const y2MajorTick = {\n    ...TICK_DEFAULT.y2MajorTick,\n    isRendered: isSplitDualY,\n    ...plotArea?.y2MajorTick\n  };\n  const isYMinorRendered = yMinorTick?.isRendered === true || isLog;\n  const isY2MinorRendered = y2MinorTick?.isRendered === true || isLog;\n  const isXMajorRendered =\n    xMajorTick?.isRendered === true || (plotArea?.xMajorTick?.isRendered === false && isDataXAxis);\n\n  const xAxisLineProps = getXAxisLineProps(availSpace, xAxisPosition);\n\n  const xAxisLineStyle = {\n    stroke: plotArea?.xAxisLine?.lineColor,\n    strokeWidth: plotArea?.xAxisLine?.lineWidth\n  };\n  const yAxisLineStyle = {\n    stroke: plotArea?.yAxisLine?.lineColor,\n    strokeWidth: plotArea?.yAxisLine?.lineWidth\n  };\n  const y2AxisLineStyle = {\n    stroke: plotArea?.y2AxisLine?.lineColor,\n    strokeWidth: plotArea?.y2AxisLine?.lineWidth\n  };\n\n  const yBaseLine = yAxis?.scale === 'log' ? yTicks[0] : 0;\n  const yBaseLineCoords = getBaseLineCoords(isHoriz, yScale.transform(yBaseLine), x1, x2, true);\n\n  const y2BaseLine = y2Axis?.scale === 'log' ? y2Ticks[0] : 0;\n  const y2BaseLineCoords = getBaseLineCoords(isHoriz, y2Scale.transform(y2BaseLine), x1, x2, true);\n\n  const xBaseLine = xAxis?.scale === 'log' ? xTicks[0] : 0;\n  const xBaseLineCoords = getBaseLineCoords(isHoriz, xScale.transform(xBaseLine), y1, y2, false);\n\n  if (yMajorTick?.isRendered) {\n    for (let i = 0; i < yTicks.length; i++) {\n      if (yTicks[i] === 0) {\n        // zero is skipped for majorTick. baseline is rendered at 0\n        continue;\n      }\n      let y = yScale.transform(yTicks[i]);\n      // last grid line get's clipped due to plot area clippath. Slightly adjust\n      // coord so that it's not clipped.\n      if (i === yTicks.length - 1) {\n        y += isHoriz ? -1 : 1;\n      }\n      yLinesPath += isHoriz ? `M${y},${x1}L${y},${x2}` : `M${x1},${y}L${x2},${y}`;\n    }\n  }\n\n  if (y2MajorTick?.isRendered) {\n    for (let i = 0; i < y2Ticks.length; i++) {\n      if (yTicks[i] === 0) {\n        // zero is skipped for majorTick. baseline is rendered at 0\n        continue;\n      }\n      let y = y2Scale.transform(y2Ticks[i]);\n      // last grid line get's clipped due to plot area clippath. Slightly adjust\n      // coord so that it's not clipped.\n      if (i === y2Ticks.length - 1) {\n        y += isHoriz ? -1 : 1;\n      }\n      y2LinesPath += isHoriz ? `M${y},${x1}L${y},${x2}` : `M${x1},${y}L${x2},${y}`;\n    }\n  }\n\n  if (isXMajorRendered) {\n    if (xTicks) {\n      for (let i = 0; i < xTicks.length; i++) {\n        const x = xScale.transform(xTicks[i]);\n        xLinesPath += isHoriz ? `M${y1},${x}L${y2},${x}` : `M${x},${y1}L${x},${y2}`;\n      }\n    }\n  }\n\n  if (isYMinorRendered || isY2MinorRendered) {\n    for (let i = 0; i < yMinorTicks.length; i++) {\n      const y = yScale.transform(yMinorTicks[i]);\n      yMinorPath += isHoriz ? `M${y},${x1}L${y},${x2}` : `M${x1},${y}L${x2},${y}`;\n    }\n  }\n\n  if (isY2MinorRendered) {\n    for (let i = 0; i < y2MinorTicks.length; i++) {\n      const y = y2Scale.transform(y2MinorTicks[i]);\n      y2MinorPath += isHoriz ? `M${y},${x1}L${y},${x2}` : `M${x1},${y}L${x2},${y}`;\n    }\n  }\n\n  if (xMinorTick.isRendered && xMinorTicks) {\n    for (let i = 0; i < xMinorTicks.length; i++) {\n      const x = xScale.transform(xMinorTicks[i]);\n      xMinorPath += isHoriz ? `M${y1},${x}L${y2},${x}` : `M${x},${y1}L${x},${y2}`;\n    }\n  }\n\n  const colorScheme = useColorScheme();\n\n  let splitCoords:\n    | {\n        x1: number;\n        x2: number;\n        y1: number;\n        y2: number;\n      }\n    | undefined = undefined;\n  if (isSplitDualY) {\n    const ySplitCoord = !isHoriz ? yTicks[0] : yTicks[yTicks.length - 1];\n    const y2SplitCoord = !isHoriz ? y2Ticks[y2Ticks.length - 1] : y2Ticks[0];\n    const splitCoord = (yScale.transform(ySplitCoord) + y2Scale.transform(y2SplitCoord)) / 2;\n    splitCoords = getBaseLineCoords(isHoriz, splitCoord + (isHoriz ? -1 : 1) * 0.5, x1, x2, true);\n  }\n\n  /*\n  Render order: \n  1. Gridlines: y and y2 are same because of aligned ticks.\n      a. majorTick: y -> x\n      b. minorTick y -> x\n  2. Axislines → Baselines, with each in the order: y2 → y → x\n*/\n  return (\n    <>\n      {yMajorTick?.isRendered && (\n        <path\n          d={yLinesPath}\n          className={classNames([\n            styles.noPointerEvents,\n            styles.majorTickLineStyles,\n            yMajorTick?.lineStyle === 'dashed' ? styles.dashedLine : undefined,\n            yMajorTick?.lineStyle === 'dotted' ? styles.dottedLine : undefined\n          ])}\n          style={{\n            stroke: hasY2 ? y2MajorTick.lineColor : yMajorTick.lineColor,\n            strokeWidth: hasY2 ? y2MajorTick.lineWidth : yMajorTick.lineWidth\n          }}\n        />\n      )}\n      {y2MajorTick?.isRendered && (\n        <path\n          d={y2LinesPath}\n          className={classNames([\n            styles.noPointerEvents,\n            styles.majorTickLineStyles,\n            y2MajorTick?.lineStyle === 'dashed' ? styles.dashedLine : undefined,\n            y2MajorTick?.lineStyle === 'dotted' ? styles.dottedLine : undefined\n          ])}\n          style={{\n            stroke: y2MajorTick.lineColor,\n            strokeWidth: y2MajorTick.lineWidth\n          }}\n        />\n      )}\n      {isXMajorRendered && (\n        <path\n          d={xLinesPath}\n          className={classNames([\n            styles.noPointerEvents,\n            styles.majorTickLineStyles,\n            xMajorTick?.lineStyle === 'dashed' ? styles.dashedLine : undefined,\n            xMajorTick?.lineStyle === 'dotted' ? styles.dottedLine : undefined\n          ])}\n          style={{\n            stroke: xMajorTick.lineColor,\n            strokeWidth: xMajorTick.lineWidth\n          }}\n        />\n      )}\n      {isYMinorRendered && (\n        <path\n          d={yMinorPath}\n          className={classNames([\n            styles.noPointerEvents,\n            styles.minorTickLineStyles,\n            colorScheme === 'light'\n              ? styles.lightMinorTickLineStroke\n              : styles.darkMinorTickLineStroke,\n            yMinorTick?.lineStyle === 'dashed' ? styles.dashedLine : undefined,\n            yMinorTick?.lineStyle === 'dotted' ? styles.dottedLine : undefined\n          ])}\n          style={{\n            stroke: hasY2 ? y2MinorTick.lineColor : yMinorTick?.lineColor,\n            strokeWidth: hasY2 ? y2MinorTick.lineWidth : yMinorTick?.lineWidth\n          }}\n        />\n      )}\n      {isY2MinorRendered && (\n        <path\n          d={y2MinorPath}\n          className={classNames([\n            styles.noPointerEvents,\n            styles.minorTickLineStyles,\n            colorScheme === 'light'\n              ? styles.lightMinorTickLineStroke\n              : styles.darkMinorTickLineStroke,\n            y2MinorTick?.lineStyle === 'dashed' ? styles.dashedLine : undefined,\n            y2MinorTick?.lineStyle === 'dotted' ? styles.dottedLine : undefined\n          ])}\n          style={{\n            stroke: y2MinorTick?.lineColor,\n            strokeWidth: y2MinorTick?.lineWidth\n          }}\n        />\n      )}\n      {xMinorTick.isRendered && (\n        <path\n          d={xMinorPath}\n          className={classNames([\n            styles.noPointerEvents,\n            styles.minorTickLineStyles,\n            colorScheme === 'light'\n              ? styles.lightMinorTickLineStroke\n              : styles.darkMinorTickLineStroke,\n            xMinorTick?.lineStyle === 'dashed' ? styles.dashedLine : undefined,\n            xMinorTick?.lineStyle === 'dotted' ? styles.dottedLine : undefined\n          ])}\n          style={{\n            stroke: xMinorTick?.lineColor,\n            strokeWidth: xMinorTick?.lineWidth\n          }}\n        />\n      )}\n      {((isDataXAxis && plotArea?.y2AxisLine?.isRendered !== false) ||\n        plotArea?.y2AxisLine?.isRendered) && (\n        <line\n          {...getY2AxisLineProps(availSpace, xAxisPosition, isRtl)}\n          class={styles.axisLineStyle}\n          style={y2AxisLineStyle}\n        />\n      )}\n      {((isDataXAxis && plotArea?.yAxisLine?.isRendered !== false) ||\n        plotArea?.yAxisLine?.isRendered) && (\n        <line\n          {...getYAxisLineProps(availSpace, xAxisPosition, isRtl)}\n          class={styles.axisLineStyle}\n          style={yAxisLineStyle}\n        />\n      )}\n      {hasAxisLine && plotArea?.xAxisLine?.isRendered !== false && (\n        <line {...xAxisLineProps} class={styles.axisLineStyle} style={xAxisLineStyle} />\n      )}\n      {y2MajorTick?.isRendered && (\n        <line {...y2BaseLineCoords} class={styles.axisLineStyle} style={y2AxisBaselineStyle} />\n      )}\n      {yMajorTick?.isRendered && (\n        <line {...yBaseLineCoords} class={styles.axisLineStyle} style={yAxisBaselineStyle} />\n      )}\n      {xMajorTick?.isRendered && (\n        <line {...xBaseLineCoords} class={styles.axisLineStyle} style={xAxisBaselineStyle} />\n      )}\n      {isSplitDualY && splitCoords ? (\n        <line {...splitCoords} class={styles.axisLineStyle} style={yAxisBaselineStyle} />\n      ) : null}\n    </>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { styles } from './themes/PlotAreaStyles.css';\nimport { Dimension } from '../utils/UNSAFE_visTypes/common';\nimport { ColorProps } from '../utils/UNSAFE_interpolations/colors';\nimport { styles as VisStyles } from '#hooks/PRIVATE_useVisDnd/themes/VisDndStyles.css';\nimport { classNames } from '#utils/UNSAFE_classNames';\n\ntype Props = {\n  color?: ColorProps['color'];\n  availSpace: Dimension;\n  cursor?: string;\n  dragOverStyle: 'accept' | 'reject' | 'none';\n};\n\nexport function PlotArea({ color, availSpace, cursor, dragOverStyle }: Props) {\n  const dragClass = [];\n  switch (dragOverStyle) {\n    case 'accept':\n      dragClass.push(VisStyles.dndDragOverSvgStyle);\n      break;\n    case 'reject':\n      dragClass.push(VisStyles.dndRejectedStyle);\n      dragClass.push(styles.plotAreaStyle);\n      break;\n    case 'none':\n      dragClass.push(styles.plotAreaStyle);\n      break;\n  }\n  return (\n    <>\n      <rect\n        {...availSpace}\n        className={classNames(dragClass)}\n        style={{ fill: dragOverStyle === 'accept' ? undefined : color, cursor }}></rect>\n    </>\n  );\n}\n"],"names":["getYAxisLineProps","availSpace","axisPosition","isRtl","axisLine","x1","x2","y1","y2","x","width","y","height","stroke","lineColor","strokeWidth","lineWidth","getY2AxisLineProps","getBaseLineCoords","isHoriz","coord","range1","range2","isYAxis","TICK_DEFAULT","isRendered","plotArea","yMinorTicks","xMinorTicks","xScale","yScale","y2Scale","isLog","yTicks","y2Ticks","xTicks","yAxisPosition","isDataXAxis","xAxis","yAxis","y2Axis","xAxisPosition","hasAxisLine","y2MinorTicks","isSplitDualY","hasY2","range","xAxisBaselineStyle","xMajorTick","baselineColor","baselineWidth","yAxisBaselineStyle","yMajorTick","y2AxisBaselineStyle","y2MajorTick","yLinesPath","y2LinesPath","xLinesPath","yMinorPath","xMinorPath","y2MinorPath","yMinorTick","y2MinorTick","xMinorTick","isYMinorRendered","isY2MinorRendered","isXMajorRendered","xAxisLineProps","getXAxisLineProps","xAxisLineStyle","xAxisLine","yAxisLineStyle","yAxisLine","y2AxisLineStyle","y2AxisLine","yBaseLine","scale","yBaseLineCoords","transform","y2BaseLine","y2BaseLineCoords","xBaseLine","xBaseLineCoords","i","length","colorScheme","useColorScheme","splitCoords","ySplitCoord","y2SplitCoord","_jsxs","jsxs","_Fragment","Fragment","children","_jsx","jsx","d","className","classNames","styles","noPointerEvents","majorTickLineStyles","lineStyle","dashedLine","undefined","dottedLine","style","minorTickLineStyles","lightMinorTickLineStroke","darkMinorTickLineStroke","class","axisLineStyle","color","cursor","dragOverStyle","dragClass","push","VisStyles","dndDragOverSvgStyle","dndRejectedStyle","plotAreaStyle","fill"],"mappings":"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"}