{"version":3,"file":"Label-46fd3625.js","sources":["../../src/UNSAFE_Label/useDetectLabelTruncation.tsx","../../src/UNSAFE_Label/Label.tsx"],"sourcesContent":["import { RefObject } from 'preact';\nimport { useCallback, useRef, useState } from 'preact/hooks';\nimport { detectTruncation } from '#utils/PRIVATE_truncationUtils';\n\ntype Props = {\n  isDisabled?: boolean;\n  rootRef: RefObject<HTMLLabelElement>;\n};\n\n/**\n * Hook that detects truncated text when you hover the mouse over a label.\n */\nconst useDetectLabelTruncation = ({ isDisabled = false, rootRef }: Props) => {\n  const [isTextTruncated, setIsTextTruncated] = useState<boolean>(false);\n  const mouseOverTimerRef = useRef<ReturnType<typeof setTimeout> | undefined>();\n\n  const handleMouseOver = useCallback(() => {\n    clearTimeout(mouseOverTimerRef.current);\n    // Determine if the label is truncated after the user hovers over it.\n    mouseOverTimerRef.current = setTimeout(() => {\n      const isTruncated = detectTruncation(rootRef as RefObject<HTMLElement>);\n      setIsTextTruncated(isTruncated);\n    }, 1000);\n  }, [rootRef]);\n\n  const handleMouseOut = useCallback(() => {\n    clearTimeout(mouseOverTimerRef.current);\n    mouseOverTimerRef.current = undefined;\n    setIsTextTruncated(false);\n  }, []);\n\n  const detectTruncationProps = !isDisabled\n    ? {\n        onMouseOver: handleMouseOver,\n        onMouseOut: handleMouseOut\n      }\n    : {};\n\n  return { detectTruncationProps, isTextTruncated };\n};\n\nexport { useDetectLabelTruncation };\n","import { RefObject } from 'preact';\nimport { useRef } from 'preact/hooks';\nimport { useFormFieldContext } from '#hooks/UNSAFE_useFormFieldContext';\nimport { classNames } from '#utils/UNSAFE_classNames';\nimport { StyledComponentProps } from '@oracle/oraclejet-internal-utilities/typeUtils';\nimport { useFormContext } from '#hooks/UNSAFE_useFormContext';\nimport { useComponentTheme } from '#hooks/UNSAFE_useComponentTheme';\nimport { CompactLabelAssistance } from '#UNSAFE_UserAssistance';\n\nimport { useDetectLabelTruncation } from './useDetectLabelTruncation';\nimport { useTooltip } from '#hooks/UNSAFE_useTooltip';\n\nimport { LabelStyles, LabelVariantOptions } from './themes/LabelStyles.css';\nimport { TextFieldRedwoodTheme } from '#UNSAFE_TextField/themes/redwood/TextFieldTheme';\nimport { LabelRedwoodTheme } from './themes/redwood/LabelTheme';\nimport { useScale } from '#hooks/UNSAFE_useScale';\nimport { useDensity } from '#hooks/UNSAFE_useDensity';\nimport { getClientHints } from '#utils/PRIVATE_clientHints';\n\ntype StyleProps = Exclude<Props, 'children' | 'forId' | 'id'> & {\n  hasValue?: boolean;\n  isFocused?: boolean;\n  readonly?: boolean;\n  disabled?: boolean;\n};\n\ntype StyledLabelProps = StyledComponentProps<'label', StyleProps> & {\n  onClick?: (e: MouseEvent) => void;\n};\n\ntype TruncatingLabelProps = Omit<\n  StyledLabelProps,\n  | 'readonly'\n  | 'disabled'\n  | 'isRequiredShown'\n  | 'helpIconId'\n  | 'helpSourceLink'\n  | 'helpSourceText'\n  | 'parentComponentVariant'\n  | 'userAssistanceDensity'\n  | 'variant'\n>;\n\n// When you mouse over the label, useDetectLabelTruncation determines if the text is truncated\n// and shows a tooltip. When you move the mouse outside of the label, the tooltip goes away.\nconst TruncatingLabel = ({\n  children: text,\n  labelRef,\n  hasValue,\n  isFocused,\n  ...labelProps\n}: TruncatingLabelProps) => {\n  const labelElementRef = useRef<HTMLLabelElement>(null);\n  const ref = labelRef ?? labelElementRef;\n  const { detectTruncationProps, isTextTruncated } = useDetectLabelTruncation({ rootRef: ref });\n\n  // Calculate the tooltip offset so it looks like it's relative to the field instead of the label.\n  const scale = useScale() || 'lg';\n  const density = useDensity() || 'standard';\n  const scaleMap = { sm: 3, md: 3.5, lg: 4 };\n  const xUnits = scaleMap[scale];\n  const densityUnits = density === 'standard' ? 0 : -xUnits;\n  const mainAxisMap = {\n    sm: Math.max(xUnits + densityUnits, 3),\n    md: Math.max(1.14 * xUnits + densityUnits, 3.5),\n    lg: 2 * xUnits + densityUnits\n  };\n  const mainAxis =\n    hasValue || isFocused ? mainAxisMap[scale] + 5 : Math.max(5.75 * xUnits + densityUnits, 16);\n  const { tooltipContent, tooltipProps } = useTooltip({\n    offset: {\n      mainAxis,\n      crossAxis: -4 * xUnits - 1\n    },\n    position: 'top-start',\n    text,\n    isDisabled: !isTextTruncated\n  });\n  const { 'aria-describedby': notNeeded, ...tooltipEventHandlerProps } = tooltipProps;\n\n  return (\n    <>\n      <label ref={ref} {...detectTruncationProps} {...labelProps} {...tooltipEventHandlerProps}>\n        {text}\n      </label>\n      {tooltipContent}\n    </>\n  );\n};\n\nconst StyledLabel = ({\n  hasValue,\n  readonly,\n  disabled,\n  isFocused,\n  isRequiredShown,\n  labelRef,\n  helpIconId,\n  helpSourceLink,\n  helpSourceText,\n  userAssistanceDensity = 'reflow',\n  variant = 'inside',\n  parentComponentVariant = 'textField',\n  ...props\n}: StyledLabelProps) => {\n  const { isFormLayout, isReadonly: isReadonlyForm, labelWrapping } = useFormContext();\n\n  const isInside = variant === 'inside';\n  const isTextField = parentComponentVariant === 'textField';\n  const clientHints = getClientHints();\n\n  // JET-73197: Truncated tooltips for core pack.\n  // Determine whether to render a TruncatingLabel, which is measured to determine if\n  // the label's content exceeds the size of the label itself, i.e. it's truncated.\n  // We only want to do this for inside label edge, not disabled, and the textField variant.\n  const useTruncatingLabel = isInside && !disabled && parentComponentVariant === 'textField';\n\n  // because variants have to match strings, we have to take any boolean props and convert\n  // them to a string value, (ie prefixed with \"is\" or \"non\")\n  const {\n    classes,\n    styles: {\n      safariAfter,\n      uaDensityCompactLabel,\n      uaDensityCompactLabelStart,\n      uaDensityCompactLabelTopInside\n    }\n  } = useComponentTheme<LabelVariantOptions, LabelStyles>(LabelRedwoodTheme, {\n    labelWrapping,\n    position: variant,\n    inside: isInside ? 'isInside' : 'notInside',\n    inEnabledForm: isFormLayout && !isReadonlyForm ? 'isInEnabledForm' : 'notInEnabledForm',\n    readonly: readonly ? 'isReadonly' : 'notReadonly',\n    focused: isFocused ? 'isFocused' : 'nonFocused',\n    formLayout: isFormLayout ? 'isFormLayout' : 'nonFormLayout',\n    readonlyForm: isReadonlyForm ? 'isReadonlyForm' : 'notReadonlyForm',\n    textField: isTextField ? 'isTextField' : 'notTextField',\n    value: hasValue ? 'hasValue' : 'noValue',\n    valueOrFocus: hasValue || isFocused ? 'hasValueOrFocus' : 'noValueOrFocus',\n    animatedWhenInside: isTextField ? 'isAnimated' : 'notAnimated',\n    disabled: isTextField && disabled ? 'isDisabled' : 'nonDisabled',\n    userAssistanceDensity\n  });\n\n  const { baseTheme: textFieldTheme } = useComponentTheme(TextFieldRedwoodTheme);\n  // JET-74754: Fix dual tooltips on Safari. This prevents safari from putting\n  // up its own tooltip for truncated labels.\n  const afterClass = clientHints.browser === 'safari' ? safariAfter : undefined;\n\n  // TODO: We need to decide whether to standardize on 'class' or 'className'.  Otherwise, we'll\n  // run into issues destructuring style interpolations, for example having to concatenate both.\n\n  const compactLabelStyles = classNames([\n    afterClass,\n    uaDensityCompactLabel,\n    variant === 'start' ? uaDensityCompactLabelStart : uaDensityCompactLabelTopInside\n  ]);\n  const compactUADLabel = useTruncatingLabel ? (\n    <TruncatingLabel\n      {...props}\n      class={compactLabelStyles}\n      hasValue={hasValue}\n      isFocused={isFocused}\n      labelRef={labelRef}\n    />\n  ) : (\n    <label {...props} class={compactLabelStyles} />\n  );\n\n  return userAssistanceDensity === 'compact' ? (\n    <div class={classNames([classes, textFieldTheme])}>\n      {variant !== 'start' && compactUADLabel}\n      <CompactLabelAssistance\n        isRequiredShown={isRequiredShown}\n        helpIconId={helpIconId}\n        helpSourceLink={helpSourceLink}\n        helpSourceText={helpSourceText}\n        labelEdge={variant === 'top' || variant === 'start' ? variant : 'inside'}\n      />\n      {variant === 'start' && compactUADLabel}\n    </div>\n  ) : useTruncatingLabel ? (\n    <TruncatingLabel\n      {...props}\n      class={classNames([afterClass, classes, textFieldTheme])}\n      hasValue={hasValue}\n      isFocused={isFocused}\n      labelRef={labelRef}\n    />\n  ) : (\n    <label\n      // JET-71582  Adding aria-disabled for components that don't have a disabled input element. AXE isn't able\n      // to determine that the label belongs to a disabled field, so it throwing a contrast error in the webdriverjs\n      // tests.\n      aria-disabled={disabled ? 'true' : undefined}\n      {...props}\n      class={classNames([afterClass, classes, textFieldTheme])}\n    />\n  );\n};\n\ntype Props = {\n  /**\n   * Specifies how messages and assistive text are shown.\n   */\n  userAssistanceDensity?: 'reflow' | 'efficient' | 'compact';\n  /**\n   * Id to use for the help icon in compact user assistance density.\n   */\n  helpIconId?: string;\n  /**\n   * Help source link for compact user assistance density.\n   */\n  helpSourceLink?: string;\n  /**\n   * Help source text for compact user assistance density.\n   */\n  helpSourceText?: string;\n  /**\n   * Specifies whether to show an indicator on screen that a value is required, for example\n   * before the user has committed a value.\n   */\n  isRequiredShown?: boolean;\n  /**\n   * The text to be used for the label\n   */\n  children?: string;\n  /**\n   * The id to set on the label\n   */\n  id?: string;\n  /**\n   * The id of the form control for which this label will be used\n   */\n  forId?: string;\n  /**\n   * Determines how the label is going to be styled\n   */\n  variant?: 'inside' | 'start' | 'top';\n  /**\n   * Determines how the label is going to be styled in based on parent component.\n   */\n  parentComponentVariant?:\n    | 'textField'\n    | 'radioSet'\n    | 'checkboxSet'\n    | 'richRadioSet'\n    | 'richCheckboxSet'\n    | 'formComponentWrapper';\n  /**\n   * Handler called when the label is clicked.\n   */\n  onClick?: (e: MouseEvent) => void;\n  /**\n   * A ref to the intrinsic label.\n   */\n  labelRef?: RefObject<HTMLLabelElement>;\n};\n\nexport const Label = ({ forId, ...props }: Props) => {\n  const { hasValue, isDisabled, isFocused, isReadonly } = useFormFieldContext();\n  return (\n    <StyledLabel\n      for={forId}\n      hasValue={hasValue}\n      disabled={isDisabled}\n      isFocused={isFocused}\n      readonly={isReadonly}\n      {...props}\n    />\n  );\n};\n"],"names":["TruncatingLabel","children","text","labelRef","hasValue","isFocused","labelProps","labelElementRef","useRef","ref","detectTruncationProps","isTextTruncated","isDisabled","rootRef","setIsTextTruncated","useState","mouseOverTimerRef","handleMouseOver","useCallback","clearTimeout","current","setTimeout","isTruncated","detectTruncation","handleMouseOut","undefined","onMouseOver","onMouseOut","useDetectLabelTruncation","scale","useScale","density","useDensity","xUnits","sm","md","lg","densityUnits","mainAxisMap","Math","max","mainAxis","tooltipContent","tooltipProps","useTooltip","offset","crossAxis","position","notNeeded","tooltipEventHandlerProps","_jsxs","jsxs","_Fragment","Fragment","_jsx","StyledLabel","readonly","disabled","isRequiredShown","helpIconId","helpSourceLink","helpSourceText","userAssistanceDensity","variant","parentComponentVariant","props","isFormLayout","isReadonly","isReadonlyForm","labelWrapping","useFormContext","isInside","isTextField","clientHints","getClientHints","useTruncatingLabel","classes","styles","safariAfter","uaDensityCompactLabel","uaDensityCompactLabelStart","uaDensityCompactLabelTopInside","useComponentTheme","LabelRedwoodTheme","inside","inEnabledForm","focused","formLayout","readonlyForm","textField","value","valueOrFocus","animatedWhenInside","baseTheme","textFieldTheme","TextFieldRedwoodTheme","afterClass","browser","compactLabelStyles","classNames","compactUADLabel","jsx","class","CompactLabelAssistance","labelEdge","forId","useFormFieldContext","for"],"mappings":"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"}