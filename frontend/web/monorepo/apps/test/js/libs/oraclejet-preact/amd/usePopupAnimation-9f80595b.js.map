{"version":3,"file":"usePopupAnimation-9f80595b.js","sources":["../../src/UNSAFE_Popup/usePopupAnimation.ts"],"sourcesContent":["import { Placement, Floating } from '../UNSAFE_Floating';\nimport {\n  useAnimationStatus,\n  AnimationStatus,\n  AnimationStatusProps,\n  AnimationStates\n} from '../hooks/PRIVATE_useAnimationStatus';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { useEffect, useCallback, useState } from 'preact/hooks';\nimport { getTransformOrigin } from '../utils/PRIVATE_popupAnimationUtils';\nimport { ComponentProps } from 'preact';\n\n/**\n * The placement and direction aware HTML element\n * The useAnimation hook do not allow to change dynamically the animation states,\n * but allows a function that returns animation states config. The function takes\n * the animated node of type <E extends HTMLElement> as an argument. This could be used\n * to extend HTMLElement with placement and direction.\n */\nexport type AnimationPopupElement = HTMLElement & {\n  placement?: Placement;\n  direction?: 'ltr' | 'rtl';\n};\n\ntype PopupAnimationProps = Omit<AnimationStatusProps, 'animationStates'> & {\n  /**\n   * Specifies placement of the Popup relative to the anchor.\n   */\n  placement: Placement;\n\n  /**\n   * animationStates is the configuration of the animations, how the element should be animated\n   */\n  animationStates?: AnimationStates;\n\n  /**\n   * Triggered when placement or coordinates are changed after collision is detected\n   */\n  onPosition?: ComponentProps<typeof Floating>['onPosition'];\n};\n\nconst animationStates = {\n  opening: (node: AnimationPopupElement) => {\n    return {\n      //zoomIn\n      from: {\n        scaleX: 0,\n        scaleY: 0,\n        opacity: 0,\n        transformOrigin: getTransformOrigin(node.placement, node.direction)\n      },\n      to: {\n        scaleX: 1,\n        scaleY: 1,\n        opacity: 1,\n        transformOrigin: getTransformOrigin(node.placement, node.direction)\n      },\n      options: {\n        duration: 200\n      }\n    };\n  },\n  closing: (node: AnimationPopupElement) => {\n    return {\n      //zoomOut\n      from: {\n        scaleX: 1,\n        scaleY: 1,\n        opacity: 1,\n        transformOrigin: getTransformOrigin(node.placement, node.direction)\n      },\n      to: {\n        scaleX: 0,\n        scaleY: 0,\n        opacity: 0,\n        transformOrigin: getTransformOrigin(node.placement, node.direction)\n      },\n      options: {\n        duration: 200\n      }\n    };\n  }\n};\n\nexport function usePopupAnimation(props: PopupAnimationProps): {\n  status: AnimationStatus;\n  setAnimationElementRef: (node: HTMLElement | null) => void;\n  onPosition: ComponentProps<typeof Floating>['onPosition'];\n} {\n  const {\n    isOpen,\n    isAnimatedOnMount,\n    onTransitionEnd,\n    placement,\n    animationStates: propsAnimationStates,\n    onPosition\n  } = props;\n\n  //The animationPlacement is used for the case of flipping.\n  const [animationPlacement, setAnimationPlacement] = useState<Placement>(placement);\n  const { direction } = useUser();\n  const { setAnimationElementRef, animationElementRef, status } =\n    useAnimationStatus<AnimationPopupElement>({\n      isOpen: isOpen,\n      isAnimatedOnMount: isAnimatedOnMount,\n      animationStates: propsAnimationStates ?? animationStates,\n      onTransitionEnd\n    });\n  const popupElementRef = animationElementRef;\n\n  const onPositionAnimated = useCallback<Required<ComponentProps<typeof Floating>>['onPosition']>(\n    (data) => {\n      if (popupElementRef.current !== null) {\n        // if flips happens we need to change the placement in the animations.\n        // There are cases where animation is done before even running the useEffect below. Due to that we update current placement of the node here\n        popupElementRef.current.placement = data.placement;\n      }\n      if (animationPlacement !== data.placement) {\n        setAnimationPlacement(data.placement);\n      }\n      onPosition?.(data);\n    },\n    [onPosition, popupElementRef, animationPlacement]\n  );\n\n  //This is needed for the case if popup flips and changes the placement.\n  useEffect(() => {\n    if (popupElementRef != null && popupElementRef.current != null && status != 'unmounted') {\n      if (popupElementRef.current.placement !== animationPlacement) {\n        popupElementRef.current.placement = animationPlacement;\n      }\n      popupElementRef.current.direction = direction;\n    }\n  }, [popupElementRef, animationPlacement, direction, status]);\n  return { setAnimationElementRef, status, onPosition: onPositionAnimated };\n}\n"],"names":["animationStates","opening","node","from","scaleX","scaleY","opacity","transformOrigin","getTransformOrigin","placement","direction","to","options","duration","closing","props","isOpen","isAnimatedOnMount","onTransitionEnd","propsAnimationStates","onPosition","animationPlacement","setAnimationPlacement","useState","useUser","setAnimationElementRef","animationElementRef","status","useAnimationStatus","popupElementRef","onPositionAnimated","useCallback","data","current","useEffect"],"mappings":"0JAyCA,MAAMA,EAAkB,CACtBC,QAAUC,IACD,CAELC,KAAM,CACJC,OAAQ,EACRC,OAAQ,EACRC,QAAS,EACTC,gBAAiBC,EAAAA,mBAAmBN,EAAKO,UAAWP,EAAKQ,YAE3DC,GAAI,CACFP,OAAQ,EACRC,OAAQ,EACRC,QAAS,EACTC,gBAAiBC,EAAAA,mBAAmBN,EAAKO,UAAWP,EAAKQ,YAE3DE,QAAS,CACPC,SAAU,OAIhBC,QAAUZ,IACD,CAELC,KAAM,CACJC,OAAQ,EACRC,OAAQ,EACRC,QAAS,EACTC,gBAAiBC,EAAAA,mBAAmBN,EAAKO,UAAWP,EAAKQ,YAE3DC,GAAI,CACFP,OAAQ,EACRC,OAAQ,EACRC,QAAS,EACTC,gBAAiBC,EAAAA,mBAAmBN,EAAKO,UAAWP,EAAKQ,YAE3DE,QAAS,CACPC,SAAU,4BAMZ,SAA4BE,GAKhC,MAAMC,OACJA,EAAMC,kBACNA,EAAiBC,gBACjBA,EAAeT,UACfA,EACAT,gBAAiBmB,EAAoBC,WACrCA,GACEL,GAGGM,EAAoBC,GAAyBC,EAAQA,SAAYd,IAClEC,UAAEA,GAAcc,EAAAA,WAChBC,uBAAEA,EAAsBC,oBAAEA,EAAmBC,OAAEA,GACnDC,EAAAA,mBAA0C,CACxCZ,OAAQA,EACRC,kBAAmBA,EACnBjB,gBAAiBmB,GAAwBnB,EACzCkB,oBAEEW,EAAkBH,EAElBI,EAAqBC,eACxBC,IACiC,OAA5BH,EAAgBI,UAGlBJ,EAAgBI,QAAQxB,UAAYuB,EAAKvB,WAEvCY,IAAuBW,EAAKvB,WAC9Ba,EAAsBU,EAAKvB,WAE7BW,IAAaY,EAAK,GAEpB,CAACZ,EAAYS,EAAiBR,IAYhC,OARAa,EAAAA,WAAU,KACe,MAAnBL,GAAsD,MAA3BA,EAAgBI,SAA6B,aAAVN,IAC5DE,EAAgBI,QAAQxB,YAAcY,IACxCQ,EAAgBI,QAAQxB,UAAYY,GAEtCQ,EAAgBI,QAAQvB,UAAYA,EACrC,GACA,CAACmB,EAAiBR,EAAoBX,EAAWiB,IAC7C,CAAEF,yBAAwBE,SAAQP,WAAYU,EACvD"}