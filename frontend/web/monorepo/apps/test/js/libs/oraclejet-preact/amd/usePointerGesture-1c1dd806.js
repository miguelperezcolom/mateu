define(['exports', 'preact/hooks'], (function(e,n){"use strict";e.usePointerGesture=({captureTargetRef:e,numPointers:r=1,onPointerGestureDown:t,onPointerGestureMove:o,onPointerGestureEnd:u,onExtraneousPointerDown:i,isDisabled:c=!1})=>{const s=n.useRef([]);c&&(s.current=[]);const p=e=>{const n=s.current.findIndex((n=>n.pointerId===e.pointerId));-1!==n&&(s.current[n]=e,s.current.length===r&&u&&u({pointers:s.current}),s.current.splice(n,1))};return c?{}:{onPointerDown:n=>{s.current.push(n),s.current.length===r?(s.current.forEach((n=>e.current.setPointerCapture(n.pointerId))),t&&t({pointers:s.current})):s.current.length>r&&i&&i({pointers:s.current})},onPointerMove:e=>{if(0===s.current.length)return;const n=s.current.findIndex((n=>n.pointerId===e.pointerId));-1!==n&&(s.current[n]=e,s.current.length===r&&o&&o({pointers:s.current}))},onPointerUp:p,onPointerCancel:p,onPointerOut:p,onPointerLeave:p}}}));
//# sourceMappingURL=usePointerGesture-1c1dd806.js.map
