{"version":3,"file":"truncationUtils-84dea8ba.js","sources":["../../src/utils/PRIVATE_truncationUtils/truncationUtils.ts"],"sourcesContent":["import { RefObject } from 'preact';\n\n/**\n * Default Redwood line-height overrides cause false positives as the Range sizes are always\n * for a 'normal' line-height, and none of the default scale fonts have 'normal' line-height\n * values. This causes offsets of between 0.5px and 1.5px. As a true truncation will cause\n * an offset of closer to a full line height (at least 12px for 2xs text), use a larger offset\n * value than the currently observed 1.5px max to reduce the likelihood of false positives.\n */\nconst verticalTruncationOffset = 5;\n\n/**\n * On Chrome it appears that sometimes there is a very slight difference between the\n * untruncatedText.width and the renderedText.width on the order of 0.00000[more numbers].\n * It only seems to happen for certain strings, so it might be related to font rendering.\n * In any case, in order to address this we use a horizontalTruncationOffset\n * to reduce false positives.\n */\nconst horizontalTruncationOffset = 1;\n\n/**\n * Returns true if the size of an element's node contents exceeds the size\n * of the element itself.\n * @param rootRef An element ref\n */\nexport const detectTruncation = (rootRef: RefObject<HTMLElement>) => {\n  if (rootRef.current) {\n    const element = rootRef.current;\n    const range = new Range();\n    range.selectNodeContents(element);\n    const untruncatedText = range.getBoundingClientRect();\n    const renderedText = element.getBoundingClientRect();\n    const computedStyles = getComputedStyle(element);\n    const padding =\n      parseFloat(computedStyles.paddingLeft) + parseFloat(computedStyles.paddingRight);\n    const border = parseFloat(computedStyles.borderLeft) + parseFloat(computedStyles.borderRight);\n    const truncated =\n      untruncatedText.width > renderedText.width - padding - border + horizontalTruncationOffset ||\n      untruncatedText.height > renderedText.height + verticalTruncationOffset;\n    return truncated;\n  }\n  return false;\n};\n"],"names":["rootRef","current","element","range","Range","selectNodeContents","untruncatedText","getBoundingClientRect","renderedText","computedStyles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","border","borderLeft","borderRight","width","height"],"mappings":"gEAyBiCA,IAC/B,GAAIA,EAAQC,QAAS,CACnB,MAAMC,EAAUF,EAAQC,QAClBE,EAAQ,IAAIC,MAClBD,EAAME,mBAAmBH,GACzB,MAAMI,EAAkBH,EAAMI,wBACxBC,EAAeN,EAAQK,wBACvBE,EAAiBC,iBAAiBR,GAClCS,EACJC,WAAWH,EAAeI,aAAeD,WAAWH,EAAeK,cAC/DC,EAASH,WAAWH,EAAeO,YAAcJ,WAAWH,EAAeQ,aAIjF,OAFEX,EAAgBY,MAAQV,EAAaU,MAAQP,EAAUI,EAnB1B,GAoB7BT,EAAgBa,OAASX,EAAaW,OA7BX,CA+B9B,CACD,OAAO,CAAK"}