{"version":3,"file":"useExpandCollapse-4478c2eb.js","sources":["../../src/hooks/PRIVATE_useListCommon/useExpandCollapse.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { useCallback } from 'preact/hooks';\nimport { ToggleDetail } from '#UNSAFE_Collection';\nimport { useUser } from '#hooks/UNSAFE_useUser';\n\n/**\n * A hook that handles mouse and keyboard gesture that toggles the expanded state.\n * @param keyExtractor\n * @param expanded\n * @param onToggle\n * @returns\n */\nexport function useExpandCollapse<K>(\n  keyExtractor: (element: HTMLElement) => K | null,\n  isExpanded: (key: K) => boolean,\n  onToggle?: (detail: ToggleDetail<K>) => void,\n  allowArrowKeysOnly?: boolean\n) {\n  const { direction } = useUser();\n\n  const onClick = useCallback(\n    (event: MouseEvent) => {\n      if (allowArrowKeysOnly !== true && onToggle) {\n        handleToggle(event, keyExtractor, onToggle);\n      }\n    },\n    [keyExtractor, onToggle, allowArrowKeysOnly]\n  );\n\n  const onKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      if (allowArrowKeysOnly !== true && (event.key === 'Enter' || event.key === ' ')) {\n        handleToggle(event, keyExtractor, onToggle);\n      } else if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n        const isRtl = direction === 'rtl';\n        const isLeftArrow = event.key === 'ArrowLeft' && !isRtl;\n        handleArrowKey(\n          isLeftArrow,\n          event.target as HTMLElement,\n          isExpanded,\n          keyExtractor,\n          onToggle\n        );\n        // arrow key might cause it to scroll horizontally\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    },\n    [keyExtractor, onToggle, isExpanded, direction, allowArrowKeysOnly]\n  );\n\n  // prevent default (propagation) for keyDown to prevent scrolling the container\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (allowArrowKeysOnly !== true && (event.key === 'Enter' || event.key === ' ')) {\n        event.preventDefault();\n      } else if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\n        event.preventDefault();\n      }\n    },\n    [allowArrowKeysOnly]\n  );\n\n  return onToggle ? { onClick, onKeyDown, onKeyUp } : {};\n}\n\nconst handleArrowKey = <K>(\n  isLeftArrow: boolean,\n  target: HTMLElement,\n  isExpanded: (key: K) => boolean,\n  keyExtractor: (element: HTMLElement) => K | null,\n  onToggle?: (detail: ToggleDetail<K>) => void\n) => {\n  const itemKey = keyExtractor(target);\n  if (onToggle && itemKey) {\n    const contains = isExpanded(itemKey);\n    if ((isLeftArrow && contains) || (!isLeftArrow && !contains)) {\n      onToggle({ value: itemKey });\n    }\n  }\n};\n\nconst handleToggle = <K>(\n  event: Event,\n  keyExtractor: (element: HTMLElement) => K | null,\n  onToggle?: (detail: ToggleDetail<K>) => void\n) => {\n  const itemKey = keyExtractor(event.target as HTMLElement);\n  if (onToggle && itemKey) {\n    onToggle({ value: itemKey });\n    if (event.type === 'click') {\n      event.stopPropagation();\n    }\n  }\n};\n"],"names":["handleArrowKey","isLeftArrow","target","isExpanded","keyExtractor","onToggle","itemKey","contains","value","handleToggle","event","type","stopPropagation","allowArrowKeysOnly","direction","useUser","onClick","useCallback","onKeyUp","key","isRtl","preventDefault","onKeyDown"],"mappings":"qFAwEA,MAAMA,EAAiB,CACrBC,EACAC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAUF,EAAaF,GAC7B,GAAIG,GAAYC,EAAS,CACvB,MAAMC,EAAWJ,EAAWG,IACvBL,GAAeM,IAAeN,IAAgBM,IACjDF,EAAS,CAAEG,MAAOF,GAErB,GAGGG,EAAe,CACnBC,EACAN,EACAC,KAEA,MAAMC,EAAUF,EAAaM,EAAMR,QAC/BG,GAAYC,IACdD,EAAS,CAAEG,MAAOF,IACC,UAAfI,EAAMC,MACRD,EAAME,kBAET,sBAjFG,SACJR,EACAD,EACAE,EACAQ,GAEA,MAAMC,UAAEA,GAAcC,EAAAA,UAEhBC,EAAUC,eACbP,KAC4B,IAAvBG,GAA+BR,GACjCI,EAAaC,EAAON,EAAcC,EACnC,GAEH,CAACD,EAAcC,EAAUQ,IAGrBK,EAAUD,eACbP,IACC,IAA2B,IAAvBG,GAA8C,UAAdH,EAAMS,KAAiC,MAAdT,EAAMS,KAE5D,GAAkB,cAAdT,EAAMS,KAAqC,eAAdT,EAAMS,IAAsB,CAClE,MAAMC,EAAsB,QAAdN,EACRb,EAA4B,cAAdS,EAAMS,MAAwBC,EAClDpB,EACEC,EACAS,EAAMR,OACNC,EACAC,EACAC,GAGFK,EAAMW,iBACNX,EAAME,iBACP,OAdCH,EAAaC,EAAON,EAAcC,EAcnC,GAEH,CAACD,EAAcC,EAAUF,EAAYW,EAAWD,IAI5CS,EAAYL,eACfP,MAC4B,IAAvBG,GAA8C,UAAdH,EAAMS,KAAiC,MAAdT,EAAMS,MAE1C,cAAdT,EAAMS,KAAqC,eAAdT,EAAMS,KAD5CT,EAAMW,gBAGP,GAEH,CAACR,IAGH,OAAOR,EAAW,CAAEW,UAASM,YAAWJ,WAAY,CAAA,CACtD"}