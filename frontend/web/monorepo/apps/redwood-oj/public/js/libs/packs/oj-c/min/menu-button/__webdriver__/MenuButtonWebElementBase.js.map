{"version":3,"file":"MenuButtonWebElementBase.js","sourceRoot":"","sources":["MenuButtonWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,wBAAyB,SAAQ,uBAAY;IACxD;;;;;OAKG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAS,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,WAAW,CAAS,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;OAKG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAgB,OAAO,CAAC,CAAC;IAClD,CAAC;IAED;;;;;OAKG;IACI,eAAe,CAAC,SAAiB;QACtC,OAAO,IAAI,CAAC,WAAW,CAAS,WAAW,EAAE,SAAS,CAAC,CAAC;IAC1D,CAAC;IAED;;;;;OAKG;IACI,YAAY;QACjB,OAAO,IAAI,CAAC,WAAW,CAAS,WAAW,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;OAKG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,WAAW,CAAS,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;OAKG;IACI,eAAe;QACpB,OAAO,IAAI,CAAC,WAAW,CAAS,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,WAAW,CAAkB,OAAO,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAS,UAAU,CAAC,CAAC;IAC9C,CAAC;CACF;AA9GD,4DA8GC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-menu-button WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, MenuButtonWebElement.ts.\n */\nexport class MenuButtonWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>label</code> property.\n   * Text to show in the button.\n   * @return The value of <code>label</code> property.\n   *\n   */\n  public getLabel(): Promise<string> {\n    return this.getProperty<string>('label');\n  }\n\n  /**\n   * Gets the value of <code>suffix</code> property.\n   * Suffix appended to menu label to indicate last selection.\n   * @return The value of <code>suffix</code> property.\n   *\n   */\n  public getSuffix(): Promise<string> {\n    return this.getProperty<string>('suffix');\n  }\n\n  /**\n   * Gets the value of <code>tooltip</code> property.\n   * Text to show in the tooltip. This overrides the default tooltip that renders the label when in icon mode.\n   * @return The value of <code>tooltip</code> property.\n   *\n   */\n  public getTooltip(): Promise<string> {\n    return this.getProperty<string>('tooltip');\n  }\n\n  /**\n   * Gets the value of <code>items</code> property.\n   * Items describe the menu items rendered by the menu button.\n   * @return The value of <code>items</code> property.\n   *\n   */\n  public getItems(): Promise<Array<object>> {\n    return this.getProperty<Array<object>>('items');\n  }\n\n  /**\n   * Sets the value of <code>selection</code> property.\n   * An array containing key/value objects for menu selection groups.\n   * @param selection The value to set for <code>selection</code>\n   *\n   */\n  public changeSelection(selection: object): Promise<void> {\n    return this.setProperty<object>('selection', selection);\n  }\n\n  /**\n   * Gets the value of <code>selection</code> property.\n   * An array containing key/value objects for menu selection groups.\n   * @return The value of <code>selection</code> property.\n   *\n   */\n  public getSelection(): Promise<object> {\n    return this.getProperty<object>('selection');\n  }\n\n  /**\n   * Gets the value of <code>display</code> property.\n   * Display just the label, the icons, or all. Label is used as tooltip and should be set in all cases.\n   * @return The value of <code>display</code> property.\n   *\n   */\n  public getDisplay(): Promise<string> {\n    return this.getProperty<string>('display');\n  }\n\n  /**\n   * Gets the value of <code>disabled</code> property.\n   * Specifies that the button element should be disabled.\n   * @return The value of <code>disabled</code> property.\n   *\n   */\n  public getDisabled(): Promise<boolean> {\n    return this.getProperty<boolean>('disabled');\n  }\n\n  /**\n   * Gets the value of <code>size</code> property.\n   * Size of button\n   * @return The value of <code>size</code> property.\n   *\n   */\n  public getSizeProperty(): Promise<string> {\n    return this.getProperty<string>('size');\n  }\n\n  /**\n   * Gets the value of <code>width</code> property.\n   * Specifies that the button style width\n   * @return The value of <code>width</code> property.\n   *\n   */\n  public getWidth(): Promise<number | string> {\n    return this.getProperty<number | string>('width');\n  }\n\n  /**\n   * Gets the value of <code>chroming</code> property.\n   * Indicates in what states the button has chromings in background and border.\n   * @return The value of <code>chroming</code> property.\n   *\n   */\n  public getChroming(): Promise<string> {\n    return this.getProperty<string>('chroming');\n  }\n}\n"]}