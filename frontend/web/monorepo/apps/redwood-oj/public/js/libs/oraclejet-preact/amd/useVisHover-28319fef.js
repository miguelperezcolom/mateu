define(['exports', 'preact/hooks'], (function(e,t){"use strict";e.useVisHover=function(e,o,r,n="touchStart",u=!1){const[c,a]=t.useState(!1),i=t.useRef(),l=t.useCallback((e=>{c&&e.preventDefault()}),[c]),p=t.useCallback((t=>{if("touch"===t.pointerType){const r=t.currentTarget,u=()=>{a(!0),o?.(t,r),e(t),t.target.hasPointerCapture(t.pointerId)&&t.target.releasePointerCapture(t.pointerId)};"touchHold"===n?i.current=setTimeout(u,200):u()}}),[o,e,n]),s=t.useCallback((t=>{("touch"!==t.pointerType||c)&&e(t)}),[e,c]),T=t.useCallback((e=>{"touch"===e.pointerType&&(clearTimeout(i.current),i.current=void 0,c&&r?.(),a(!1))}),[r,c]),h=t.useCallback((e=>{("touch"!==e.pointerType||c)&&o?.(e,e.currentTarget)}),[o,c]),C=t.useCallback((e=>{("touch"!==e.pointerType||c)&&r?.()}),[r,c]),k=t.useCallback((e=>{"touch"!==e.pointerType||c||(clearTimeout(i.current),i.current=void 0)}),[c]);return u?{}:{onTouchMove:l,onPointerDown:p,onPointerUp:T,onPointerMove:s,onPointerEnter:h,onPointerLeave:C,onPointerCancel:k}}}));
//# sourceMappingURL=useVisHover-28319fef.js.map
