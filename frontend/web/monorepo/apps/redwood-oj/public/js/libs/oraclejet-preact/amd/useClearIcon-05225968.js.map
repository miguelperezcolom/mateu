{"version":3,"file":"useClearIcon-05225968.js","sources":["../../src/hooks/UNSAFE_useClearIcon/useClearIcon.ts"],"sourcesContent":["import { ComponentChildren } from 'preact';\nimport { useEffect, useCallback } from 'preact/hooks';\nimport { useToggle } from '../UNSAFE_useToggle';\n\nexport type UseClearIconProps = {\n  clearIcon?: ComponentChildren;\n  display?: 'always' | 'conditionally' | 'never';\n  hasValue?: boolean;\n  isEnabled?: boolean;\n  isFocused?: boolean;\n  isHover?: boolean;\n};\n\n/**\n * A custom hook that handles showing/hiding clear icon\n */\nexport function useClearIcon({\n  clearIcon,\n  display,\n  hasValue,\n  isEnabled = true,\n  isFocused = false,\n  isHover = false\n}: UseClearIconProps) {\n  const shouldRenderClearIcon = useCallback(\n    () =>\n      isEnabled &&\n      (display === 'always' || (display === 'conditionally' && hasValue && (isFocused || isHover))),\n    [display, hasValue, isEnabled, isFocused, isHover]\n  );\n  const { bool, setFalse, setTrue } = useToggle(shouldRenderClearIcon());\n\n  useEffect(() => {\n    shouldRenderClearIcon() ? setTrue() : setFalse();\n  }, [shouldRenderClearIcon, setTrue, setFalse]);\n\n  return bool ? clearIcon : null;\n}\n"],"names":["clearIcon","display","hasValue","isEnabled","isFocused","isHover","shouldRenderClearIcon","useCallback","bool","setFalse","setTrue","useToggle","useEffect"],"mappings":"sGAgBM,UAAuBA,UAC3BA,EAASC,QACTA,EAAOC,SACPA,EAAQC,UACRA,GAAY,EAAIC,UAChBA,GAAY,EAAKC,QACjBA,GAAU,IAEV,MAAMC,EAAwBC,EAAWA,aACvC,IACEJ,IACa,WAAZF,GAAqC,kBAAZA,GAA+BC,IAAaE,GAAaC,KACrF,CAACJ,EAASC,EAAUC,EAAWC,EAAWC,KAEtCG,KAAEA,EAAIC,SAAEA,EAAQC,QAAEA,GAAYC,EAASA,UAACL,KAM9C,OAJAM,EAAAA,WAAU,KACRN,IAA0BI,IAAYD,GAAU,GAC/C,CAACH,EAAuBI,EAASD,IAE7BD,EAAOR,EAAY,IAC5B"}