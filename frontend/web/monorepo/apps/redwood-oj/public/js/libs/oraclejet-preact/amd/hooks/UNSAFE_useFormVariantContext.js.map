{"version":3,"file":"UNSAFE_useFormVariantContext.js","sources":["../../../src/hooks/UNSAFE_useFormVariantContext/FormVariantContext.ts","../../../src/hooks/UNSAFE_useFormVariantContext/useFormVariantContext.ts"],"sourcesContent":["import { createContext } from 'preact';\n\n/**\n * Context which an ancestor component can use to provide a value for the 'variant' property\n * of the descendant form fields. The context supports the following string literals for its\n * value.\n * 1. 'default'        - this is the default variant of the form control.\n * 2. 'embedded'       - this is when the form component is rendered in core-pack collection\n *                       components and need to take that style.\n * 3. 'legacyEmbedded' - this is when the form component is rendered in legacy collection\n *                       components and need to take that style.\n */\nexport const FormVariantContext = createContext<\n  'default' | 'embedded' | 'legacyEmbedded' | undefined\n>('default');\n","import { useContext } from 'preact/hooks';\nimport { FormVariantContext } from './FormVariantContext';\n\n/**\n * Utility hook for consuming the FormVariantContext\n *\n * @returns The value of the closest FormVariantContext provider\n */\nexport function useFormVariantContext() {\n  return useContext(FormVariantContext);\n}\n"],"names":["FormVariantContext","createContext","useContext"],"mappings":"+EAYaA,EAAqBC,EAAaA,cAE7C,qECLA,OAAOC,EAAAA,WAAWF,EACpB"}