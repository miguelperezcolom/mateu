{"version":3,"file":"tabbableUtils-147c1073.js","sources":["../../src/utils/PRIVATE_visTestUtils/tabbableUtils.tsx"],"sourcesContent":["import { render } from '@testing-library/preact';\nimport { matchTranslationBundle } from '../UNSAFE_matchTranslationBundle';\nimport { RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport type { RootEnvironment } from '../../UNSAFE_Environment';\nimport { TabbableModeContext } from '../../hooks/UNSAFE_useTabbableMode';\nimport { JSXInternal } from 'preact/src/jsx';\n\nexport const setupTabbableComponent = async (\n  component: JSXInternal.Element,\n  isTabbable?: boolean\n) => {\n  const locale = matchTranslationBundle(['en'], new Set(['en-US', 'en']));\n  const { default: translations } = await import(`../../resources/nls/${locale}/bundle.ts`);\n  const env: Partial<RootEnvironment> = {\n    translations: { '@oracle/oraclejet-preact': translations }\n  };\n  if (isTabbable !== undefined) {\n    return render(\n      <RootEnvironmentProvider environment={env}>\n        <TabbableModeContext.Provider value={{ isTabbable: isTabbable }}>\n          {component}\n        </TabbableModeContext.Provider>\n      </RootEnvironmentProvider>\n    );\n  } else {\n    return render(<RootEnvironmentProvider environment={env}>{component}</RootEnvironmentProvider>);\n  }\n};\n"],"names":["async","component","isTabbable","locale","matchTranslationBundle","Set","default","translations","__variableDynamicImportRuntime0__","env","undefined","render","_jsx","jsx","RootEnvironmentProvider","environment","children","TabbableModeContext","Provider","value"],"mappings":"2RAOsCA,MACpCC,EACAC,KAEA,MAAMC,EAASC,yBAAuB,CAAC,MAAO,IAAIC,IAAI,CAAC,QAAS,SACxDC,QAASC,6uKAAuBC,CAAO,uBAAuBL,eAChEM,EAAgC,CACpCF,aAAc,CAAE,2BAA4BA,IAE9C,YAAmBG,IAAfR,EACKS,EAAMA,OACXC,EAAAC,IAACC,0BAAuB,CAACC,YAAaN,EAAGO,SACvCJ,EAAAA,IAACK,EAAmBA,oBAACC,UAASC,MAAO,CAAEjB,WAAYA,GAAYc,SAC5Df,OAKAU,EAAMA,OAACC,MAACE,EAAAA,wBAAwB,CAAAC,YAAaN,EAAMO,SAAAf,IAC3D"}