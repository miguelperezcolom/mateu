{"version":3,"file":"MultilineText-a4fcc3cb.js","sources":["../../src/PRIVATE_VisSVGText/SinglelineText.tsx","../../src/PRIVATE_VisSVGText/MultilineText.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { JSXInternal } from 'preact/src/jsx';\n\ntype SVGTextAttrs = JSXInternal.SVGAttributes<SVGTextElement>;\n\ntype TextProps = {\n  text: string;\n  props: SVGTextAttrs;\n  dataProps?: Record<`data-oj-private-${string}`, string | undefined>;\n  id?: string;\n  class?: string;\n  style?: SVGTextAttrs['style'];\n  isRotated: boolean;\n  isRtl: boolean;\n  isTruncated?: boolean;\n};\n\nexport function SinglelineText({\n  text,\n  style,\n  dataProps,\n  props,\n  id,\n  isRotated,\n  isRtl,\n  isTruncated,\n  ...otherProps\n}: TextProps) {\n  const { x, y } = props;\n  const transform = isRotated\n    ? `matrix(0, ${isRtl ? 1 : -1}, ${isRtl ? -1 : 1}, 0, ${x}, ${y})`\n    : undefined;\n  return (\n    <text\n      {...props}\n      {...dataProps}\n      id={id}\n      className={otherProps.class}\n      style={style}\n      x={isRotated ? undefined : x}\n      aria-label={text}\n      y={isRotated ? undefined : y}\n      transform={isRotated ? transform : undefined}>\n      {text}\n    </text>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { JSXInternal } from 'preact/src/jsx';\nimport { SinglelineText } from './SinglelineText';\n\ntype SVGTextAttrs = JSXInternal.SVGAttributes<SVGTextElement>;\n\ntype MultilineTextProps = {\n  text: string;\n  lines: string[];\n  lineProps: SVGTextAttrs[];\n  textStyle: SVGTextAttrs['style'];\n  isRotated: boolean;\n  isRtl: boolean;\n  dataProps?: Record<`data-oj-private-${string}`, string | undefined>;\n  id?: string;\n  class?: string;\n  isTruncated?: boolean;\n};\n\nexport function MultilineText({\n  text,\n  lines,\n  lineProps,\n  dataProps,\n  id,\n  textStyle,\n  isRotated,\n  isRtl,\n  isTruncated,\n  ...otherProps\n}: MultilineTextProps) {\n  return (\n    <g {...dataProps} id={id} className={otherProps.class} style={textStyle} aria-label={text}>\n      {lines.map((line, i) => {\n        return (\n          <SinglelineText text={line} props={lineProps[i]} isRotated={isRotated} isRtl={isRtl} />\n        );\n      })}\n    </g>\n  );\n}\n"],"names":["SinglelineText","text","style","dataProps","props","id","isRotated","isRtl","isTruncated","otherProps","x","y","transform","undefined","_jsx","jsx","className","class","children","lines","lineProps","textStyle","map","line","i"],"mappings":"oEAwBM,SAAUA,GAAeC,KAC7BA,EAAIC,MACJA,EAAKC,UACLA,EAASC,MACTA,EAAKC,GACLA,EAAEC,UACFA,EAASC,MACTA,EAAKC,YACLA,KACGC,IAEH,MAAMC,EAAEA,EAACC,EAAEA,GAAMP,EACXQ,EAAYN,EACd,aAAaC,EAAQ,GAAK,MAAMA,GAAS,EAAI,SAASG,MAAMC,UAC5DE,EACJ,OACEC,EAAAC,IAAA,OAAA,IACMX,KACAD,EACJE,GAAIA,EACJW,UAAWP,EAAWQ,MACtBf,MAAOA,EACPQ,EAAGJ,OAAYO,EAAYH,EAAC,aAChBT,EACZU,EAAGL,OAAYO,EAAYF,EAC3BC,UAAWN,EAAYM,OAAYC,EAASK,SAC3CjB,GAGP,iBC3BM,UAAwBA,KAC5BA,EAAIkB,MACJA,EAAKC,UACLA,EAASjB,UACTA,EAASE,GACTA,EAAEgB,UACFA,EAASf,UACTA,EAASC,MACTA,EAAKC,YACLA,KACGC,IAEH,OACEK,EAAAC,IAAA,IAAA,IAAOZ,EAAWE,GAAIA,EAAIW,UAAWP,EAAWQ,MAAOf,MAAOmB,EAAS,aAAcpB,EAAIiB,SACtFC,EAAMG,KAAI,CAACC,EAAMC,IAEdV,EAACC,IAAAf,EAAe,CAAAC,KAAMsB,EAAMnB,MAAOgB,EAAUI,GAAIlB,UAAWA,EAAWC,MAAOA,OAKxF"}