{"version":3,"file":"BareButton-6152c7c2.js","sources":["../../src/UNSAFE_BareButton/BareButton.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Vers.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport {\n  forwardRef,\n  ForwardedRef,\n  useRef,\n  useImperativeHandle,\n  CSSProperties\n} from 'preact/compat';\nimport { useBareButton, type BareButtonProps } from '../hooks/UNSAFE_useBareButton';\n\nimport type { UnsafeDomHandle } from '../utils/UNSAFE_unsafeDomAccess';\nimport { UNSAFE_DOM_ACCESS } from '../utils/UNSAFE_unsafeDomAccess';\n\ntype ButtonHandle = {\n  focus: () => void;\n  blur: () => void;\n  click: () => void;\n} & UnsafeDomHandle;\n\ntype ButtonStylingProps = {\n  /**\n   * The classes to be applied\n   */\n  classNames?: string;\n\n  /**\n   * The styles to be applied\n   */\n  style?: CSSProperties;\n};\n\n/**\n * BareButtons are unformatted bare buttons that direct users to initiate or take actions and work with a single tap, click, or keystroke.\n */\nexport const BareButton = forwardRef(\n  (props: BareButtonProps & ButtonStylingProps, ref: ForwardedRef<ButtonHandle>) => {\n    const rootRef = useRef<\n      HTMLButtonElement & HTMLAnchorElement & HTMLSpanElement & HTMLDivElement\n    >(null);\n\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          focus: () => {\n            rootRef.current?.focus();\n          },\n          blur: () => {\n            rootRef.current?.blur();\n          },\n          click: () => {\n            rootRef.current?.click();\n          },\n          [UNSAFE_DOM_ACCESS]: rootRef.current!\n        };\n      },\n      []\n    );\n\n    const { style: buttonStyle, classNames: buttonClass, ...rest } = { ...props };\n    const buttonProps = useBareButton({ ...rest });\n    const ElementType = props.elementDetails ? props.elementDetails.type : 'button';\n\n    return (\n      <ElementType ref={rootRef} style={buttonStyle} class={buttonClass} {...buttonProps}>\n        {props.children}\n      </ElementType>\n    );\n  }\n);\n\nBareButton.displayName = 'BareButton';\n"],"names":["BareButton","forwardRef","props","ref","rootRef","useRef","useImperativeHandle","focus","current","blur","click","UNSAFE_DOM_ACCESS","style","buttonStyle","classNames","buttonClass","rest","buttonProps","useBareButton","ElementType","elementDetails","type","_jsx","class","children","displayName"],"mappings":"kJAwCa,MAAAA,EAAaC,EAAUA,YAClC,CAACC,EAA6CC,KAC5C,MAAMC,EAAUC,SAEd,MAEFC,EAAmBA,oBACjBH,GACA,KACS,CACLI,MAAO,KACLH,EAAQI,SAASD,OAAO,EAE1BE,KAAM,KACJL,EAAQI,SAASC,MAAM,EAEzBC,MAAO,KACLN,EAAQI,SAASE,OAAO,EAE1B,CAACC,EAAAA,mBAAoBP,EAAQI,WAGjC,IAGF,MAAQI,MAAOC,EAAaC,WAAYC,KAAgBC,GAAS,IAAKd,GAChEe,EAAcC,EAAaA,cAAC,IAAKF,IACjCG,EAAcjB,EAAMkB,eAAiBlB,EAAMkB,eAAeC,KAAO,SAEvE,OACEC,EAAAA,IAACH,EAAW,CAAChB,IAAKC,EAASQ,MAAOC,EAAaU,MAAOR,KAAiBE,EAAWO,SAC/EtB,EAAMsB,UAET,IAINxB,EAAWyB,YAAc"}