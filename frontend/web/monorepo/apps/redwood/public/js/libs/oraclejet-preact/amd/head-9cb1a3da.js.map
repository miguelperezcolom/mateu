{"version":3,"file":"head-9cb1a3da.js","sources":["../../../../node_modules/ramda/es/nth.js","../../../../node_modules/ramda/es/internal/_isArrayLike.js","../../../../node_modules/ramda/es/internal/_createReduce.js","../../../../node_modules/ramda/es/internal/_xArrayReduce.js","../../../../node_modules/ramda/es/bind.js","../../../../node_modules/ramda/es/internal/_xReduce.js","../../../../node_modules/ramda/es/internal/_xwrap.js","../../../../node_modules/ramda/es/reduce.js","../../../../node_modules/ramda/es/internal/_pipe.js","../../../../node_modules/ramda/es/internal/_checkForMethod.js","../../../../node_modules/ramda/es/slice.js","../../../../node_modules/ramda/es/tail.js","../../../../node_modules/ramda/es/head.js","../../../../node_modules/ramda/es/pipe.js"],"sourcesContent":["import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","import _isArrayLike from \"./_isArrayLike.js\";\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _createReduce(arrayReduce, methodReduce, iterableReduce) {\n  return function _reduce(xf, acc, list) {\n    if (_isArrayLike(list)) {\n      return arrayReduce(xf, acc, list);\n    }\n\n    if (list == null) {\n      return acc;\n    }\n\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return methodReduce(xf, acc, list, 'fantasy-land/reduce');\n    }\n\n    if (list[symIterator] != null) {\n      return iterableReduce(xf, acc, list[symIterator]());\n    }\n\n    if (typeof list.next === 'function') {\n      return iterableReduce(xf, acc, list);\n    }\n\n    if (typeof list.reduce === 'function') {\n      return methodReduce(xf, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}","export default function _xArrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import _createReduce from \"./_createReduce.js\";\nimport _xArrayReduce from \"./_xArrayReduce.js\";\nimport bind from \"../bind.js\";\n\nfunction _xIterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _xMethodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar _xReduce =\n/*#__PURE__*/\n_createReduce(_xArrayReduce, _xMethodReduce, _xIterableReduce);\n\nexport default _xReduce;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _curry3 from \"./internal/_curry3.js\";\nimport _xReduce from \"./internal/_xReduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Be cautious of mutating and returning the accumulator. If you reuse it across\n * invocations, it will continue to accumulate onto the same value. The general\n * recommendation is to always return a new value. If you can't do so for\n * performance reasons, then be sure to reinitialize the accumulator on each\n * invocation.\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(function (xf, acc, list) {\n  return _xReduce(typeof xf === 'function' ? _xwrap(xf) : xf, acc, list);\n});\n\nexport default reduce;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import nth from \"./nth.js\";\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\nvar head =\n/*#__PURE__*/\nnth(0);\nexport default head;","import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}"],"names":["nth$1","_curry2","offset","list","idx","length","_isString","charAt","_isArrayLike","_curry1","x","_isArray","hasOwnProperty","symIterator","Symbol","iterator","_createReduce","arrayReduce","methodReduce","iterableReduce","xf","acc","next","reduce","TypeError","_xArrayReduce","len","bind","fn","thisObj","_arity","apply","arguments","_xIterableReduce","iter","step","done","value","_xMethodReduce","obj","methodName","_xReduce","XWrap","this","f","prototype","Error","reduce$1","_curry3","_pipe","g","call","_checkForMethod","methodname","Array","slice","fromIndex","toIndex","tail$1","Infinity","head$1","tail"],"mappings":"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"}