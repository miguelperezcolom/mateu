{"version":3,"file":"popupAnimationUtils-49b93365.js","sources":["../../src/utils/PRIVATE_popupAnimationUtils/popupAnimationUtils.ts"],"sourcesContent":["import { normalizePosition } from '../PRIVATE_floatingUtils';\nimport { Placement, RtlSide } from '../../UNSAFE_Floating';\n\nconst _ANIMATION_TRANSFORM_ORIGIN_RULES = {\n  top: 'center bottom',\n  'top-right': 'right bottom',\n  'top-left': 'left bottom',\n  'top-right-corner': 'left bottom',\n  'top-left-corner': 'right bottom',\n  right: 'left center',\n  'right-top': 'left top',\n  'right-bottom': 'left bottom',\n  'right-top-corner': 'left bottom',\n  'right-bottom-corner': 'left top',\n  bottom: 'center top',\n  'bottom-right': 'right top',\n  'bottom-left': 'left top',\n  'bottom-right-corner': 'left top',\n  'bottom-left-corner': 'right top',\n  left: 'right center',\n  'left-top': 'right top',\n  'left-bottom': 'right bottom',\n  'left-top-corner': 'right bottom',\n  'left-bottom-corner': 'right top'\n};\n\ntype RealPlacement =\n  | 'top'\n  | 'top-right'\n  | 'top-left'\n  | 'top-right-corner'\n  | 'top-left-corner'\n  | 'right'\n  | 'right-top'\n  | 'right-bottom'\n  | 'right-top-corner'\n  | 'right-bottom-corner'\n  | 'bottom'\n  | 'bottom-right'\n  | 'bottom-left'\n  | 'bottom-right-corner'\n  | 'bottom-left-corner'\n  | 'left'\n  | 'left-top'\n  | 'left-bottom'\n  | 'left-top-corner'\n  | 'left-bottom-corner';\n\nconst logicalSide = (\n  placement: Placement | undefined,\n  direction: 'rtl' | 'ltr' | undefined\n): RealPlacement => {\n  if (placement == null || direction == null) return 'bottom';\n  const side = placement.split('-')[0] as RtlSide;\n  const alignment = placement.split('-')[1] as RtlSide;\n  const corner = placement.split('-')[2];\n  const physicalSide = normalizePosition(side, direction);\n  const placements: Array<RealPlacement> = [\n    'top',\n    'top-right',\n    'top-left',\n    'top-right-corner',\n    'top-left-corner',\n    'right',\n    'right-top',\n    'right-bottom',\n    'right-top-corner',\n    'right-bottom-corner',\n    'bottom',\n    'bottom-right',\n    'bottom-left',\n    'bottom-right-corner',\n    'bottom-left-corner',\n    'left',\n    'left-top',\n    'left-bottom',\n    'left-top-corner',\n    'left-bottom-corner'\n  ];\n  const newPlacement: RealPlacement = placements.filter(\n    (placement) =>\n      (alignment &&\n        corner &&\n        placement === `${physicalSide}-${normalizePosition(alignment, direction)}-${corner}`) ||\n      (alignment &&\n        !corner &&\n        placement === `${physicalSide}-${normalizePosition(alignment, direction)}`) ||\n      (!alignment && placement === `${physicalSide}`)\n  )[0];\n  if (!newPlacement) {\n    return 'bottom';\n  }\n\n  return newPlacement;\n};\n\nexport const getTransformOrigin = (\n  placement: Placement | undefined,\n  direction: 'rtl' | 'ltr' | undefined\n): string => {\n  const realPlacement = logicalSide(placement, direction);\n  return _ANIMATION_TRANSFORM_ORIGIN_RULES[realPlacement];\n};\n"],"names":["_ANIMATION_TRANSFORM_ORIGIN_RULES","top","right","bottom","left","placement","direction","realPlacement","side","split","alignment","corner","physicalSide","normalizePosition","newPlacement","filter","logicalSide"],"mappings":"0EAGA,MAAMA,EAAoC,CACxCC,IAAK,gBACL,YAAa,eACb,WAAY,cACZ,mBAAoB,cACpB,kBAAmB,eACnBC,MAAO,cACP,YAAa,WACb,eAAgB,cAChB,mBAAoB,cACpB,sBAAuB,WACvBC,OAAQ,aACR,eAAgB,YAChB,cAAe,WACf,sBAAuB,WACvB,qBAAsB,YACtBC,KAAM,eACN,WAAY,YACZ,cAAe,eACf,kBAAmB,eACnB,qBAAsB,kCAyEU,CAChCC,EACAC,KAEA,MAAMC,EApDY,EAClBF,EACAC,KAEA,GAAiB,MAAbD,GAAkC,MAAbC,EAAmB,MAAO,SACnD,MAAME,EAAOH,EAAUI,MAAM,KAAK,GAC5BC,EAAYL,EAAUI,MAAM,KAAK,GACjCE,EAASN,EAAUI,MAAM,KAAK,GAC9BG,EAAeC,EAAAA,kBAAkBL,EAAMF,GAuBvCQ,EAtBmC,CACvC,MACA,YACA,WACA,mBACA,kBACA,QACA,YACA,eACA,mBACA,sBACA,SACA,eACA,cACA,sBACA,qBACA,OACA,WACA,cACA,kBACA,sBAE6CC,QAC5CV,GACEK,GACCC,GACAN,IAAc,GAAGO,KAAgBC,EAAAA,kBAAkBH,EAAWJ,MAAcK,KAC7ED,IACEC,GACDN,IAAc,GAAGO,KAAgBC,EAAiBA,kBAACH,EAAWJ,OAC9DI,GAAaL,IAAc,GAAGO,MAClC,GACF,OAAKE,GACI,QAGU,EAOGE,CAAYX,EAAWC,GAC7C,OAAON,EAAkCO,EAAc"}