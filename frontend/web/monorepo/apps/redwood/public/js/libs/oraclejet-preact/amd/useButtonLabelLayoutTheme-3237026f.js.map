{"version":3,"file":"useButtonLabelLayoutTheme-3237026f.js","sources":["../../src/hooks/PRIVATE_useButtonLabelLayoutTheme/useButtonLabelLayoutTheme.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport {\n  ButtonLabelLayoutStyles,\n  ButtonLabelLayoutVariantOptions\n} from '../../UNSAFE_ButtonLabelLayout/themes/ButtonLabelLayoutStyles.css';\nimport { ButtonLabelLayoutRedwoodTheme } from '../../UNSAFE_ButtonLabelLayout/themes/redwood/ButtonLabelLayoutTheme';\nimport { ComponentProps, ComponentChildren } from 'preact';\nimport { ButtonLabelLayout, LayoutSizes } from '../../UNSAFE_ButtonLabelLayout/ButtonLabelLayout';\nimport { useComponentTheme } from '#hooks/UNSAFE_useComponentTheme';\n\nexport type LayoutInfo = {\n  startIconClasses: string;\n  endIconClasses: string;\n  labelClasses: string;\n  labelStyles: Record<string, string>;\n  suffixClasses: string;\n  containerClasses: string;\n  isShowIcons: boolean;\n  isShowText: boolean;\n  isOnlyIcon: boolean;\n  hasTextStartIcon: boolean;\n  hasTextEndIcon: boolean;\n  isTwoIcons: boolean;\n  isTwoIconsOnly: boolean;\n};\n\nexport type ButtonDisplay = 'icons' | 'label' | 'all';\n\nexport type ButtonLabelLayoutProps = {\n  /**\n   *The default slot is the button's text label. The oj-c-button element accepts plain text or DOM nodes as children for the default slot.\"\n   */\n  children?: ComponentChildren;\n\n  /**\n   * Display indicates whether the label, the icons, or all elements should be rendered by the button.\n   */\n  display?: ButtonDisplay;\n\n  /**\n   * The startIcon is the button's start icon.\n   */\n  startIcon?: ComponentChildren;\n\n  /**\n   * The endIcon is the button's end icon.\n   */\n  endIcon?: ComponentChildren;\n\n  /**\n   * Styling properties\n   */\n  styling?: ComponentProps<typeof ButtonLabelLayout>['styling'];\n\n  /**\n   * The size indicates how large the button is rendered.\n   */\n  size?: ComponentProps<typeof ButtonLabelLayout>['size'];\n\n  /**\n   *The suffix is appended to the text label, used for menu buttons.\n   */\n  suffix?: string;\n};\n\nexport function useButtonLabelLayoutTheme({\n  display,\n  styling,\n  size,\n  children,\n  startIcon,\n  endIcon,\n  suffix\n}: ButtonLabelLayoutProps): LayoutInfo {\n  const isShowIcons = display === 'all' || display === 'icons';\n  const isShowText = display === 'all' || display === 'label';\n  const isOnlyIcon = (startIcon && (display === 'icons' || !children) && !endIcon) as boolean;\n  const hasTextStartIcon = !isNullOrUndefined(startIcon) && display === 'all';\n  const hasTextEndIcon = !isNullOrUndefined(endIcon) && isShowIcons;\n  const isTwoIcons = !isNullOrUndefined(startIcon) && !isNullOrUndefined(endIcon);\n  const isTwoIconsOnly = isTwoIcons && display === 'icons';\n\n  const { classes: startIconClasses } = useComponentTheme<\n    ButtonLabelLayoutVariantOptions,\n    ButtonLabelLayoutStyles\n  >(ButtonLabelLayoutRedwoodTheme, {\n    target: 'startIcon',\n    size: styling == 'default' ? size : (('embedded' + size) as LayoutSizes),\n    onlyIcon: isOnlyIcon ? 'isOnlyIcon' : 'notOnlyIcon',\n    twoIconsOnly: isTwoIconsOnly ? 'isTwoIconsOnly' : 'notTwoIconsOnly'\n  });\n\n  const { classes: labelClasses, styles: labelStyles } = useComponentTheme<\n    ButtonLabelLayoutVariantOptions,\n    ButtonLabelLayoutStyles\n  >(ButtonLabelLayoutRedwoodTheme, {\n    target: 'label',\n    size: styling == 'embedded' ? (('embedded' + size) as LayoutSizes) : size,\n    fill: styling == 'fill' ? 'isFill' : 'notFill',\n    textEndIcon: hasTextEndIcon ? 'hasTextEndIcon' : 'notTextEndIcon',\n    textStartIcon: hasTextStartIcon ? 'hasTextStartIcon' : 'notTextStartIcon',\n    suffix: suffix ? 'hasSuffix' : 'notSuffix',\n    twoIcons: isTwoIcons ? 'hasTwoIcons' : 'notTwoIcons',\n    loading: 'notLoading'\n  });\n\n  const { classes: suffixClasses } = useComponentTheme<\n    ButtonLabelLayoutVariantOptions,\n    ButtonLabelLayoutStyles\n  >(ButtonLabelLayoutRedwoodTheme, {\n    target: 'suffix',\n    size: styling == 'default' ? size : (('embedded' + size) as LayoutSizes),\n    textStartIcon: hasTextStartIcon ? 'hasTextStartIcon' : 'notTextStartIcon',\n    twoIcons: isTwoIcons ? 'hasTwoIcons' : 'notTwoIcons'\n  });\n\n  const { classes: endIconClasses } = useComponentTheme<\n    ButtonLabelLayoutVariantOptions,\n    ButtonLabelLayoutStyles\n  >(ButtonLabelLayoutRedwoodTheme, {\n    target: 'endIcon',\n    textEndIcon: hasTextEndIcon ? 'hasTextEndIcon' : 'notTextEndIcon',\n    twoIcons: isTwoIcons ? 'hasTwoIcons' : 'notTwoIcons',\n    size: styling == 'default' ? size : (('embedded' + size) as LayoutSizes)\n  });\n\n  return {\n    startIconClasses,\n    endIconClasses,\n    labelClasses,\n    labelStyles,\n    suffixClasses,\n    containerClasses: labelStyles.container,\n    isShowIcons,\n    isShowText,\n    isOnlyIcon,\n    hasTextStartIcon,\n    hasTextEndIcon,\n    isTwoIcons,\n    isTwoIconsOnly\n  };\n}\n\nconst isNullOrUndefined = (\n  value: ComponentChildren | null | undefined\n): value is null | undefined => {\n  return value === null || value === undefined;\n};\n"],"names":["isNullOrUndefined","value","display","styling","size","children","startIcon","endIcon","suffix","isShowIcons","isShowText","isOnlyIcon","hasTextStartIcon","hasTextEndIcon","isTwoIcons","isTwoIconsOnly","classes","startIconClasses","useComponentTheme","ButtonLabelLayoutRedwoodTheme","target","onlyIcon","twoIconsOnly","labelClasses","styles","labelStyles","fill","textEndIcon","textStartIcon","twoIcons","loading","suffixClasses","endIconClasses","containerClasses","container"],"mappings":"mJAsJA,MAAMA,EACJC,GAEOA,8CAjFiCC,QACxCA,EAAOC,QACPA,EAAOC,KACPA,EAAIC,SACJA,EAAQC,UACRA,EAASC,QACTA,EAAOC,OACPA,IAEA,MAAMC,EAA0B,QAAZP,GAAiC,UAAZA,EACnCQ,EAAyB,QAAZR,GAAiC,UAAZA,EAClCS,EAAcL,IAA0B,UAAZJ,IAAwBG,KAAcE,EAClEK,GAAoBZ,EAAkBM,IAA0B,QAAZJ,EACpDW,GAAkBb,EAAkBO,IAAYE,EAChDK,GAAcd,EAAkBM,KAAeN,EAAkBO,GACjEQ,EAAiBD,GAA0B,UAAZZ,GAE7Bc,QAASC,GAAqBC,EAAAA,kBAGpCC,EAAAA,8BAA+B,CAC/BC,OAAQ,YACRhB,KAAiB,WAAXD,EAAuBC,EAAS,WAAaA,EACnDiB,SAAUV,EAAa,aAAe,cACtCW,aAAcP,EAAiB,iBAAmB,qBAG5CC,QAASO,EAAcC,OAAQC,GAAgBP,EAAiBA,kBAGtEC,gCAA+B,CAC/BC,OAAQ,QACRhB,KAAiB,YAAXD,EAA0B,WAAaC,EAAwBA,EACrEsB,KAAiB,QAAXvB,EAAoB,SAAW,UACrCwB,YAAad,EAAiB,iBAAmB,iBACjDe,cAAehB,EAAmB,mBAAqB,mBACvDJ,OAAQA,EAAS,YAAc,YAC/BqB,SAAUf,EAAa,cAAgB,cACvCgB,QAAS,gBAGHd,QAASe,GAAkBb,EAAAA,kBAGjCC,EAAAA,8BAA+B,CAC/BC,OAAQ,SACRhB,KAAiB,WAAXD,EAAuBC,EAAS,WAAaA,EACnDwB,cAAehB,EAAmB,mBAAqB,mBACvDiB,SAAUf,EAAa,cAAgB,iBAGjCE,QAASgB,GAAmBd,EAAAA,kBAGlCC,EAAAA,8BAA+B,CAC/BC,OAAQ,UACRO,YAAad,EAAiB,iBAAmB,iBACjDgB,SAAUf,EAAa,cAAgB,cACvCV,KAAiB,WAAXD,EAAuBC,EAAS,WAAaA,IAGrD,MAAO,CACLa,mBACAe,iBACAT,eACAE,cACAM,gBACAE,iBAAkBR,EAAYS,UAC9BzB,cACAC,aACAC,aACAC,mBACAC,iBACAC,aACAC,iBAEJ"}