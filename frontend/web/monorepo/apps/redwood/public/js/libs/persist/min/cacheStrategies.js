/**
 * Copyright (c) 2017, Oracle and/or its affiliates.
 * All rights reserved.
 */

define(["./persistenceManager","./persistenceUtils","./impl/logger"],(function(e,t,n){"use strict";function r(e,t){var n=e.get("Cache-Control");if(n){var r,a,i,s=n.split(",");for(r=0;r<s.length;r++)if(0===(a=s[r].trim()).indexOf(t))return!((i=a.split("=")).length>1)||i[1].trim()}return null}function a(r,a,i){return t.isCachedResponse(a)?e.isOnline()?e.browserFetch(r).then((function(t){return 304==t.status?a:e.getCache().delete(r).then((function(){return n.log("Offline Persistence Toolkit cacheStrategies: Removing old entry based on HTTP revalidation"),t}))})):i?t.responseToJSON(a).then((function(e){return e.status=504,e.statusText="cache-control: must-revalidate failed due to application being offline",n.log("Offline Persistence Toolkit cacheStrategies: Returning Response status 504 based HTTP revalidation"),t.responseFromJSON(e)})):Promise.resolve(a):Promise.resolve(a)}return{getHttpCacheHeaderStrategy:function(){return function(i,s){return function(e,r){var a=r.headers.get("Expires"),i=r.headers.get("x-oracle-jscpt-cache-expiration-date");!a||!t.isCachedResponse(r)||i&&0!=i.length||(r.headers.set("x-oracle-jscpt-cache-expiration-date",a),n.log("Offline Persistence Toolkit cacheStrategies: Set x-oracle-jscpt-cache-expiration-date header based on HTTP Expires header"))}(0,s),function(e,a){var i=r(a.headers,"max-age");if(null!=i&&t.isCachedResponse(a)){var s=e.headers.get("Date");s||(s=(new Date).toUTCString());var o=new Date(s).getTime(),c=new Date(o+1e3*i);a.headers.set("x-oracle-jscpt-cache-expiration-date",c.toUTCString()),n.log("Offline Persistence Toolkit cacheStrategies: Set x-oracle-jscpt-cache-expiration-date header based on HTTP max-age header")}}(i,s),function(r,i){var s=r.headers.get("If-Match"),o=r.headers.get("If-None-Match");if(s||o){if(e.isOnline())return a(r,i,!1);var c=i.headers.get("ETag");if(s&&c.indexOf(s)<0)return t.responseToJSON(i).then((function(e){return e.status=412,e.statusText="If-Match failed due to no matching ETag while offline",n.log("Offline Persistence Toolkit cacheStrategies: Returning Response status 412 based on ETag and HTTP If-Match header"),t.responseFromJSON(e)}));if(o&&c.indexOf(o)>=0)return t.responseToJSON(i).then((function(e){return e.status=412,e.statusText="If-None-Match failed due to matching ETag while offline",n.log("Offline Persistence Toolkit cacheStrategies: Returning Response status 412 based on ETag and HTTP If-None-Match header"),t.responseFromJSON(e)}))}return Promise.resolve(i)}(i,s).then((function(e){return function(e,t){if(r(t.headers,"must-revalidate")){var i=t.headers.get("x-oracle-jscpt-cache-expiration-date");if(i){var s=new Date(i).getTime();if((new Date).getTime()>s)return n.log("Offline Persistence Toolkit cacheStrategies: Handling revalidation HTTP must-revalidate header"),a(e,t,!0)}}return Promise.resolve(t)}(i,e)})).then((function(e){return function(e,t){return function(e,t){if(r(t.headers,"no-cache"))return n.log("Offline Persistence Toolkit cacheStrategies: Has HTTP no-cache header"),!0;var a=e.headers.get("Pragma"),i=a&&"no-cache"===a.trim();return i&&n.log("Offline Persistence Toolkit cacheStrategies: Has HTTP Pragma no-cache header"),i}(e,t)?a(e,t):Promise.resolve(t)}(i,e)})).then((function(a){return function(a,i){return null!=r(i.headers,"no-store")?(t.isCachedResponse(i)&&i.headers.delete("x-oracle-jscpt-cache-expiration-date"),n.log("Offline Persistence Toolkit cacheStrategies: Has HTTP no-store header"),Promise.resolve(i)):function(r,a){if(null==a||t.isCachedResponse(a)||"GET"!=r.method&&"HEAD"!=r.method)return Promise.resolve(a);var i=a.clone();return e.getCache().put(r,a).then((function(){return n.log("Offline Persistence Toolkit cacheStrategies: Cached Request/Response"),i}))}(a,i)}(i,a)}))}}}}));