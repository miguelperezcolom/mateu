{"version":3,"file":"useFormFieldContextProps-08e673cf.js","sources":["../../src/hooks/UNSAFE_useFormFieldContextProps/useFormFieldContextProps.ts"],"sourcesContent":["import { useMemo } from 'preact/hooks';\nimport { FormFieldContextProps } from '../UNSAFE_useFormFieldContext';\n\ntype UseTextFieldProps = {\n  hasTruncatedLabel?: boolean;\n  hasValue?: boolean;\n  isDisabled?: boolean;\n  isFocused?: boolean;\n  isInputFocused?: boolean;\n  isLoading?: boolean;\n  isReadonly?: boolean;\n};\n\n/**\n * A custom hook to determine props to set FormFieldContext\n */\nexport function useFormFieldContextProps({\n  hasTruncatedLabel,\n  hasValue,\n  isDisabled,\n  isFocused,\n  isInputFocused,\n  isLoading,\n  isReadonly\n}: UseTextFieldProps) {\n  return useMemo<FormFieldContextProps>(() => {\n    return isReadonly\n      ? {\n          hasTruncatedLabel,\n          hasValue,\n          isFocused,\n          isInputFocused,\n          isLoading,\n          isReadonly: true\n        }\n      : isDisabled\n      ? {\n          hasTruncatedLabel: false,\n          hasValue,\n          isDisabled: true,\n          isLoading\n        }\n      : {\n          hasTruncatedLabel,\n          hasValue,\n          isFocused,\n          isInputFocused,\n          isLoading\n        };\n  }, [hasTruncatedLabel, hasValue, isDisabled, isFocused, isInputFocused, isLoading, isReadonly]);\n}\n"],"names":["hasTruncatedLabel","hasValue","isDisabled","isFocused","isInputFocused","isLoading","isReadonly","useMemo"],"mappings":"mGAgByCA,kBACvCA,EAAiBC,SACjBA,EAAQC,WACRA,EAAUC,UACVA,EAASC,eACTA,EAAcC,UACdA,EAASC,WACTA,IAEA,OAAOC,EAAOA,SAAwB,IAC7BD,EACH,CACEN,oBACAC,WACAE,YACAC,iBACAC,YACAC,YAAY,GAEdJ,EACA,CACEF,mBAAmB,EACnBC,WACAC,YAAY,EACZG,aAEF,CACEL,oBACAC,WACAE,YACAC,iBACAC,cAEL,CAACL,EAAmBC,EAAUC,EAAYC,EAAWC,EAAgBC,EAAWC,GACrF"}