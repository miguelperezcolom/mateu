{"version":3,"file":"usePropertyValue-894e2112.js","sources":["../../../../node_modules/ramda/es/curry.js","../../src/hooks/PRIVATE_usePropertyValue/usePropertyValue.ts"],"sourcesContent":["import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * Please note that default parameters don't count towards a [function arity](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length)\n * and therefore `curry` won't work well with those.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n *\n *      // R.curry not working well with default parameters\n *      const h = R.curry((a, b, c = 2) => a + b + c);\n *      h(1)(2)(7); //=> Error! (`3` is not a function!)\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { RefCallback } from 'preact';\nimport { useCallback, useState } from 'preact/hooks';\nimport { curry } from 'ramda';\n\n/**\n * Curried function that returns a string containing the value of a specified CSS property.\n * @param el The Element for which to get the computed style.\n * @param prop A string representing the property name (in hyphen case) to be checked.\n * @returns A string containing the value of the property. If not set, returns the empty string.\n */\nconst getCssPropValue = curry((el: Element, prop: string) =>\n  getComputedStyle(el).getPropertyValue(prop)\n);\n\n/**\n * Hook for reading CSS property values.\n * @returns A tuple with a reference that can be attached to a DOM element and a function that\n * returns a string containing a specified CSS property.\n */\nconst usePropertyValue = () => {\n  const initValue = (_: string) => '';\n  const [getPropertyValue, setPropertyValue] = useState<(s: string) => string>(\n    () => (_: string) => ''\n  );\n\n  const setRef = useCallback((node: null | HTMLElement) => {\n    setPropertyValue(node !== null ? () => getCssPropValue(node) : () => initValue);\n  }, []) as RefCallback<HTMLElement>;\n\n  return [setRef, getPropertyValue] as [\n    RefCallback<HTMLElement>,\n    CSSStyleDeclaration['getPropertyValue']\n  ];\n};\n\nexport { usePropertyValue };\n"],"names":["curry$1","_curry1","fn","curryN","length","getCssPropValue","curry","el","prop","getComputedStyle","getPropertyValue","initValue","_","setPropertyValue","useState","useCallback","node"],"mappings":"2GAkDA,IAMAA,EAJAC,EAAAA,SAAQ,SAAeC,GACrB,OAAOC,SAAOD,EAAGE,OAAQF,EAC3B,ICrCA,MAAMG,EAAkBC,GAAM,CAACC,EAAaC,IAC1CC,iBAAiBF,GAAIG,iBAAiBF,kCAQf,KACvB,MAAMG,EAAaC,GAAc,IAC1BF,EAAkBG,GAAoBC,EAAQA,UACnD,IAAOF,GAAc,KAOvB,MAAO,CAJQG,eAAaC,IAC1BH,EAA0B,OAATG,EAAgB,IAAMX,EAAgBW,GAAQ,IAAML,EAAU,GAC9E,IAEaD,EAGf"}