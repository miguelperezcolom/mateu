{"version":3,"file":"contextMenuUtils.js","sourceRoot":"","sources":["contextMenuUtils.ts"],"names":[],"mappings":"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","sourcesContent":["//TODO: JET-71076 -> With this we move this to a general place each wd test adapter could use\n\nimport { By, WebElement } from 'selenium-webdriver';\n\ntype DoContextMenuAction<\n  T =\n    | { label: string | string[]; key?: never; itemValue?: never }\n    | { key: string | string[]; itemValue?: string; label?: never }\n> = (path: T, webElement: WebElement, parentWebElement: WebElement) => Promise<void>;\n\n//TODO: Once it's possible to use preact test adapters here will remove this\n/**\n * doContextMenuAction - Triggers contextmenu and click a menu item\n * @param path Path that consist of the label/key of the menu item and the label/key of the submenu that leads to the menu item.\n * @param webElement WebElement that represents the element where the context click is done.\n * @param parentWebElement The component WebElement where the context menu config is set.\n * @returns Promise<void>\n */\nexport const doContextMenuAction: DoContextMenuAction<\n  { label: string | string[]; key?: never } | { key: string | string[]; label?: never }\n> = async (path, webElement, parentWebElement): Promise<void> => {\n  return doContextMenuActionClick(path, webElement, parentWebElement);\n};\n\n/**\n * doContextMenuGroupAction - Triggers contextmenu and click a menu item\n * @param path Path that consist of the label/key of the menu item and the label/key of the submenu that leads to the menu item. If key is specified it also include item value of the select menu item that is going to be clicked.\n * @param webElement WebElement that represents the element where the context click is done.\n * @param parentWebElement The component WebElement where the context menu config is set.\n * @returns Promise<void>\n */\nexport const doContextMenuGroupAction: DoContextMenuAction = async (\n  path,\n  webElement,\n  parentWebElement\n): Promise<void> => {\n  return doContextMenuActionClick(path, webElement, parentWebElement);\n};\n\n/**\n * doContextMenuActionClick - Coordinates clicking of menu item based on path type.\n */\nconst doContextMenuActionClick: DoContextMenuAction = async (\n  path,\n  webElement,\n  parentWebElement\n) => {\n  // Perform the context menu gesture to open the menu\n  await parentWebElement.getDriver().actions().contextClick(webElement).perform();\n\n  const pathIdentifier = path.label ? 'label' : 'key';\n  const specificPath = path[pathIdentifier] as string | string[];\n  // We convert path into an array so we handle it in one way for strings and arrays\n  const arraySpecificPath = Array.isArray(specificPath) ? specificPath : [specificPath];\n  for (const [index, identifier] of Object.entries(arraySpecificPath)) {\n    // Have to check if there are no pending menu animations so we can click\n    await parentWebElement.getDriver().wait(async () => {\n      const animatedDropdowns = await parentWebElement\n        .getDriver()\n        .findElements(By.css(`[data-oj-layer]:has([role=menu]) [oj-animation-pending=true]`));\n      return !animatedDropdowns.length;\n    });\n\n    const indexNumber = Number(index);\n    const menuSearchElement = (await getMenuElements(parentWebElement))[indexNumber];\n\n    if (path.itemValue && indexNumber === arraySpecificPath.length - 1) {\n      await clickSelectMenuItemByKey(identifier, menuSearchElement, path.itemValue);\n    } else {\n      await clickActionMenuItem(\n        { [pathIdentifier]: identifier } as { label: string } | { key: string },\n        menuSearchElement\n      );\n    }\n  }\n};\n\n/**\n * getMenuElements - Returns list of menus available.\n */\nconst getMenuElements = async (webElement: WebElement) => {\n  return webElement.getDriver().findElements(By.css(`[data-oj-layer] [role=menu]`));\n};\n\n/**\n * clickActionMenuItem - Click menu item by label or key\n */\nconst clickActionMenuItem = async (\n  path: { label: string; key?: never } | { key: string; label?: never },\n  searchElement: WebElement\n) => {\n  const pathType = path.label ? 'label' : 'key';\n  return clickingMenuItem(\n    `a[data-oj-${pathType}=${JSON.stringify(path[pathType])}]`,\n    searchElement,\n    `The ${pathType} ${path[pathType]} is invalid or does not exist`\n  );\n};\n\n/**\n * clickSelectMenuItemByKey - Click a select menu item by group key and value inside an specific menu container. It includes clicking on SelectMenuItem\n */\nconst clickSelectMenuItemByKey = async (\n  groupKey: string,\n  searchElement: WebElement,\n  itemValue: string\n) => {\n  return clickingMenuItem(\n    `a[data-oj-key=${groupKey}-${itemValue}]`,\n    searchElement,\n    `The group key ${groupKey} or itemValue ${itemValue} is invalid or does not exist`\n  );\n};\n\n/**\n * clickingMenuItem - Click menu item based on a query. It also handle errors.\n */\nconst clickingMenuItem = async (query: string, searchElement: WebElement, errMessage: string) => {\n  try {\n    const item = await searchElement.findElement(By.css(query));\n    return item?.click();\n  } catch {\n    throw new Error(errMessage);\n  }\n};\n"]}