{"version":3,"file":"render-88108768.js","sources":["../../src/__tests__/utils/render.tsx"],"sourcesContent":["import { RenderOptions, RenderResult, render } from '@testing-library/preact';\nimport userEvent from '@testing-library/user-event';\nimport { ComponentProps } from 'preact';\nimport { RootEnvironment, RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport translations from '../../resources/nls/en/bundle';\n\ntype RootEnvironmentProviderProps = ComponentProps<typeof RootEnvironmentProvider>;\n\nconst defaultEnvironment: Partial<RootEnvironment> = {\n  translations: { '@oracle/oraclejet-preact': translations },\n  mode: 'test'\n};\n\nexport const renderInEnv = (\n  children: RootEnvironmentProviderProps['children'],\n  environment = defaultEnvironment,\n  options?: Omit<RenderOptions, 'queries'>\n) => {\n  // We merge the provided environment with the default environment here. This way tests\n  // can override some part of the environment without having to provide the other parts.\n  // For example, if a test wants to provide `user.locale`, then it can do:\n  //\n  // renderInEnv(<SomeComponent />, { user: { locale: 'en-US' } });\n  //\n  // With this call, the test do not have to provide `translations` and `mode`. The provided\n  // `user` object will be merged with the default environment. The final environment object\n  // will have `translations`, `mode`, and `user` properties specified in it.\n  const mergedEnvironment = { ...defaultEnvironment, ...environment };\n\n  const { rerender: _rerender, ...result } = render(\n    <RootEnvironmentProvider environment={mergedEnvironment}>{children}</RootEnvironmentProvider>,\n    options\n  );\n  const rerender = (children: RootEnvironmentProviderProps['children']) =>\n    _rerender(\n      <RootEnvironmentProvider environment={mergedEnvironment}>{children}</RootEnvironmentProvider>\n    );\n  return { rerender, ...result } as RenderResult;\n};\n\nexport const renderAndSetupInEnv = (...args: Parameters<typeof renderInEnv>) => ({\n  user: userEvent.setup(),\n  ...renderInEnv(...args)\n});\n"],"names":["defaultEnvironment","translations","mode","renderInEnv","children","environment","options","mergedEnvironment","rerender","_rerender","result","render","_jsx","RootEnvironmentProvider","args","user","userEvent","setup"],"mappings":"6SAQA,MAAMA,EAA+C,CACnDC,aAAc,CAAE,2BAA4BA,WAC5CC,KAAM,QAGKC,EAAc,CACzBC,EACAC,EAAcL,EACdM,KAWA,MAAMC,EAAoB,IAAKP,KAAuBK,IAE9CG,SAAUC,KAAcC,GAAWC,EAAMA,OAC/CC,MAACC,EAAuBA,wBAAA,CAACR,YAAaE,EAAiBH,SAAGA,IAC1DE,GAMF,MAAO,CAAEE,SAJSJ,GAChBK,EACEG,EAAAA,IAACC,EAAAA,wBAAuB,CAACR,YAAaE,WAAoBH,QAExCM,EAAwB,wBAGb,IAAII,KAA0C,CAC/EC,KAAMC,EAAS,QAACC,WACbd,KAAeW"}