{"version":3,"file":"useLegendDnd-daee983e.js","sources":["../../src/hooks/PRIVATE_useLegendDnD/dndLegendUtils.tsx","../../src/utils/PRIVATE_legendUtils/legendUtils.ts","../../src/hooks/PRIVATE_useLegendDnD/useLegendDnd.ts"],"sourcesContent":["import { DragImageProps } from '#hooks/PRIVATE_useVisDnd';\n\nexport function getDragImage<W>({ event, target }: DragImageProps<W>) {\n  const container = document.createElement('div');\n  const { width, height, x, y } = target.getBoundingClientRect();\n  const clone = target!.cloneNode(true);\n  container.appendChild(clone);\n  const styles = window.getComputedStyle(target.parentElement!);\n  container.style.fontSize = styles.getPropertyValue('font-size');\n  container.style.fontFamily = styles.getPropertyValue('font-family');\n  container.style.textAnchor = styles.getPropertyValue('text-anchor');\n  container.style.dominantBaseline = styles.getPropertyValue('dominant-baseline');\n  return {\n    image: container,\n    offSetX: event.clientX - x,\n    offSetY: event.clientY - y,\n    width,\n    height\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { JSX } from 'preact';\nimport type { UnpackSignals } from '@oracle/oraclejet-internal-utilities/attributeUtils';\nimport { LayoutInfo } from '../../UNSAFE_Legend/getLegendLayout';\nimport { dvtVars } from '@oracle/oraclejet-internal-theme-contract/themeContract.css';\nimport { xUnits } from '../../UNSAFE_Theme/utils';\nimport { Font } from '../../hooks/PRIVATE_useTextDimensions';\nimport { styles } from '../../PRIVATE_BaseLegend/themes/LegendStyles.css';\nimport { ItemInfo, LegendItemData, LegendSectionData } from '../UNSAFE_visTypes/legend';\nimport { cancelEvent } from '../../utils/UNSAFE_visUtils/eventsUtils';\n\n/**\n * Returns the value of the data-oj-private-item-index attribute for a given element.\n * @param element The HTML element.\n * @returns\n */\nexport const getItemInfo = (element: HTMLElement) => {\n  const item = element.dataset['ojPrivateItem'];\n  const section = element.dataset['ojPrivateSection'];\n\n  if (item == null || section == null) {\n    return;\n  }\n  return {\n    itemIdx: Number(item),\n    sectionIdx: Number(section)\n  };\n};\n\n/**\n * Checks if the item is highlighted.\n * @param id Id of the item\n * @param highlighted The set of highlighted item\n */\nexport function isItemHighlighted<K>(id: K, highlighted?: K[]) {\n  if (!highlighted) {\n    return;\n  }\n  if (highlighted.length === 0) {\n    return true;\n  }\n  return new Set(highlighted).has(id);\n}\n\n/**\n * Checks if the item is hidden.\n * @param id Id of the item.\n * @param hiddenIds The set of hidden items.\n * @returns\n */\nexport function isItemHidden<K>(id: K, hiddenIds?: K[]) {\n  if (!hiddenIds) {\n    return;\n  }\n  return new Set(hiddenIds).has(id);\n}\n/**\n * Checks if the item is the currentItem and if the focus ring\n * is visible.\n * @param itemInfo ItemInfo\n * @param itemIdx Item index\n * @param sectionIdx Section index\n */\nexport const hasFocusRing = (itemInfo: ItemInfo, itemIdx: number, sectionIdx?: number) => {\n  if (!itemInfo.isFocusVisible) return false;\n  const { itemIdx: item, sectionIdx: section } = itemInfo;\n\n  if (sectionIdx == null) {\n    return item === itemIdx;\n  }\n  return item === itemIdx && section === sectionIdx;\n};\n\n/**\n * Returns the text for the legend datatip.\n * @param items The legend items data.\n * @param itemInfoRef The item currently hovered.\n * @param currentItem The item that is currently keyboard focused.\n */\nexport function getDatatipText<K, D extends LegendItemData<K>>(\n  items: LegendItemData<K>[] | LegendSectionData<K, D>[],\n  getItem: (\n    itemInfo: ItemInfo,\n    items: LegendItemData<K>[] | LegendSectionData<K, D>[]\n  ) => LegendItemData<K> | undefined,\n  focusedItem: ItemInfo,\n  hoveredItem?: ItemInfo\n) {\n  const isPointerActive = hoveredItem?.isCurrent;\n\n  if (isPointerActive && hoveredItem.itemIdx != null) {\n    return getItem(hoveredItem, items)?.datatip;\n  }\n  if (focusedItem && focusedItem.isCurrent) {\n    return getItem(focusedItem, items)?.datatip;\n  }\n  return;\n}\n\n/**\n * Returns the aria properties for the legend.\n * @param isReadOnly { boolean } If the legend is readonly.\n * @param ariaLabel { string } The aria-label set by the app.\n * @returns The aria props.\n */\nexport function getAriaProps<K>(\n  isReadOnly?: boolean,\n  ariaLabel?: string,\n  hiddenIds?: K[],\n  ariaDescribedBy?: string,\n  ariaLabelledBy?: string\n): {\n  'aria-label'?: UnpackSignals<JSX.AriaAttributes>['aria-label'];\n  'aria-disabled'?: UnpackSignals<JSX.AriaAttributes>['aria-disabled'];\n  'aria-describedby': UnpackSignals<JSX.AriaAttributes>['aria-describedby'];\n  'aria-labelledby': UnpackSignals<JSX.AriaAttributes>['aria-labelledby'];\n  role?: UnpackSignals<JSX.HTMLAttributes['role']>;\n} {\n  const hideAndShow = hiddenIds && !isReadOnly;\n  return {\n    'aria-label': ariaLabel,\n    'aria-disabled': isReadOnly,\n    role: hideAndShow ? 'menu' : 'application',\n    'aria-describedby': ariaDescribedBy,\n    'aria-labelledby': ariaLabelledBy\n  };\n}\n\n/**\n * Returns the item props for BaseLegendItem.\n * @param item The legend item.\n * @param itemIdx The item index of the item.\n * @param sectionIdx The section index of section of the item.\n * @param focusedItem The info of currently focused item.\n * @param isReadOnly Whether the legend is readonly.\n * @param hoveredItem The info of the currently hovered item.\n * @param hiddenIds The hidden ids.\n * @param highlightedIds The highlighted ids.\n */\nexport function getItemProps<K>(\n  item: LegendItemData<K>,\n  itemIdx: number,\n  sectionIdx: number | undefined,\n  focusedItem: ItemInfo,\n  isReadOnly?: boolean,\n  hoveredItem?: ItemInfo,\n  hiddenIds?: K[],\n  highlightedIds?: K[]\n) {\n  let isCurrent = false;\n  if (!isReadOnly) {\n    const isFocusedItem = itemIdx === focusedItem.itemIdx && sectionIdx === focusedItem.sectionIdx;\n    const isHoveredItem =\n      itemIdx === hoveredItem?.itemIdx && sectionIdx === hoveredItem?.sectionIdx;\n    isCurrent = !!(\n      (isFocusedItem && focusedItem.isCurrent) ||\n      (isHoveredItem && hoveredItem?.isCurrent)\n    );\n  }\n\n  return {\n    isCurrent,\n    isHighlighted: isItemHighlighted<K>(item.id, highlightedIds),\n    isHidden: isItemHidden(item.id, hiddenIds),\n    isFocused: hasFocusRing(focusedItem, itemIdx, sectionIdx),\n    key: item.id,\n    ...item\n  };\n}\n\n/**\n * Compares if two ItemInfo are equal\n * @param item1\n * @param item2\n * @returns\n */\nexport const isEqualItem = (item1?: ItemInfo, item2?: ItemInfo) => {\n  return item1?.itemIdx === item2?.itemIdx && item1?.sectionIdx === item2?.sectionIdx;\n};\n\n/**\n * Returns the num of cols and rows for the legend.\n */\nexport const getGridNums = (\n  numItems: number,\n  layoutInfo?: LayoutInfo,\n  orientation?: 'vertical' | 'horizontal'\n) => {\n  let itemsPerRow;\n  let itemsPerCol;\n\n  if (orientation === 'vertical') {\n    itemsPerRow = 1;\n    itemsPerCol = numItems;\n  }\n\n  if (layoutInfo?.isWrapped) {\n    itemsPerRow = layoutInfo.itemsPerRow;\n    itemsPerCol = Math.ceil(numItems / itemsPerRow);\n    itemsPerRow = Math.ceil(numItems / itemsPerCol);\n  }\n\n  return { itemsPerRow, itemsPerCol };\n};\n\n/**\n * Returns the num of cols and rows for the sectional legend.\n */\nexport const getSectionGridNums = (numItems: number, legendItemsPerRow?: number) => {\n  let itemsPerRow;\n  let itemsPerCol;\n\n  if (legendItemsPerRow) {\n    itemsPerRow = legendItemsPerRow;\n    itemsPerCol = Math.ceil(numItems / itemsPerRow);\n    itemsPerRow = Math.ceil(numItems / itemsPerCol);\n  }\n\n  return { itemsPerRow, itemsPerCol };\n};\n\n/**\n * Returns the grid row and column for given item.\n * @param noOfItems The number of items in the section.\n * @param index The index of the item.\n * @param itemsPerRow The num of items per row in the grid.\n * @param itemsPerCol The num of items per col in the grid.\n * @returns\n */\nexport function getGridCellIndices(\n  noOfItems: number,\n  index: number,\n  itemsPerRow?: number,\n  itemsPerCol?: number\n) {\n  let gridRow;\n  let gridCol;\n\n  if (itemsPerRow && itemsPerCol && noOfItems > itemsPerRow) {\n    gridRow = (index % itemsPerCol) + 1;\n    gridCol = Math.floor(index / itemsPerCol) + 1;\n  }\n  return { gridRow, gridCol };\n}\n\n/**\n * Returns the resolved values for the legend vars.\n */\n\nexport const legendVars = [\n  {\n    tokenVar: xUnits(1),\n    key: 'unit',\n    cssProp: 'padding'\n  },\n  {\n    tokenVar: dvtVars.label.sm.fontSize,\n    key: 'fontSize',\n    cssProp: 'font-size'\n  }\n];\n\n/**\n * Returns the resolved values for the legend vars.\n */\nexport function getLegendTextStyle(props: Font, resolvedVars: Record<string, any>) {\n  return {\n    fontStyle: props.fontStyle,\n    fontSize: (resolvedVars['fontSize'] ?? props.fontSize) as string | undefined,\n    fontWeight: props.fontWeight,\n    fontFamily: props.fontFamily\n  };\n}\n\n/**\n * Returns the style for current legend item.\n */\nexport function getLegendCurrentItemStyle(\n  isCurrent: boolean,\n  isHighlighted: boolean | undefined,\n  hideAndShowBehavior: 'on' | 'off',\n  hoverBehavior: 'dim' | 'none',\n  isHidden: boolean | undefined,\n  actionable: 'inherit' | 'off'\n) {\n  if (isCurrent) {\n    if (isHighlighted == null && isHidden == null && actionable !== 'off')\n      return styles.legendItemIsCurrentWithCursor;\n    else if (isHighlighted == null && hideAndShowBehavior === 'on' && actionable !== 'off')\n      return styles.legendItemIsCurrentWithCursor;\n    else if (isHidden == null && hoverBehavior === 'dim' && actionable !== 'off')\n      return styles.legendItemIsCurrentWithoutCursor;\n  }\n  return '';\n}\n\nexport function getIsLegendItemActionable(\n  legendData: any[],\n  isReadOnly: boolean,\n  isSectional?: boolean\n) {\n  return (itemInfo: ItemInfo) => {\n    let item;\n    if (isSectional && itemInfo.sectionIdx != null) {\n      item = legendData[itemInfo.sectionIdx].items[itemInfo.itemIdx];\n    } else {\n      item = legendData[itemInfo.itemIdx];\n    }\n    return !isReadOnly && item?.actionable !== 'off';\n  };\n}\n/*\n * Returns KeyUp handler for legend.\n * @param triggerOnAction\n * @param updatefocusedItemInfo\n * @param focusedItemInfo\n * @returns\n */\nexport function getKeyUpHandler(\n  triggerOnAction: () => void,\n  updatefocusedItemInfo: (itemInfo: ItemInfo) => void,\n  focusedItemInfo: ItemInfo,\n  isHideShow?: boolean\n) {\n  return (event: KeyboardEvent) => {\n    const key = event.code;\n    switch (key) {\n      case 'Space': {\n        if (isHideShow) {\n          triggerOnAction();\n          cancelEvent(event);\n        }\n        break;\n      }\n      case 'Enter': {\n        triggerOnAction();\n        cancelEvent(event);\n        break;\n      }\n      case 'Home': {\n        updatefocusedItemInfo({\n          itemIdx: 0,\n          sectionIdx: 0,\n          isFocusVisible: true,\n          isCurrent: true\n        });\n        cancelEvent(event);\n        break;\n      }\n      case 'End': {\n        updatefocusedItemInfo({\n          itemIdx: -1,\n          sectionIdx: -1,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n        cancelEvent(event);\n        break;\n      }\n      case 'Tab': {\n        updatefocusedItemInfo({\n          ...focusedItemInfo,\n          isCurrent: true,\n          isFocusVisible: true\n        });\n        cancelEvent(event);\n        break;\n      }\n    }\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { getDragImage } from './dndLegendUtils';\nimport { useDnd } from '#hooks/PRIVATE_useVisDnd';\nimport { getItemInfo } from '#utils/PRIVATE_legendUtils/legendUtils';\nimport { LegendDndProps, DropDetail, LegendSectionData } from '#utils/UNSAFE_visTypes/legend';\nimport { LegendDragStartDetail } from '#UNSAFE_Legend/legend.type';\nimport { SectionalLegendDragStartDetail } from '#UNSAFE_SectionalLegend/sectionalLegend.type';\nimport { Dispatch, StateUpdater } from 'preact/hooks';\n\ntype Props<D, S, W> = {\n  items?: D[];\n  sections?: S[];\n  setDragOver: Dispatch<StateUpdater<boolean | undefined>>;\n  setDatatipDisabled: Dispatch<StateUpdater<boolean>>;\n} & LegendDndProps<W, D>;\n\nexport const useLegendDnd = <\n  K,\n  D,\n  W extends SectionalLegendDragStartDetail<D> | LegendDragStartDetail<D> | undefined,\n  S extends LegendSectionData<K, D> | void = void\n>({\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  onDragEnter,\n  onDragLeave,\n  onDragOver,\n  onDrop,\n  items,\n  sections,\n  itemDraggable,\n  setDragOver,\n  setDatatipDisabled\n}: Props<D, S, W>) => {\n  const draggable = itemDraggable !== undefined;\n\n  const getDragContext = function (target: HTMLElement, event: DragEvent): W {\n    //We search for the key using the target of the event\n    const itemIdx = getItemInfo(target as HTMLElement)?.itemIdx;\n    let sectionIdx;\n    if (sections) {\n      sectionIdx = getItemInfo(target as HTMLElement)?.sectionIdx;\n    }\n    let data;\n    if (items) {\n      data = itemIdx !== undefined ? items[itemIdx] : null;\n      if (itemDraggable && data && itemDraggable(data)) {\n        return {\n          type: 'item',\n          data: data,\n          event\n        } as W;\n      }\n    } else {\n      data =\n        sectionIdx !== undefined && itemIdx !== undefined\n          ? sections![sectionIdx]?.items[itemIdx]\n          : null;\n      if (itemDraggable && data && itemDraggable(data)) {\n        return {\n          type: 'item',\n          data: data,\n          event,\n          itemIndexPath: [sectionIdx, itemIdx]\n        } as W;\n      }\n    }\n    return undefined as W;\n  };\n  const getDropContext = function (event: DragEvent) {\n    return { type: 'background', event } as DropDetail;\n  };\n\n  const showDropEffect = function () {\n    setDragOver(true);\n  };\n\n  const showRejectedDropEffect = function () {\n    setDragOver(false);\n  };\n\n  const clearDropEffect = function () {\n    setDragOver(undefined);\n  };\n\n  const { dragProps, dropProps, content } = useDnd<W, DropDetail>({\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    onDragEnter,\n    onDragLeave,\n    onDragOver,\n    onDrop,\n    getDragContext,\n    getDropContext,\n    getDragImage,\n    setDatatipDisabled,\n    showDropEffect,\n    showRejectedDropEffect,\n    clearDropEffect\n  });\n\n  return {\n    draggable: draggable,\n    dndProps: draggable ? { ...dragProps, ...dropProps } : dropProps,\n    dndContent: content\n  };\n};\n"],"names":["getDragImage","event","target","container","document","createElement","width","height","x","y","getBoundingClientRect","clone","cloneNode","appendChild","styles","window","getComputedStyle","parentElement","style","fontSize","getPropertyValue","fontFamily","textAnchor","dominantBaseline","image","offSetX","clientX","offSetY","clientY","getItemInfo","element","item","dataset","section","itemIdx","Number","sectionIdx","isItemHighlighted","id","highlighted","length","Set","has","isItemHidden","hiddenIds","hasFocusRing","itemInfo","isFocusVisible","legendVars","tokenVar","xUnits","key","cssProp","dvtVars","label","sm","isReadOnly","ariaLabel","ariaDescribedBy","ariaLabelledBy","role","items","getItem","focusedItem","hoveredItem","isPointerActive","isCurrent","datatip","noOfItems","index","itemsPerRow","itemsPerCol","gridRow","gridCol","Math","floor","numItems","layoutInfo","orientation","isWrapped","ceil","legendData","isSectional","actionable","highlightedIds","isFocusedItem","isHoveredItem","isHighlighted","isHidden","isFocused","triggerOnAction","updatefocusedItemInfo","focusedItemInfo","isHideShow","code","cancelEvent","hideAndShowBehavior","hoverBehavior","legendItemIsCurrentWithCursor","legendItemIsCurrentWithoutCursor","props","resolvedVars","fontStyle","fontWeight","legendItemsPerRow","item1","item2","onDragStart","onDrag","onDragEnd","onDragEnter","onDragLeave","onDragOver","onDrop","sections","itemDraggable","setDragOver","setDatatipDisabled","draggable","undefined","dragProps","dropProps","content","useDnd","getDragContext","data","type","itemIndexPath","getDropContext","showDropEffect","showRejectedDropEffect","clearDropEffect","dndProps","dndContent"],"mappings":"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"}