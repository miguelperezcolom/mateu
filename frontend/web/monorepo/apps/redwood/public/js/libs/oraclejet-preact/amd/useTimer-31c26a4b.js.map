{"version":3,"file":"useTimer-31c26a4b.js","sources":["../../src/hooks/UNSAFE_useTimer/useTimer.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\ntype Props = {\n  isStarted: boolean;\n  delay?: number;\n};\n\n/**\n * Hook for a timer.\n * @param isStarted Specifies whether the timer should be started: true to start it, false to stop\n * it.\n * @param delay Specifies the delay after which the timer should expire.\n * @returns True if the timer expires, false if it was stopped before that.\n *\n */\nexport function useTimer({ isStarted, delay = 0 }: Props): boolean {\n  const timeoutId = useRef<ReturnType<typeof setTimeout> | null>(null);\n  const [isExpired, setExpired] = useState(false);\n  useEffect(() => {\n    if (!isStarted) {\n      // if not started, clear the current timeout\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n        timeoutId.current = null;\n      }\n      setExpired(false);\n    } else {\n      // if started, only create a new timeout if we don't already have one\n      if (!timeoutId.current) {\n        timeoutId.current = setTimeout(() => {\n          setExpired(true);\n        }, delay);\n      }\n    }\n    return () => {\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n        timeoutId.current = null;\n      }\n    };\n  }, [isStarted, delay]);\n\n  return isExpired;\n}\n"],"names":["isStarted","delay","timeoutId","useRef","isExpired","setExpired","useState","useEffect","current","setTimeout","clearTimeout"],"mappings":"yEAuBM,UAAmBA,UAAEA,EAASC,MAAEA,EAAQ,IAC5C,MAAMC,EAAYC,SAA6C,OACxDC,EAAWC,GAAcC,EAAQA,UAAC,GAyBzC,OAxBAC,EAAAA,WAAU,KACHP,EASEE,EAAUM,UACbN,EAAUM,QAAUC,YAAW,KAC7BJ,GAAW,EAAK,GACfJ,KAVDC,EAAUM,UACZE,aAAaR,EAAUM,SACvBN,EAAUM,QAAU,MAEtBH,GAAW,IASN,KACDH,EAAUM,UACZE,aAAaR,EAAUM,SACvBN,EAAUM,QAAU,KACrB,IAEF,CAACR,EAAWC,IAERG,CACT"}