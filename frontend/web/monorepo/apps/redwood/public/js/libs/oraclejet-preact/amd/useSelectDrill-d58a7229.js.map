{"version":3,"file":"useSelectDrill-d58a7229.js","sources":["../../src/hooks/PRIVATE_useChartEvents/useDatatipAndCursor.ts","../../src/hooks/PRIVATE_useChartEvents/useSelectDrill.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\nimport { useChartDataCursor } from '#hooks/PRIVATE_useChartDataCursor';\nimport { useChartDatatip } from '#hooks/PRIVATE_useChartDatatip';\nimport { LineAreaItem } from '#UNSAFE_LineAreaChart/lineAreaChart.types';\nimport { ScatterItem } from '#UNSAFE_ScatterChart/scatterChart.types';\nimport { BarItemData } from '#UNSAFE_BarChart/barChart.types';\n\ntype DataCursorProps = Parameters<typeof useChartDataCursor>[0];\ntype DatatipProps<\n  K extends string | number,\n  D extends LineAreaItem<K> | ScatterItem<K> | BarItemData<K>\n> = Parameters<typeof useChartDatatip<K, D>>[0];\n\nexport function useChartDatatipAndCursor<\n  K extends string | number,\n  D extends LineAreaItem<K> | ScatterItem<K> | BarItemData<K>\n>({\n  series,\n  leafGroupsInfo,\n  width,\n  height,\n  findNearest,\n  getMarkerInfo,\n  onDataCursorPositionChange,\n  isDataCursorEnabled,\n  dataCursorPosition,\n  dataCursorStyle,\n  hoveredItemInfo,\n  focusedItemInfo,\n  getDataItem,\n  getDataItemPos,\n  datatip,\n  valueFormats,\n  isHoriz,\n  xScale,\n  yScale,\n  y2Scale,\n  plotAreaSpace,\n  timeAxisType,\n  touchResponse,\n  isDisabled,\n  defaultXFormatter,\n  defaultYFormatter,\n  defaultY2Formatter,\n  hasXYValues,\n  getGroupFromPath,\n  translations\n}: DataCursorProps & DatatipProps<K, D>) {\n  const { datatipContent, datatipProps } = useChartDatatip<K, D>({\n    series,\n    leafGroupsInfo,\n    width,\n    height,\n    isDataCursorEnabled,\n    dataCursorPosition,\n    hoveredItemInfo,\n    getDataItem,\n    getDataItemPos,\n    focusedItemInfo,\n    datatip,\n    valueFormats,\n    isHoriz,\n    xScale,\n    findNearest,\n    timeAxisType,\n    touchResponse,\n    isDisabled,\n    defaultXFormatter,\n    defaultYFormatter,\n    defaultY2Formatter,\n    hasXYValues,\n    translations,\n    getGroupFromPath\n  });\n\n  const { dataCursorContent, dataCursorProps } = useChartDataCursor({\n    touchResponse,\n    findNearest,\n    dataCursorPosition,\n    onDataCursorPositionChange,\n    isDataCursorEnabled,\n    dataCursorStyle,\n    isHoriz,\n    getMarkerInfo,\n    focusedItemInfo,\n    plotAreaSpace,\n    yScale,\n    y2Scale,\n    xScale,\n    getDataItemPos\n  });\n\n  return {\n    datatipContent,\n    dataCursorContent,\n    datatipProps: mergeProps(dataCursorProps, datatipProps)\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { getInfo } from '#utils/UNSAFE_visUtils';\nimport { useChartDrill } from '#hooks/PRIVATE_useChartDrill';\nimport { useSelection } from '#hooks/PRIVATE_useVisSelection/useSelection';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\nimport { BarItemData } from '#UNSAFE_BarChart/barChart.types';\nimport { LineAreaItem } from '#UNSAFE_LineAreaChart/lineAreaChart.types';\nimport { ScatterItem } from '#UNSAFE_ScatterChart/scatterChart.types';\n\ntype DrillProps<K, D extends LineAreaItem<K> | ScatterItem<K> | BarItemData<K>> = Parameters<\n  typeof useChartDrill<K, D>\n>[0];\n\ntype SelectionProps<K, D> = {\n  selection: K[];\n  onChange?: (detail: { ids: K[]; data: (D | undefined)[] }) => void;\n  getDataById: (id: K) => D | undefined;\n  ignoreAsTrigger?: (element: EventTarget | null) => boolean;\n};\n\nexport function useSelectDrill<K, D extends LineAreaItem<K> | ScatterItem<K> | BarItemData<K>>({\n  selectionMode,\n  selection,\n  onChange,\n  rootRef,\n  drilling,\n  onItemDrill,\n  onGroupDrill,\n  focusedGroupInfo,\n  focusedItemInfo,\n  levelsArray,\n  getDataItem,\n  getDataById,\n  ignoreAsTrigger\n}: DrillProps<K, D> & SelectionProps<K, D>) {\n  const idExtracter = (event: Event): K | undefined => {\n    const isItemFocused = focusedItemInfo.isCurrent;\n    const info =\n      isItemFocused && event.type === 'keyup'\n        ? focusedItemInfo\n        : getInfo(rootRef, event.target as HTMLElement);\n    return info && info.seriesIndex != null && info.groupIndex != null\n      ? getDataItem(\n          info.seriesIndex,\n          info.groupIndex,\n          levelsArray[levelsArray.length - 1][info.groupIndex].path\n        )?.id\n      : undefined;\n  };\n\n  const { selectionProps, selectionContent } = useSelection<K, D>({\n    idExtracter,\n    isDrillEnabled: drilling === 'on',\n    selection,\n    selectionMode,\n    onChange,\n    getDataById,\n    ignoreAsTrigger\n  });\n\n  const drillProps = useChartDrill<K, D>({\n    rootRef,\n    selectionMode,\n    drilling,\n    focusedItemInfo,\n    focusedGroupInfo,\n    levelsArray,\n    getDataItem,\n    onItemDrill,\n    onGroupDrill\n  });\n\n  return { selectDrillProps: mergeProps(selectionProps, drillProps), selectionContent };\n}\n"],"names":["series","leafGroupsInfo","width","height","findNearest","getMarkerInfo","onDataCursorPositionChange","isDataCursorEnabled","dataCursorPosition","dataCursorStyle","hoveredItemInfo","focusedItemInfo","getDataItem","getDataItemPos","datatip","valueFormats","isHoriz","xScale","yScale","y2Scale","plotAreaSpace","timeAxisType","touchResponse","isDisabled","defaultXFormatter","defaultYFormatter","defaultY2Formatter","hasXYValues","getGroupFromPath","translations","datatipContent","datatipProps","useChartDatatip","dataCursorContent","dataCursorProps","useChartDataCursor","mergeProps","selectionMode","selection","onChange","rootRef","drilling","onItemDrill","onGroupDrill","focusedGroupInfo","levelsArray","getDataById","ignoreAsTrigger","selectionProps","selectionContent","useSelection","idExtracter","event","info","isCurrent","type","getInfo","target","seriesIndex","groupIndex","length","path","id","undefined","isDrillEnabled","drillProps","useChartDrill","selectDrillProps"],"mappings":"+QAqBgB,UAGdA,OACAA,EAAMC,eACNA,EAAcC,MACdA,EAAKC,OACLA,EAAMC,YACNA,EAAWC,cACXA,EAAaC,2BACbA,EAA0BC,oBAC1BA,EAAmBC,mBACnBA,EAAkBC,gBAClBA,EAAeC,gBACfA,EAAeC,gBACfA,EAAeC,YACfA,EAAWC,eACXA,EAAcC,QACdA,EAAOC,aACPA,EAAYC,QACZA,EAAOC,OACPA,EAAMC,OACNA,EAAMC,QACNA,EAAOC,cACPA,EAAaC,aACbA,EAAYC,cACZA,EAAaC,WACbA,EAAUC,kBACVA,EAAiBC,kBACjBA,EAAiBC,mBACjBA,EAAkBC,YAClBA,EAAWC,iBACXA,EAAgBC,aAChBA,IAEA,MAAMC,eAAEA,EAAcC,aAAEA,GAAiBC,kBAAsB,CAC7DhC,SACAC,iBACAC,QACAC,SACAI,sBACAC,qBACAE,kBACAE,cACAC,iBACAF,kBACAG,UACAC,eACAC,UACAC,SACAb,cACAiB,eACAC,gBACAC,aACAC,oBACAC,oBACAC,qBACAC,cACAE,eACAD,sBAGIK,kBAAEA,EAAiBC,gBAAEA,GAAoBC,qBAAmB,CAChEb,gBACAlB,cACAI,qBACAF,6BACAC,sBACAE,kBACAO,UACAX,gBACAM,kBACAS,gBACAF,SACAC,UACAF,SACAJ,mBAGF,MAAO,CACLiB,iBACAG,oBACAF,aAAcK,EAAAA,WAAWF,EAAiBH,GAE9C,mBC9EgB,UAA+EM,cAC7FA,EAAaC,UACbA,EAASC,SACTA,EAAQC,QACRA,EAAOC,SACPA,EAAQC,YACRA,EAAWC,aACXA,EAAYC,iBACZA,EAAgBjC,gBAChBA,EAAekC,YACfA,EAAWjC,YACXA,EAAWkC,YACXA,EAAWC,gBACXA,IAEA,MAeMC,eAAEA,EAAcC,iBAAEA,GAAqBC,eAAmB,CAC9DC,YAhBmBC,IACnB,MACMC,EADgB1C,EAAgB2C,WAEJ,UAAfF,EAAMG,KACnB5C,EACA6C,EAAAA,QAAQhB,EAASY,EAAMK,QAC7B,OAAOJ,GAA4B,MAApBA,EAAKK,aAA0C,MAAnBL,EAAKM,WAC5C/C,EACEyC,EAAKK,YACLL,EAAKM,WACLd,EAAYA,EAAYe,OAAS,GAAGP,EAAKM,YAAYE,OACpDC,QACHC,CAAS,EAKbC,eAA6B,OAAbvB,EAChBH,YACAD,gBACAE,WACAO,cACAC,oBAGIkB,EAAaC,EAAAA,cAAoB,CACrC1B,UACAH,gBACAI,WACA9B,kBACAiC,mBACAC,cACAjC,cACA8B,cACAC,iBAGF,MAAO,CAAEwB,iBAAkB/B,EAAUA,WAACY,EAAgBiB,GAAahB,mBACrE"}