{"version":3,"file":"useOutsideMousedown-b0021878.js","sources":["../../src/hooks/PRIVATE_useOutsideMousedown/useOutsideMousedown.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\n/**\n * `useOutsideMousedown` hook for capturing mousedown outside of an element\n */\nimport type { RefObject } from 'preact';\nimport { useEffect } from 'preact/hooks';\nimport { coerceArray } from '../../utils/UNSAFE_arrayUtils';\nimport { isLogicalAncestor } from '#utils/UNSAFE_popupUtils';\n\ntype Props = {\n  /**\n   * If true outside mousedown is disabled\n   */\n  isDisabled?: boolean;\n  /**\n   * Reference to element or array of elements relative to which outside mousedown is performed\n   */\n  ref: RefObject<HTMLElement> | RefObject<HTMLElement>[];\n  /**\n   * Outside mousedown callback\n   */\n  handler?: (event: MouseEvent) => void;\n};\n\nconst isPointOutside = (event: Event, ref: RefObject<HTMLElement>[]) => {\n  const target = event.target as HTMLElement;\n  if (target) {\n    const doc = getDocument(target);\n    if (!doc.contains(target)) return false;\n  }\n  return ref.every(\n    (elRef) =>\n      !elRef.current?.contains(target) && !isLogicalAncestor(elRef.current as HTMLElement, target)\n  );\n};\n\nconst getDocument = (node?: Node): Document => node?.ownerDocument ?? document;\n\nexport const useOutsideMousedown = ({ isDisabled: disabled = false, ref, handler }: Props) => {\n  useEffect(() => {\n    const refs = coerceArray(ref);\n    if (\n      !handler ||\n      disabled ||\n      (refs.length > 0 && refs.findIndex((elRef) => elRef.current === null) > -1)\n    )\n      return;\n\n    const onMouseDown = (event: MouseEvent) => {\n      if (isPointOutside(event, refs)) {\n        handler?.(event);\n      }\n    };\n    const firstElRef = refs[0];\n    const doc = getDocument(firstElRef.current!);\n    if (doc) {\n      doc.addEventListener('mousedown', onMouseDown, true);\n\n      return () => {\n        doc.removeEventListener('mousedown', onMouseDown, true);\n      };\n    }\n    return undefined;\n  }, [disabled, handler, ref]);\n};\n"],"names":["getDocument","node","ownerDocument","document","isDisabled","disabled","ref","handler","useEffect","refs","coerceArray","length","findIndex","elRef","current","onMouseDown","event","target","contains","every","isLogicalAncestor","isPointOutside","firstElRef","doc","addEventListener","removeEventListener"],"mappings":"kHA+BA,MAYMA,EAAeC,GAA0BA,GAAMC,eAAiBC,+BAEnC,EAAGC,WAAYC,GAAW,EAAOC,MAAKC,cACvEC,EAAAA,WAAU,KACR,MAAMC,EAAOC,cAAYJ,GACzB,IACGC,GACDF,GACCI,EAAKE,OAAS,GAAKF,EAAKG,WAAWC,GAA4B,OAAlBA,EAAMC,WAAqB,EAEzE,OAEF,MAAMC,EAAeC,IAxBF,EAACA,EAAcV,KACpC,MAAMW,EAASD,EAAMC,OACrB,GAAIA,IACUjB,EAAYiB,GACfC,SAASD,GAAS,OAAO,EAEpC,OAAOX,EAAIa,OACRN,IACEA,EAAMC,SAASI,SAASD,KAAYG,EAAAA,kBAAkBP,EAAMC,QAAwBG,IACxF,EAgBOI,CAAeL,EAAOP,IACxBF,IAAUS,EACX,EAEGM,EAAab,EAAK,GAClBc,EAAMvB,EAAYsB,EAAWR,SACnC,OAAIS,GACFA,EAAIC,iBAAiB,YAAaT,GAAa,GAExC,KACLQ,EAAIE,oBAAoB,YAAaV,GAAa,EAAK,QAJ3D,CAOgB,GACf,CAACV,EAAUE,EAASD,GAAK"}