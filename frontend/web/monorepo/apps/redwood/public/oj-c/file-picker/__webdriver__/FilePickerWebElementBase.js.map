{"version":3,"file":"FilePickerWebElementBase.js","sourceRoot":"","sources":["FilePickerWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,wBAAyB,SAAQ,uBAAY;IACxD;;;;;OAKG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,WAAW,CAAuB,QAAQ,CAAC,CAAC;IAC1D,CAAC;IAED;;;;;OAKG;IACI,UAAU;QACf,OAAO,IAAI,CAAC,WAAW,CAAgB,SAAS,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAU,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;OAKG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAgB,aAAa,CAAC,CAAC;IACxD,CAAC;IAED;;;;;OAKG;IACI,gBAAgB;QACrB,OAAO,IAAI,CAAC,WAAW,CAAgB,eAAe,CAAC,CAAC;IAC1D,CAAC;IAED;;;;;OAKG;IACI,gBAAgB;QACrB,OAAO,IAAI,CAAC,WAAW,CAAS,eAAe,CAAC,CAAC;IACnD,CAAC;CACF;AA5DD,4DA4DC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-file-picker WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, FilePickerWebElement.ts.\n */\nexport class FilePickerWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>accept</code> property.\n   * An array of strings of allowed MIME types or file extensions that can be uploaded. If not specified, accept all file types\n   * @return The value of <code>accept</code> property.\n   *\n   */\n  public getAccept(): Promise<Array<string> | null> {\n    return this.getProperty<Array<string> | null>('accept');\n  }\n\n  /**\n   * Gets the value of <code>capture</code> property.\n   * Specifies the preferred facing mode for the device's media capture mechanism.\n   * @return The value of <code>capture</code> property.\n   *\n   */\n  public getCapture(): Promise<string | null> {\n    return this.getProperty<string | null>('capture');\n  }\n\n  /**\n   * Gets the value of <code>disabled</code> property.\n   * Disables the filepicker if set to true\n   * @return The value of <code>disabled</code> property.\n   *\n   */\n  public getDisabled(): Promise<boolean> {\n    return this.getProperty<boolean>('disabled');\n  }\n\n  /**\n   * Gets the value of <code>primaryText</code> property.\n   * The primary text for the default file picker.\n   * @return The value of <code>primaryText</code> property.\n   *\n   */\n  public getPrimaryText(): Promise<string | null> {\n    return this.getProperty<string | null>('primaryText');\n  }\n\n  /**\n   * Gets the value of <code>secondaryText</code> property.\n   * The secondary text for the default file picker.\n   * @return The value of <code>secondaryText</code> property.\n   *\n   */\n  public getSecondaryText(): Promise<string | null> {\n    return this.getProperty<string | null>('secondaryText');\n  }\n\n  /**\n   * Gets the value of <code>selectionMode</code> property.\n   * Whether to allow single or multiple file selection.\n   * @return The value of <code>selectionMode</code> property.\n   *\n   */\n  public getSelectionMode(): Promise<string> {\n    return this.getProperty<string>('selectionMode');\n  }\n}\n"]}