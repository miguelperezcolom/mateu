{"version":3,"file":"TabBarMixedWebElementBase.js","sourceRoot":"","sources":["TabBarMixedWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,yBAA0B,SAAQ,uBAAY;IACzD;;;;;OAKG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAqB,aAAa,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;OAKG;IACI,sBAAsB;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAS,qBAAqB,CAAC,CAAC;IACzD,CAAC;IAED;;;;;OAKG;IACI,0BAA0B;QAC/B,OAAO,IAAI,CAAC,WAAW,CAAS,yBAAyB,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;OAKG;IACI,eAAe;QACpB,OAAO,IAAI,CAAC,WAAW,CAAS,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,eAAe,CAAC,SAA0B;QAC/C,OAAO,IAAI,CAAC,WAAW,CAAkB,WAAW,EAAE,SAAS,CAAC,CAAC;IACnE,CAAC;IAED;;;;;OAKG;IACI,YAAY;QACjB,OAAO,IAAI,CAAC,WAAW,CAAkB,WAAW,CAAC,CAAC;IACxD,CAAC;IAED;;;;;OAKG;IACI,mBAAmB;QACxB,OAAO,IAAI,CAAC,WAAW,CAAS,kBAAkB,CAAC,CAAC;IACtD,CAAC;IAED;;;;;OAKG;IACI,aAAa;QAClB,OAAO,IAAI,CAAC,WAAW,CAAoB,YAAY,CAAC,CAAC;IAC3D,CAAC;IAED;;;;;OAKG;IACI,oBAAoB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAS,mBAAmB,CAAC,CAAC;IACvD,CAAC;CACF;AA1FD,8DA0FC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-tab-bar-mixed WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, TabBarMixedWebElement.ts.\n */\nexport class TabBarMixedWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>dynamicTabs</code> property.\n   * An array of dynamic tabs\n   * @return The value of <code>dynamicTabs</code> property.\n   *\n   */\n  public getDynamicTabs(): Promise<Array<DynamicTabs>> {\n    return this.getProperty<Array<DynamicTabs>>('dynamicTabs');\n  }\n\n  /**\n   * Gets the value of <code>dynamicTabsOverflow</code> property.\n   * Dynamic tabs overflow configurations\n   * @return The value of <code>dynamicTabsOverflow</code> property.\n   *\n   */\n  public getDynamicTabsOverflow(): Promise<string> {\n    return this.getProperty<string>('dynamicTabsOverflow');\n  }\n\n  /**\n   * Gets the value of <code>dynamicTabsOverflowIcon</code> property.\n   * The icon used on the overflow tab\n   * @return The value of <code>dynamicTabsOverflowIcon</code> property.\n   *\n   */\n  public getDynamicTabsOverflowIcon(): Promise<object> {\n    return this.getProperty<object>('dynamicTabsOverflowIcon');\n  }\n\n  /**\n   * Gets the value of <code>size</code> property.\n   * Size of TabBarMixed\n   * @return The value of <code>size</code> property.\n   *\n   */\n  public getSizeProperty(): Promise<string> {\n    return this.getProperty<string>('size');\n  }\n\n  /**\n   * Sets the value of <code>selection</code> property.\n   * The key of the selected tab\n   * @param selection The value to set for <code>selection</code>\n   *\n   */\n  public changeSelection(selection: string | number): Promise<void> {\n    return this.setProperty<string | number>('selection', selection);\n  }\n\n  /**\n   * Gets the value of <code>selection</code> property.\n   * The key of the selected tab\n   * @return The value of <code>selection</code> property.\n   *\n   */\n  public getSelection(): Promise<string | number> {\n    return this.getProperty<string | number>('selection');\n  }\n\n  /**\n   * Gets the value of <code>separatorPadding</code> property.\n   * The padding around the vertical divider that seperates collections of tabs.\n   * @return The value of <code>separatorPadding</code> property.\n   *\n   */\n  public getSeparatorPadding(): Promise<string> {\n    return this.getProperty<string>('separatorPadding');\n  }\n\n  /**\n   * Gets the value of <code>staticTabs</code> property.\n   * An array of static tabs\n   * @return The value of <code>staticTabs</code> property.\n   *\n   */\n  public getStaticTabs(): Promise<Array<StaticTabs>> {\n    return this.getProperty<Array<StaticTabs>>('staticTabs');\n  }\n\n  /**\n   * Gets the value of <code>staticTabsDisplay</code> property.\n   * The display configuration for static tabs.\n   * @return The value of <code>staticTabsDisplay</code> property.\n   *\n   */\n  public getStaticTabsDisplay(): Promise<string> {\n    return this.getProperty<string>('staticTabsDisplay');\n  }\n}\nexport interface DynamicTabs {\n  /**\n   *\n   */\n  badge: number;\n  /**\n   *\n   */\n  icon: object;\n  /**\n   *\n   */\n  itemKey: string | number;\n  /**\n   *\n   */\n  label: string;\n  /**\n   *\n   */\n  tabPanelId: string;\n}\nexport interface StaticTabs {\n  /**\n   *\n   */\n  badge: number;\n  /**\n   *\n   */\n  icon: object;\n  /**\n   *\n   */\n  itemKey: string | number;\n  /**\n   *\n   */\n  label: string;\n  /**\n   *\n   */\n  tabPanelId: string;\n}\n"]}