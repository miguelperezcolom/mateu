{"version":3,"file":"LinearMeter-d1e744c1.js","sources":["../../src/PRIVATE_Meter/LinearMeter.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { ComponentChildren, Ref, JSX } from 'preact';\nimport { CSSProperties, forwardRef } from 'preact/compat';\nimport type { UnpackSignals } from '@oracle/oraclejet-internal-utilities/attributeUtils';\nimport { ColorProps } from '#utils/UNSAFE_interpolations/colors';\n\ntype IntrinsicProps = Pick<UnpackSignals<JSX.IntrinsicElements['div']>, 'id' | 'class'>;\n\ntype TrackProps = IntrinsicProps & {\n  length?: string;\n  color?: ColorProps['color'];\n  orientation?: 'vertical' | 'horizontal';\n  ariaProps?: {\n    'aria-valuenow'?: UnpackSignals<JSX.AriaAttributes>['aria-valuenow'];\n    'aria-valuemin'?: UnpackSignals<JSX.AriaAttributes>['aria-valuemin'];\n    'aria-valuemax'?: UnpackSignals<JSX.AriaAttributes>['aria-valuemax'];\n    'aria-valuetext'?: UnpackSignals<JSX.AriaAttributes>['aria-valuetext'];\n    'aria-label'?: UnpackSignals<JSX.AriaAttributes>['aria-label'];\n    'aria-labelledby'?: UnpackSignals<JSX.AriaAttributes>['aria-labelledby'];\n    role?: UnpackSignals<JSX.HTMLAttributes>['role'];\n  };\n  style?: CSSProperties;\n  children?: ComponentChildren;\n};\n\nexport const BarTrack = forwardRef(\n  (\n    {\n      id,\n      length = '100%',\n      children,\n      color,\n      orientation = 'horizontal',\n      ariaProps,\n      ...otherProps\n    }: TrackProps,\n    ref?: Ref<HTMLDivElement>\n  ) => {\n    const isHoriz = orientation === 'horizontal';\n    return (\n      <div\n        id={id}\n        ref={ref}\n        class={otherProps.class}\n        {...ariaProps}\n        style={{\n          width: isHoriz ? length : undefined,\n          height: isHoriz ? undefined : length,\n          backgroundColor: color,\n          ...otherProps.style\n        }}>\n        {children}\n      </div>\n    );\n  }\n);\n\ntype ValueProps = Pick<IntrinsicProps, 'class'> & {\n  length?: string;\n  size?: string;\n  orientation?: 'vertical' | 'horizontal';\n  color?: ColorProps['color'];\n  left?: string;\n  bottom?: string;\n  right?: string;\n  width?: string;\n  height?: string;\n};\n\nexport const BarValue = ({\n  length,\n  size = '100%',\n  orientation = 'horizontal',\n  color,\n  left,\n  bottom,\n  right,\n  ...otherProps\n}: ValueProps) => {\n  const isHoriz = orientation === 'horizontal';\n  return (\n    <div\n      class={otherProps.class}\n      style={{\n        width: isHoriz ? length : size,\n        height: isHoriz ? size : length,\n        backgroundColor: color,\n        left: left,\n        bottom: bottom,\n        right: right\n      }}></div>\n  );\n};\n"],"names":["BarTrack","forwardRef","id","length","children","color","orientation","ariaProps","otherProps","ref","isHoriz","_jsx","jsx","class","style","width","undefined","height","backgroundColor","size","left","bottom","right"],"mappings":"sFA+Ba,MAAAA,EAAWC,EAAAA,YACtB,EAEIC,KACAC,SAAS,OACTC,WACAC,QACAC,cAAc,aACdC,eACGC,GAELC,KAEA,MAAMC,EAA0B,eAAhBJ,EAChB,OACEK,EACEC,IAAA,MAAA,CAAAV,GAAIA,EACJO,IAAKA,EACLI,MAAOL,EAAWK,SACdN,EACJO,MAAO,CACLC,MAAOL,EAAUP,OAASa,EAC1BC,OAAQP,OAAUM,EAAYb,EAC9Be,gBAAiBb,KACdG,EAAWM,OAEfV,SAAAA,GAEH,4BAgBkB,EACtBD,SACAgB,OAAO,OACPb,cAAc,aACdD,QACAe,OACAC,SACAC,WACGd,MAEH,MAAME,EAA0B,eAAhBJ,EAChB,OACEK,EAAAA,WACEE,MAAOL,EAAWK,MAClBC,MAAO,CACLC,MAAOL,EAAUP,EAASgB,EAC1BF,OAAQP,EAAUS,EAAOhB,EACzBe,gBAAiBb,EACjBe,KAAMA,EACNC,OAAQA,EACRC,MAAOA,IAEX"}