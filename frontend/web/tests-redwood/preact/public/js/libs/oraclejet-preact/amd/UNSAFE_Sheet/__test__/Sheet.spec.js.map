{"version":3,"file":"Sheet.spec.js","sources":["../../../../src/UNSAFE_Sheet/__test__/Sheet.spec.tsx"],"sourcesContent":["import { fireEvent, render, waitFor, screen } from '@testing-library/preact';\n\nimport { ComponentProps } from 'preact';\nimport { ElementRef } from 'preact/compat';\n\nimport { RootEnvironment, RootEnvironmentProvider } from '../../UNSAFE_Environment';\nimport { expect } from 'chai';\nimport { spy } from 'sinon';\nimport { useRef, useCallback, useState } from 'preact/hooks';\nimport userEvent from '@testing-library/user-event';\nimport { BaseButton } from '../../UNSAFE_BaseButton';\nimport { Sheet } from '../Sheet';\nimport { getClientHints } from '../../utils/PRIVATE_clientHints';\nimport { Button } from '../../UNSAFE_Button';\nimport translations from '../../resources/nls/en/bundle';\n\ntype ButtonHandle = ElementRef<typeof Button>;\n\n//TODO: JET-63873\nfunction getSheet(elem: Element) {\n  return elem.querySelector('#contentId') as HTMLElement;\n}\nfunction getSheetContainer(elem: Element) {\n  return (elem.querySelector('#contentId') as Element).parentElement as HTMLElement;\n}\n\nfunction getSheetScrim(sheetContainer: Element) {\n  return sheetContainer.parentElement?.parentElement?.parentElement?.firstElementChild;\n}\n\nconst sheetEnv: Partial<RootEnvironment> = {\n  translations: { '@oracle/oraclejet-preact': translations },\n  mode: 'test'\n};\n\nconst SheetSimpleComponent = ({\n  onClose\n}: {\n  onClose?: ComponentProps<typeof Sheet>['onClose'];\n}) => {\n  const ref = useRef<ButtonHandle>(null);\n\n  return (\n    <>\n      <RootEnvironmentProvider environment={sheetEnv}>\n        <BaseButton ref={ref}>Open</BaseButton>\n        <Sheet isOpen={true} onClose={onClose}>\n          <div\n            style={{ display: 'flex', flexDirection: 'column', outlineStyle: 'none' }}\n            id=\"contentId\">\n            <h1>N1</h1>\n            <h1>N2</h1>\n            <h1>N3</h1>\n            <h1>N4</h1>\n          </div>\n        </Sheet>\n      </RootEnvironmentProvider>\n    </>\n  );\n};\n\nfunction IntitialFocusTestComponent() {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleButtonRef = useRef<ButtonHandle>(null);\n\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n  return (\n    <RootEnvironmentProvider environment={sheetEnv}>\n      <div\n        style={{\n          paddingTop: '90px',\n          paddingBottom: '90px'\n        }}>\n        <Sheet isOpen={isOpen} initialFocus=\"firstFocusable\">\n          <div\n            style={{ display: 'flex', flexDirection: 'column', outlineStyle: 'none' }}\n            id=\"contentId\">\n            <Button aria-label=\"OK\" label=\"OK\"></Button>\n          </div>\n        </Sheet>\n        <Button ref={toggleButtonRef} onAction={toggle} label=\"Toggle\" />\n      </div>\n    </RootEnvironmentProvider>\n  );\n}\n\ndescribe('Test Sheet Component', () => {\n  it('Sheet content render correctly', async function () {\n    const { container } = render(<SheetSimpleComponent />);\n\n    const sheetContent = getSheet(container);\n\n    expect(sheetContent).not.null;\n  });\n\n  it('onClose called when Escape or Tab are pressed', async function () {\n    const onActionDummyFunction = spy();\n    const { container } = render(<SheetSimpleComponent onClose={onActionDummyFunction} />);\n\n    const sheetContent = getSheet(container);\n    const sheetContainer = getSheetContainer(container);\n\n    expect(sheetContent).not.null;\n\n    fireEvent.keyDown(sheetContainer, { code: 'Tab' });\n    fireEvent.keyDown(sheetContainer, { code: 'Escape' });\n    expect(onActionDummyFunction.calledTwice).to.be.true;\n  });\n\n  it('onClose called when clicking scrim', async function () {\n    const onActionDummyFunction = spy();\n    const { container } = render(<SheetSimpleComponent onClose={onActionDummyFunction} />);\n    const sheetContent = getSheet(container);\n    const sheetContainer = getSheetContainer(container);\n    const sheetScrim = getSheetScrim(sheetContainer);\n\n    expect(sheetContent).not.null;\n\n    await userEvent.click(sheetScrim as HTMLElement);\n\n    expect(onActionDummyFunction.called).to.be.true;\n  });\n\n  it('onClose called when swipe is done (mobile)', async function () {\n    const onActionDummyFunction = spy();\n    const { container } = render(<SheetSimpleComponent onClose={onActionDummyFunction} />);\n    const sheetContent = getSheet(container);\n    const sheetContainer = getSheetContainer(container);\n    expect(sheetContent).not.null;\n\n    if (typeof jest === 'undefined' && getClientHints().touchSupport === 'primary') {\n      // Touch objects are created so we can replicate this in fake touch events\n      // This stuff is based on what useSwipe triggers and could change depending on the final decision\n      // on what events to trigger on useSwipe.\n      const touch1 = new Touch({\n        target: sheetContainer as EventTarget,\n        identifier: 0,\n        pageX: 386,\n        pageY: 224\n      });\n      const touch2 = new Touch({\n        target: sheetContainer as EventTarget,\n        identifier: 0,\n        pageX: 389,\n        pageY: 397\n      });\n      if (sheetContainer) {\n        fireEvent.touchStart(sheetContainer, {\n          timeStamp: 10406,\n          currentTarget: sheetContainer,\n          changedTouches: [touch1]\n        });\n        fireEvent.touchEnd(sheetContainer, {\n          timeStamp: 10472,\n          currentTarget: sheetContainer,\n          changedTouches: [touch2]\n        });\n      }\n      expect(onActionDummyFunction.called).to.be.true;\n    }\n  });\n\n  it('Sheet correct focus when initialFocus set as firstFocusable', async function () {\n    const { container } = render(<IntitialFocusTestComponent />);\n    const anchorButton = screen.getByRole('button');\n    expect(anchorButton, 'anchor element found').not.null;\n    if (anchorButton) {\n      await userEvent.click(anchorButton);\n    }\n    await waitFor(() => {\n      const sheet = getSheet(container);\n      expect(sheet).not.to.be.null;\n    });\n    const okButton = screen.getByLabelText('OK');\n    expect(okButton).not.to.be.null;\n    if (typeof jest === 'undefined') {\n      await waitFor(() => {\n        expect(okButton.matches(':focus')).to.be.true;\n      });\n    }\n  });\n});\n"],"names":["getSheet","elem","querySelector","getSheetContainer","parentElement","sheetEnv","translations","mode","SheetSimpleComponent","onClose","ref","useRef","_jsx","_Fragment","children","_jsxs","jsxs","RootEnvironmentProvider","environment","jsx","BaseButton","Sheet","isOpen","style","display","flexDirection","outlineStyle","id","IntitialFocusTestComponent","setIsOpen","useState","toggleButtonRef","toggle","useCallback","paddingTop","paddingBottom","initialFocus","Button","label","onAction","describe","it","async","container","render","sheetContent","expect","not","null","onActionDummyFunction","spy","sheetContainer","fireEvent","keyDown","code","calledTwice","to","be","true","sheetScrim","firstElementChild","getSheetScrim","userEvent","click","called","jest","getClientHints","touchSupport","touch1","Touch","target","identifier","pageX","pageY","touch2","touchStart","timeStamp","currentTarget","changedTouches","touchEnd","anchorButton","screen","getByRole","waitFor","sheet","okButton","getByLabelText","matches"],"mappings":"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"}