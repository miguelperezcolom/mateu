{"version":3,"file":"useComponentTheme-5aa41a8f.js","sources":["../../src/hooks/UNSAFE_useComponentTheme/useComponentTheme.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentThemeType } from '../../UNSAFE_Theme';\nimport { warn } from '../../utils/UNSAFE_logger';\n\ntype Options = Record<string, unknown>;\n\n/**\n * A hook for getting the classes associated with a component within the theming system\n */\nconst useComponentTheme = <VariantObjects extends Options, Styles = Record<string, never>>(\n  componentTheme?: ComponentThemeType<unknown, unknown>,\n  options?: VariantObjects\n) => {\n  const {\n    multiVariantStyles,\n    styles,\n    variants = [],\n    baseTheme = ''\n  } = componentTheme || ({} as any);\n\n  // Here we filter down from the keys in the options parameter that match the list of variants\n  const variantsFromOptions = Object.keys(variants).reduce((acc: Options, cur: string) => {\n    acc[cur] = options?.[cur];\n    return acc;\n  }, {});\n\n  if (!multiVariantStyles) {\n    warn(\n      `You are missing a theme for your component. You may need to create one or provide a theme in your Environment context.`\n    );\n  }\n\n  const variantClasses = multiVariantStyles ? multiVariantStyles(variantsFromOptions) : '';\n\n  // returned here are the styles defined in the component theme, and the classes.\n  // classes always includes the baseTheme class defined in the component theme.\n  // we also append the classes returned from the multiVariantStyles function\n  return {\n    styles: styles as Styles,\n    baseTheme,\n    variantClasses,\n    classes: `${baseTheme} ${variantClasses}`\n  };\n};\n\nexport { useComponentTheme };\n"],"names":["componentTheme","options","multiVariantStyles","styles","variants","baseTheme","variantsFromOptions","Object","keys","reduce","acc","cur","warn","variantClasses","classes"],"mappings":"uFAgB0B,CACxBA,EACAC,KAEA,MAAMC,mBACJA,EAAkBC,OAClBA,EAAMC,SACNA,EAAW,GAAEC,UACbA,EAAY,IACVL,GAAmB,GAGjBM,EAAsBC,OAAOC,KAAKJ,GAAUK,QAAO,CAACC,EAAcC,KACtED,EAAIC,GAAOV,IAAUU,GACdD,IACN,CAAE,GAEAR,GACHU,OACE,0HAIJ,MAAMC,EAAiBX,EAAqBA,EAAmBI,GAAuB,GAKtF,MAAO,CACLH,OAAQA,EACRE,YACAQ,iBACAC,QAAS,GAAGT,KAAaQ,IAC1B"}