{"version":3,"file":"useVisTouchResponse-88a7bb09.js","sources":["../../src/hooks/PRIVATE_useVisTouchResponse/useVisTouchResponse.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { RefObject } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\n\ntype TouchResponseAutoOptions =\n  | {\n      type: 'auto';\n      supportsTouchDragGestures: true;\n    }\n  | {\n      type: 'auto';\n      supportsTouchDragGestures: false;\n      rootRef: RefObject<HTMLElement>;\n    };\n\ntype TouchResponseTouchStartOptions = {\n  type: 'touchStart';\n};\n\ntype TouchResponseTouchHoldOptions = {\n  type: 'touchHold';\n};\n\n/**\n * Returns resolved touch response related values.\n */\nexport function useVisTouchResponse(\n  options: TouchResponseAutoOptions | TouchResponseTouchStartOptions | TouchResponseTouchHoldOptions\n) {\n  const resolvedAutoTouchResponse = useVisAutoTouchResponse(\n    options.type === 'auto' ? options : { type: 'auto', supportsTouchDragGestures: true } // dummy options; the output won't be used here for non-auto type.\n  );\n\n  return options.type === 'auto'\n    ? resolvedAutoTouchResponse\n    : {\n        touchResponse: options.type,\n        touchResponseStyle: {\n          touchAction: options.type === 'touchStart' ? 'none' : 'auto'\n        }\n      };\n}\n\nfunction useVisAutoTouchResponse(options: TouchResponseAutoOptions) {\n  const { supportsTouchDragGestures } = options;\n  const rootRef = !supportsTouchDragGestures ? options.rootRef : undefined;\n\n  const [touchResponse, setTouchResponse] = useState<'touchStart' | 'touchHold'>('touchHold');\n\n  useEffect(() => {\n    if (supportsTouchDragGestures) {\n      setTouchResponse('touchHold');\n    } else if (rootRef && rootRef.current) {\n      setTouchResponse(resolveTouchResponse(rootRef.current));\n    }\n  }, [rootRef, supportsTouchDragGestures]);\n\n  return {\n    touchResponse,\n    touchResponseStyle: {\n      touchAction: touchResponse === 'touchStart' || supportsTouchDragGestures ? 'none' : 'auto'\n    }\n  };\n}\n\nconst resolveTouchResponse = (root: HTMLElement) => {\n  // Almost entirely copied from Dvt.EventManager.isTouchResponseTouchStart\n  const TOUCH_RESPONSE_PADDING_CHECK = 10;\n  let r: HTMLElement | null = root;\n  while (r) {\n    const style = window.getComputedStyle(r);\n    if (\n      (style.overflow !== 'hidden' &&\n        ((r.scrollWidth > r.clientWidth + TOUCH_RESPONSE_PADDING_CHECK &&\n          style.overflowX !== 'hidden') ||\n          (r.scrollHeight > r.clientHeight + TOUCH_RESPONSE_PADDING_CHECK &&\n            style.overflowY !== 'hidden'))) ||\n      (window.frameElement && window.frameElement.nodeName == 'IFRAME')\n    ) {\n      return 'touchHold';\n    }\n    if (r.nodeName === 'HTML') {\n      break;\n    }\n    r = r.parentElement;\n  }\n  return 'touchStart';\n};\n"],"names":["resolveTouchResponse","root","r","style","window","getComputedStyle","overflow","scrollWidth","clientWidth","overflowX","scrollHeight","clientHeight","overflowY","frameElement","nodeName","parentElement","options","resolvedAutoTouchResponse","supportsTouchDragGestures","rootRef","undefined","touchResponse","setTouchResponse","useState","useEffect","current","touchResponseStyle","touchAction","useVisAutoTouchResponse","type"],"mappings":"8DAuEA,MAAMA,EAAwBC,IAG5B,IAAIC,EAAwBD,EAC5B,KAAOC,GAAG,CACR,MAAMC,EAAQC,OAAOC,iBAAiBH,GACtC,GACsB,WAAnBC,EAAMG,WACHJ,EAAEK,YAAcL,EAAEM,YANW,IAOT,WAApBL,EAAMM,WACLP,EAAEQ,aAAeR,EAAES,aARS,IASP,WAApBR,EAAMS,YACXR,OAAOS,cAAgD,UAAhCT,OAAOS,aAAaC,SAE5C,MAAO,YAET,GAAmB,SAAfZ,EAAEY,SACJ,MAEFZ,EAAIA,EAAEa,aACP,CACD,MAAO,YAAY,wBA5Df,SACJC,GAEA,MAAMC,EAcR,SAAiCD,GAC/B,MAAME,0BAAEA,GAA8BF,EAChCG,EAAWD,OAA8CE,EAAlBJ,EAAQG,SAE9CE,EAAeC,GAAoBC,EAAQA,SAA6B,aAU/E,OARAC,EAAAA,WAAU,KACJN,EACFI,EAAiB,aACRH,GAAWA,EAAQM,SAC5BH,EAAiBtB,EAAqBmB,EAAQM,SAC/C,GACA,CAACN,EAASD,IAEN,CACLG,gBACAK,mBAAoB,CAClBC,YAA+B,eAAlBN,GAAkCH,EAA4B,OAAS,QAG1F,CAlCoCU,CACf,SAAjBZ,EAAQa,KAAkBb,EAAU,CAAEa,KAAM,OAAQX,2BAA2B,IAGjF,MAAwB,SAAjBF,EAAQa,KACXZ,EACA,CACEI,cAAeL,EAAQa,KACvBH,mBAAoB,CAClBC,YAA8B,eAAjBX,EAAQa,KAAwB,OAAS,QAGhE"}