{"version":3,"file":"ReorderableContext-6d10a1b7.js","sources":["../../src/hooks/PRIVATE_useReorderable/ReorderableContext.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext } from 'preact';\nimport { MutableRef } from 'preact/hooks';\nimport { ReorderDetail } from '../../UNSAFE_Collection/Reorderable.types';\n\nexport type ReorderableContextProps<K extends string | number> = {\n  currentItemKey: MutableRef<K | undefined>;\n  onReorder?: (detail: ReorderDetail<K>) => void;\n};\n/**\n * Context used to pass reordering information.\n * We want to communicate information down to ReorderableItem.\n */\ntype K = string | number;\nconst ReorderableContext = createContext<ReorderableContextProps<K>>(null!);\n\nexport { ReorderableContext };\n"],"names":["ReorderableContext","createContext"],"mappings":"wDAqBA,MAAMA,EAAqBC,EAAaA,cAA6B"}