{"version":3,"file":"useSelectableTextField-900d2860.js","sources":["../../src/hooks/UNSAFE_useSelectableTextField/useSelectableTextField.ts"],"sourcesContent":["import type { RefObject } from 'preact';\nimport { useMemo } from 'preact/hooks';\n\ntype SelectableHandle = {\n  select: () => void;\n  setSelectionRange: (start: number, end: number) => void;\n};\n/**\n * A custom hook that handles the selection or selection range of text in a text\n * input or textarea. Calling select and setSelectionRange will not necessarily\n * focus the input, so it is often used with a focus call immediately beforehand\n * @typedef E represents the type of the selectable element\n */\nexport function useSelectableTextField<E extends HTMLInputElement | HTMLTextAreaElement>(\n  selectElementRef: RefObject<E>\n) {\n  const methods = useMemo(\n    () => ({\n      select: () => {\n        selectElementRef.current?.select?.();\n      },\n      setSelectionRange: (start: number, end: number) => {\n        // Must be used in conjunction with focus for the call to have any effect\n        // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n        selectElementRef.current?.setSelectionRange?.(start, end);\n      }\n    }),\n    [selectElementRef]\n  );\n\n  return { methods };\n}\n\nexport type { SelectableHandle };\n"],"names":["selectElementRef","methods","useMemo","select","current","setSelectionRange","start","end"],"mappings":"uFAaM,SACJA,GAgBA,MAAO,CAAEC,QAdOC,EAAAA,SACd,KAAO,CACLC,OAAQ,KACNH,EAAiBI,SAASD,UAAU,EAEtCE,kBAAmB,CAACC,EAAeC,KAGjCP,EAAiBI,SAASC,oBAAoBC,EAAOC,EAAI,KAG7D,CAACP,IAIL"}