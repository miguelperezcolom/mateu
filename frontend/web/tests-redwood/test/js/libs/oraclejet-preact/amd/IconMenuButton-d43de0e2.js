define(['exports', 'preact/jsx-runtime', './ButtonLabelLayout-9cc087dc', './ChevronDown-1d01f028', './Menu-45a26116', './MenuItem-ff1cd14d', 'preact/hooks', 'preact', './useTooltip-e14d62f1', './mergeProps-bcfa6a92', './logger-0f873e29', './LayerHost-7d4aa6d3', 'preact/compat', 'css!./TooltipContentStyles.styles.css', 'module', './hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentVariants.css', './tooltipUtils-3c8a0253', 'css!./IconStyle.styles.css', './SelectMenuGroupContext-67f24a8f', './UNSAFE_Menu/themes/MenuItemStyles.css', './UNSAFE_Separator/themes/SeparatorStyles.css', 'css!./MenuSeparatorStyles.styles.css', 'module', './UNSAFE_Menu/themes/redwood/MenuSeparatorVariants.css', 'css!./MenuStyles.styles.css', './useMenuAction-26df747b', './BaseButton-d2266b25'], (function(e,t,s,o,n,a,i,r,l,u,c,d,p,y,m,h,b,M,S,f,g,T,I,x,B,w,A){"use strict";const F=p.forwardRef((({children:e,tooltip:a,accessibleLabel:c,variant:d="outlined",isDisabled:p=!1,isMenuOpen:y=!1,isIconOnly:m=!1,onToggleMenu:h,size:b="md",type:M="button",testId:S,width:f,icon:g,"aria-describedby":T},I)=>{const x=i.useRef(null);i.useImperativeHandle(I,(()=>x.current),[x]);const{triggerProps:B,menuProps:F}=w.useMenuAction({isDisabled:p,onToggleMenu:h,isMenuOpen:y,anchorRef:x}),{tooltipContent:j,tooltipProps:v}=l.useTooltip({text:a||c,isDisabled:y||p}),C={type:"button",buttonType:M},D={"aria-describedby":T},N=t.jsx(r.Fragment,{children:t.jsxs(A.BaseButton,{...u.mergeProps(v,B,D),styling:y?["min","active"]:["min"],elementDetails:C,isDisabled:p,variant:d,width:f,size:b,ref:x,"aria-label":c??a,testId:S,children:[t.jsx(s.ButtonLabelLayout,{display:"icons",startIcon:g,endIcon:m?null:t.jsx(o.SvgChevronDown,{}),size:b}),j]})});return p?N:t.jsxs(r.Fragment,{children:[N,t.jsx(n.Menu,{...F,offsetValue:4,"aria-label":c??a,children:e})]})}));F.displayName="IconMenuButton",e.IconMenuButton=F}));
//# sourceMappingURL=IconMenuButton-d43de0e2.js.map
