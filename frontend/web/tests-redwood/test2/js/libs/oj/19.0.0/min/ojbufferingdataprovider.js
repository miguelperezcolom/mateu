/**
 * @license
 * Copyright (c) 2014, 2025, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","ojs/ojdataprovider","ojs/ojeventtarget","ojs/ojmap","ojs/ojset","ojs/ojbufferingdataproviderevents","ojs/ojbufferingutils"],function(t,e,i,r,a,s,n){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,r=r&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r,a=a&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a;
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
class d{constructor(t,e){var i;this._dataProvider=t,this._options=e,this.AsyncIterable=(i=class{constructor(t,e){this._parent=t,this._asyncIterator=e,this[Symbol.asyncIterator]=function(){return this._asyncIterator}}},Symbol.asyncIterator,i),this.AsyncIterator=class{constructor(t,e,i){this._parent=t,this._baseIterator=e,this._params=i,this.mergedAddKeySet=new a,this.mergedItemArray=[],this.nextOffset=0,null==this._params&&(this._params={})}next(){return n.BufferingDataProviderUtils.fetchNext(this._params,this._baseIterator,this,this._parent.lastSortCriteria,this._parent.editBuffer,this._parent)}},this.editBuffer=new n.EditBuffer,this.lastSortCriteria=null,this.lastIterator=null,this.customKeyGenerator=e?.keyGenerator,this.generatedKeyMap=new r,this.totalFilteredRowCount=0,this.dataBeforeUpdated=new Map,this.dataProvider=t,this.options=e,this._addEventListeners()}containsKeys(t){return n.BufferingDataProviderUtils.containsKeys(t,this.editBuffer,this.dataProvider)}fetchByKeys(t){return n.BufferingDataProviderUtils.fetchByKeys(t,this.editBuffer,this.dataProvider)}removeItem(t){const e=n.BufferingDataProviderUtils.removeItem(t,this.lastIterator,this.editBuffer);this.dispatchEvent(e),this.dispatchSubmittableChangeEvent(this.editBuffer)}updateItem(t){const e=n.BufferingDataProviderUtils.updateItem(t,this.editBuffer);this.dispatchEvent(e),this.dispatchSubmittableChangeEvent(this.editBuffer)}addItem(t,e){const i=Object.assign({},t);null===t.metadata.key&&(i.metadata=Object.assign({},t.metadata),i.metadata.key=n.BufferingDataProviderUtils.generateKey(t.data,this.customKeyGenerator));const r=n.BufferingDataProviderUtils.addItem(i,this.editBuffer,this.lastIterator,e);this.dispatchEvent(r),this.dispatchSubmittableChangeEvent(this.editBuffer)}fetchByOffset(t){return n.BufferingDataProviderUtils.fetchByOffset(t,this.editBuffer,this.dataProvider)}fetchFirst(t){this.lastSortCriteria=t?t.sortCriteria:null;const e=this.dataProvider.fetchFirst(t)[Symbol.asyncIterator]();return this.lastIterator=new this.AsyncIterator(this,e,t),new this.AsyncIterable(this,this.lastIterator)}getCapability(t){return n.BufferingDataProviderUtils.getCapability(t,this.dataProvider)}getTotalSize(){return n.BufferingDataProviderUtils.getTotalSize(this.dataProvider,this.editBuffer)}isEmpty(){return n.BufferingDataProviderUtils.isEmpty(this.editBuffer,this.dataProvider)}getSubmittableItems(){return n.BufferingDataProviderUtils.getSubmittableItems(this.editBuffer)}resetAllUnsubmittedItems(){n.BufferingDataProviderUtils.resetAllUnsubmittedItems(this.editBuffer),this.dispatchSubmittableChangeEvent(this.editBuffer),this.dispatchEvent(new e.DataProviderRefreshEvent)}resetUnsubmittedItem(t){const e=this.editBuffer.getUnsubmittedItems(),i=new Set,r=e.get(t);r&&(i.add(t),e.delete(t),this.dispatchSubmittableChangeEvent(this.editBuffer),n.BufferingDataProviderUtils.resetUnsubmittedItem(r,this.editBuffer,this.dataProvider,this.lastIterator,i).then(t=>{this.dispatchEvent(t)}))}setItemStatus(t,e,i,r){const a=n.BufferingDataProviderUtils.setItemStatus(t,e,this.generatedKeyMap,this.editBuffer,i,r);a&&this.dispatchSubmittableChangeEvent(a)}dispatchSubmittableChangeEvent(t){const e=n.BufferingDataProviderUtils.getSubmittableItems(t),i=new s.BufferingDataProviderSubmittableChangeEvent(e);this.dispatchEvent(i)}_handleRefreshEvent(t){this.dataBeforeUpdated=new Map;const e=this.editBuffer.getUnsubmittedItems(),i=new Set;e.forEach(t=>{"remove"!==t.operation&&"update"!==t.operation||i.add(t.item.metadata.key)}),i.size>0?this.dataProvider.fetchByKeys({keys:i}).then(r=>{r.results.forEach((t,e)=>{i.delete(e)}),i.forEach(t=>{e.delete(t)}),this.dispatchEvent(t)}):this.dispatchEvent(t)}_addEventListeners(){this.dataProvider.addEventListener(d._REFRESH,this._handleRefreshEvent.bind(this)),this.dataProvider.addEventListener(d._MUTATE,t=>{this.dataBeforeUpdated=new Map;const e=n.BufferingDataProviderUtils.handleMutateEvent(t,this.editBuffer,this.lastIterator,this.generatedKeyMap,this.lastSortCriteria);this.dispatchEvent(e)})}}return d._REFRESH="refresh",d._MUTATE="mutate",i.EventTargetMixin.applyMixin(d),t._registerLegacyNamespaceProp("BufferingDataProvider",d),d});
//# sourceMappingURL=ojbufferingdataprovider.js.map