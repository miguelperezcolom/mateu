{"version":3,"file":"FilePickerWebElement.js","sourceRoot":"","sources":["FilePickerWebElement.ts"],"names":[],"mappings":";;;AACA,yEAAsE;AACtE,yFAG2D;AAE3D;;;;GAIG;AACH,MAAa,oBAAqB,SAAQ,mDAAwB;IAChE;;;;;;;OAOG;IACH,KAAK,CAAC,QAAQ,CAAC,KAA4C;QACzD,OAAO,IAAA,4BAAY,EAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED;;;;;;;;;OASG;IACH,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,MAAiB,EAAE,KAA4C;QACzF,OAAO,IAAA,kCAAkB,EAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;CACF;AA1BD,oDA0BC","sourcesContent":["import { WebDriver } from 'selenium-webdriver';\nimport { FilePickerWebElementBase } from './FilePickerWebElementBase';\nimport {\n  doSelect as doSelectUtil,\n  setupPickFiles as setupPickFilesUtil\n} from '@oracle/oraclejet-webdriver/lib/file-picker-utils';\n\n/**\n * The component WebElement for [oj-c-file-picker](../../jsdocs/oj-c.FilePicker.html).\n * Do not instantiate this class directly, instead, use\n * [findFilePicker](../functions/findFilePicker.html).\n */\nexport class FilePickerWebElement extends FilePickerWebElementBase {\n  /**\n   * Takes an Array of objects containing file paths + types.\n   * These files will be read from the local filesystem and then sent\n   * to the oj-file-picker to simulate user file selection. Only the basename of\n   * the file will be sent, not the entire path to make it consistent with how\n   * the browser sets the value.\n   * @param files An array of objects containing the path and type of selected files\n   */\n  async doSelect(files: Array<{ path: string; type: string }>) {\n    return doSelectUtil(this, files);\n  }\n\n  /**\n   * This method should be called right before ojfilepickerutils.pickFiles\n   * Takes the webdriver and an Array of objects containing file paths + types.\n   * These files will be read from the local filesystem and then sent\n   * to the pickFiles method to simulate user file selection. Only the basename of\n   * the file will be sent, not the entire path to make it consistent with how\n   * the browser sets the value.\n   * @param driver the Webdriver of the test\n   * @param files An array of objects containing the path and type of selected files\n   */\n  static async setupPickFiles(driver: WebDriver, files: Array<{ path: string; type: string }>) {\n    return setupPickFilesUtil(driver, files);\n  }\n}\n"]}