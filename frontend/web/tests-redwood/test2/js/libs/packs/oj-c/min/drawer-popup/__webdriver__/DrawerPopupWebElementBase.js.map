{"version":3,"file":"DrawerPopupWebElementBase.js","sourceRoot":"","sources":["DrawerPopupWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,yBAA0B,SAAQ,uBAAY;IACzD;;;;;OAKG;IACI,YAAY,CAAC,MAAe;QACjC,OAAO,IAAI,CAAC,WAAW,CAAU,QAAQ,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;IAED;;;;;OAKG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,WAAW,CAAU,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAS,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;OAKG;IACI,OAAO;QACZ,OAAO,IAAI,CAAC,WAAW,CAAS,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAS,aAAa,CAAC,CAAC;IACjD,CAAC;IAED;;;;;OAKG;IACI,eAAe;QACpB,OAAO,IAAI,CAAC,WAAW,CAAS,cAAc,CAAC,CAAC;IAClD,CAAC;IAED;;;;;OAKG;IACI,kBAAkB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAS,iBAAiB,CAAC,CAAC;IACrD,CAAC;CACF;AAtED,8DAsEC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-drawer-popup WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, DrawerPopupWebElement.ts.\n */\nexport class DrawerPopupWebElementBase extends OjWebElement {\n  /**\n   * Sets the value of <code>opened</code> property.\n   * Specifies whether the Drawer is open.\n   * @param opened The value to set for <code>opened</code>\n   *\n   */\n  public changeOpened(opened: boolean): Promise<void> {\n    return this.setProperty<boolean>('opened', opened);\n  }\n\n  /**\n   * Gets the value of <code>opened</code> property.\n   * Specifies whether the Drawer is open.\n   * @return The value of <code>opened</code> property.\n   *\n   */\n  public getOpened(): Promise<boolean> {\n    return this.getProperty<boolean>('opened');\n  }\n\n  /**\n   * Gets the value of <code>modality</code> property.\n   * Controls the modality of the drawer.\n   * @return The value of <code>modality</code> property.\n   *\n   */\n  public getModality(): Promise<string> {\n    return this.getProperty<string>('modality');\n  }\n\n  /**\n   * Gets the value of <code>edge</code> property.\n   * Specifies at what edge the drawer opens.\n   * @return The value of <code>edge</code> property.\n   *\n   */\n  public getEdge(): Promise<string> {\n    return this.getProperty<string>('edge');\n  }\n\n  /**\n   * Gets the value of <code>autoDismiss</code> property.\n   * Specifies the close auto-dismiss behaviour to close the drawer.\n   * @return The value of <code>autoDismiss</code> property.\n   *\n   */\n  public getAutoDismiss(): Promise<string> {\n    return this.getProperty<string>('autoDismiss');\n  }\n\n  /**\n   * Gets the value of <code>closeGesture</code> property.\n   * Specifies whether a gesture closes the drawer.\n   * @return The value of <code>closeGesture</code> property.\n   *\n   */\n  public getCloseGesture(): Promise<string> {\n    return this.getProperty<string>('closeGesture');\n  }\n\n  /**\n   * Gets the value of <code>backgroundColor</code> property.\n   * Specifies background color of the Drawer.\n   * @return The value of <code>backgroundColor</code> property.\n   *\n   */\n  public getBackgroundColor(): Promise<string> {\n    return this.getProperty<string>('backgroundColor');\n  }\n}\n"]}