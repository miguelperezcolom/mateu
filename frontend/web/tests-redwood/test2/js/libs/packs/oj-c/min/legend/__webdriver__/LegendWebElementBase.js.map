{"version":3,"file":"LegendWebElementBase.js","sourceRoot":"","sources":["LegendWebElementBase.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AAEpE;;;;;GAKG;AACH,MAAa,oBAAqB,SAAQ,uBAAY;IACpD;;;;;OAKG;IACI,OAAO;QACZ,OAAO,IAAI,CAAC,WAAW,CAAO,MAAM,CAAC,CAAC;IACxC,CAAC;IAED;;;;;OAKG;IACI,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,CAAS,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;OAKG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,WAAW,CAAS,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;OAKG;IACI,sBAAsB,CAAC,gBAA+B;QAC3D,OAAO,IAAI,CAAC,WAAW,CAAgB,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;IAC/E,CAAC;IAED;;;;;OAKG;IACI,mBAAmB;QACxB,OAAO,IAAI,CAAC,WAAW,CAAgB,kBAAkB,CAAC,CAAC;IAC7D,CAAC;IAED;;;;;OAKG;IACI,sBAAsB;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAS,qBAAqB,CAAC,CAAC;IACzD,CAAC;IAED;;;;;OAKG;IACI,2BAA2B,CAAC,qBAAoC;QACrE,OAAO,IAAI,CAAC,WAAW,CAAgB,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;IACzF,CAAC;IAED;;;;;OAKG;IACI,wBAAwB;QAC7B,OAAO,IAAI,CAAC,WAAW,CAAgB,uBAAuB,CAAC,CAAC;IAClE,CAAC;IAED;;;;;OAKG;IACI,gBAAgB;QACrB,OAAO,IAAI,CAAC,WAAW,CAAS,eAAe,CAAC,CAAC;IACnD,CAAC;IAED;;;;;OAKG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAS,aAAa,CAAC,CAAC;IACjD,CAAC;IAED;;;;;OAKG;IACI,eAAe;QACpB,OAAO,IAAI,CAAC,WAAW,CAAS,cAAc,CAAC,CAAC;IAClD,CAAC;IAED;;;;;OAKG;IACI,cAAc;QACnB,OAAO,IAAI,CAAC,WAAW,CAAS,aAAa,CAAC,CAAC;IACjD,CAAC;IAED;;;;;OAKG;IACI,YAAY;QACjB,OAAO,IAAI,CAAC,WAAW,CAAY,WAAW,CAAC,CAAC;IAClD,CAAC;IAED;;;;;OAKG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,WAAW,CAAS,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;OAKG;IACI,oBAAoB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAoB,mBAAmB,CAAC,CAAC;IAClE,CAAC;IAED;;;;;OAKG;IACI,qBAAqB;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAS,oBAAoB,CAAC,CAAC;IACxD,CAAC;IAED;;;;;OAKG;IACI,oBAAoB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAoB,mBAAmB,CAAC,CAAC;IAClE,CAAC;CACF;AA1KD,oDA0KC","sourcesContent":["import { OjWebElement } from '@oracle/oraclejet-webdriver/elements';\n\n/**\n * This is the base class for oj-c-legend WebElement, and is generated from the\n * component's metadata. Do not modify these contents since they'll be replaced\n * during the next generation.\n * Put overrides into the WebElements's subclass, LegendWebElement.ts.\n */\nexport class LegendWebElementBase extends OjWebElement {\n  /**\n   * Gets the value of <code>data</code> property.\n   * Specifies the DataProvider for the sections and items of the legend.\n   * @return The value of <code>data</code> property.\n   * @deprecated Since 17.1.0. Data sets from a DataProvider cannot be sent to WebDriverJS; use ViewModels or page variables instead.\n   */\n  public getData(): Promise<null> {\n    return this.getProperty<null>('data');\n  }\n\n  /**\n   * Gets the value of <code>drilling</code> property.\n   * Specifies whether drilling is enabled.\n   * @return The value of <code>drilling</code> property.\n   *\n   */\n  public getDrilling(): Promise<string> {\n    return this.getProperty<string>('drilling');\n  }\n\n  /**\n   * Gets the value of <code>halign</code> property.\n   * Defines the horizontal alignment of the legend contents.\n   * @return The value of <code>halign</code> property.\n   *\n   */\n  public getHalign(): Promise<string> {\n    return this.getProperty<string>('halign');\n  }\n\n  /**\n   * Sets the value of <code>hiddenCategories</code> property.\n   * An array of categories that will be hidden.\n   * @param hiddenCategories The value to set for <code>hiddenCategories</code>\n   *\n   */\n  public changeHiddenCategories(hiddenCategories: Array<string>): Promise<void> {\n    return this.setProperty<Array<string>>('hiddenCategories', hiddenCategories);\n  }\n\n  /**\n   * Gets the value of <code>hiddenCategories</code> property.\n   * An array of categories that will be hidden.\n   * @return The value of <code>hiddenCategories</code> property.\n   *\n   */\n  public getHiddenCategories(): Promise<Array<string>> {\n    return this.getProperty<Array<string>>('hiddenCategories');\n  }\n\n  /**\n   * Gets the value of <code>hideAndShowBehavior</code> property.\n   * Defines whether the legend can be used to initiate hide and show behavior on referenced data items.\n   * @return The value of <code>hideAndShowBehavior</code> property.\n   *\n   */\n  public getHideAndShowBehavior(): Promise<string> {\n    return this.getProperty<string>('hideAndShowBehavior');\n  }\n\n  /**\n   * Sets the value of <code>highlightedCategories</code> property.\n   * An array of categories that will be highlighted.\n   * @param highlightedCategories The value to set for <code>highlightedCategories</code>\n   *\n   */\n  public changeHighlightedCategories(highlightedCategories: Array<string>): Promise<void> {\n    return this.setProperty<Array<string>>('highlightedCategories', highlightedCategories);\n  }\n\n  /**\n   * Gets the value of <code>highlightedCategories</code> property.\n   * An array of categories that will be highlighted.\n   * @return The value of <code>highlightedCategories</code> property.\n   *\n   */\n  public getHighlightedCategories(): Promise<Array<string>> {\n    return this.getProperty<Array<string>>('highlightedCategories');\n  }\n\n  /**\n   * Gets the value of <code>hoverBehavior</code> property.\n   * Defines the behavior applied when hovering over a legend item.\n   * @return The value of <code>hoverBehavior</code> property.\n   *\n   */\n  public getHoverBehavior(): Promise<string> {\n    return this.getProperty<string>('hoverBehavior');\n  }\n\n  /**\n   * Gets the value of <code>orientation</code> property.\n   * Defines the orientation of the legend, which determines the direction in which the legend items are laid out.\n   * @return The value of <code>orientation</code> property.\n   *\n   */\n  public getOrientation(): Promise<string> {\n    return this.getProperty<string>('orientation');\n  }\n\n  /**\n   * Gets the value of <code>symbolHeight</code> property.\n   * The height of the legend symbol in pixels.\n   * @return The value of <code>symbolHeight</code> property.\n   *\n   */\n  public getSymbolHeight(): Promise<number> {\n    return this.getProperty<number>('symbolHeight');\n  }\n\n  /**\n   * Gets the value of <code>symbolWidth</code> property.\n   * The width of the legend symbol in pixels.\n   * @return The value of <code>symbolWidth</code> property.\n   *\n   */\n  public getSymbolWidth(): Promise<number> {\n    return this.getProperty<number>('symbolWidth');\n  }\n\n  /**\n   * Gets the value of <code>textStyle</code> property.\n   * The CSS style object defining the style of the legend item text.\n   * @return The value of <code>textStyle</code> property.\n   *\n   */\n  public getTextStyle(): Promise<TextStyle> {\n    return this.getProperty<TextStyle>('textStyle');\n  }\n\n  /**\n   * Gets the value of <code>valign</code> property.\n   * Defines the vertical alignment of the legend contents.\n   * @return The value of <code>valign</code> property.\n   *\n   */\n  public getValign(): Promise<string> {\n    return this.getProperty<string>('valign');\n  }\n\n  /**\n   * Gets the value of <code>sectionTitleStyle</code> property.\n   * The CSS style object defining the style of the section titles' text.\n   * @return The value of <code>sectionTitleStyle</code> property.\n   *\n   */\n  public getSectionTitleStyle(): Promise<SectionTitleStyle> {\n    return this.getProperty<SectionTitleStyle>('sectionTitleStyle');\n  }\n\n  /**\n   * Gets the value of <code>sectionTitleHalign</code> property.\n   * The horizontal alignment of the section titles.\n   * @return The value of <code>sectionTitleHalign</code> property.\n   *\n   */\n  public getSectionTitleHalign(): Promise<string> {\n    return this.getProperty<string>('sectionTitleHalign');\n  }\n\n  /**\n   * Gets the value of <code>contextMenuConfig</code> property.\n   * Specifies a context menu configuration.\n   * @return The value of <code>contextMenuConfig</code> property.\n   *\n   */\n  public getContextMenuConfig(): Promise<ContextMenuConfig> {\n    return this.getProperty<ContextMenuConfig>('contextMenuConfig');\n  }\n}\nexport interface TextStyle {\n  /**\n   *\n   */\n  color: string;\n  /**\n   *\n   */\n  fontFamily: string;\n  /**\n   *\n   */\n  fontSize: string;\n  /**\n   *\n   */\n  fontStyle: string;\n  /**\n   *\n   */\n  fontWeight: string;\n  /**\n   *\n   */\n  textDecoration: string;\n}\nexport interface SectionTitleStyle {\n  /**\n   *\n   */\n  color: string;\n  /**\n   *\n   */\n  fontFamily: string;\n  /**\n   *\n   */\n  fontSize: string;\n  /**\n   *\n   */\n  fontStyle: string;\n  /**\n   *\n   */\n  fontWeight: string;\n  /**\n   *\n   */\n  textDecoration: string;\n}\nexport interface ContextMenuConfig {\n  /**\n   *\n   */\n  accessibleLabel: string;\n}\n"]}