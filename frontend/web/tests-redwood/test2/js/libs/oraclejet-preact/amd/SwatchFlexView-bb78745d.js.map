{"version":3,"file":"SwatchFlexView-bb78745d.js","sources":["../../src/PRIVATE_SwatchFlexView/SwatchFlexView.tsx"],"sourcesContent":["import { useCallback, useRef, useState } from 'preact/hooks';\nimport { useResizeObserver } from '../hooks/UNSAFE_useResizeObserver';\nimport { BaseSwatchView, getColCount } from '../PRIVATE_BaseSwatchView';\nimport { BaseSwatchViewPublicProps as Props } from './BaseSwatchView.types';\nimport { forwardRef, ForwardedRef, useImperativeHandle } from 'preact/compat';\n\ntype SwatchFlexViewProps<K extends string | number, D> = Props<K, D>;\ntype SizeInfo = {\n  swatchWidth?: number;\n  swatchHeight?: number;\n  containerWidth?: number;\n};\n\nexport const SwatchFlexView = forwardRef(\n  <K extends string | number, D>(\n    props: SwatchFlexViewProps<K, D>,\n    ref?: ForwardedRef<HTMLDivElement>\n  ) => {\n    const rootRef = useRef<HTMLDivElement>(null);\n    useImperativeHandle(ref!, () => rootRef.current!, [rootRef]);\n\n    const [size, setSize] = useState<SizeInfo>({});\n    const updateSwatchSize = (swatchWidth: number, swatchHeight: number) => {\n      setSize((size: SizeInfo) => ({ ...size, swatchWidth, swatchHeight }));\n    };\n\n    const handleResize = useCallback(\n      (entry: ResizeObserverEntry) => {\n        const containerWidth = entry.contentRect.width;\n        if (size.containerWidth !== containerWidth) {\n          setSize((size: SizeInfo) => ({ ...size, containerWidth }));\n        }\n      },\n      [size]\n    );\n    useResizeObserver(rootRef, handleResize);\n\n    const columns = getColCount(8, size.swatchWidth, size.containerWidth);\n    const swatchSize = { width: size.swatchWidth, height: size.swatchHeight };\n\n    return (\n      <BaseSwatchView\n        {...props}\n        ref={rootRef}\n        columns={columns}\n        swatchSize={swatchSize}\n        updateSwatchSize={updateSwatchSize}\n      />\n    );\n  }\n);\n"],"names":["SwatchFlexView","forwardRef","props","ref","rootRef","useRef","useImperativeHandle","current","size","setSize","useState","handleResize","useCallback","entry","containerWidth","contentRect","width","useResizeObserver","columns","getColCount","swatchWidth","swatchSize","height","swatchHeight","_jsx","BaseSwatchView","updateSwatchSize"],"mappings":"sKAaa,MAAAA,EAAiBC,EAAUA,YACtC,CACEC,EACAC,KAEA,MAAMC,EAAUC,SAAuB,MACvCC,EAAmBA,oBAACH,GAAM,IAAMC,EAAQG,SAAU,CAACH,IAEnD,MAAOI,EAAMC,GAAWC,EAAQA,SAAW,CAAE,GAKvCC,EAAeC,eAClBC,IACC,MAAMC,EAAiBD,EAAME,YAAYC,MACrCR,EAAKM,iBAAmBA,GAC1BL,GAASD,IAAoB,IAAKA,EAAMM,oBACzC,GAEH,CAACN,IAEHS,oBAAkBb,EAASO,GAE3B,MAAMO,EAAUC,EAAAA,YAAY,EAAGX,EAAKY,YAAaZ,EAAKM,gBAChDO,EAAa,CAAEL,MAAOR,EAAKY,YAAaE,OAAQd,EAAKe,cAE3D,OACEC,MAACC,EAAcA,eAAA,IACTvB,EACJC,IAAKC,EACLc,QAASA,EACTG,WAAYA,EACZK,iBAxBqB,CAACN,EAAqBG,KAC7Cd,GAASD,QAAyBA,EAAMY,cAAaG,kBAAgB,GAyBrE"}