define(['exports', 'preact/jsx-runtime', '@testing-library/preact', 'chai', '@testing-library/user-event', './listViewTestFixtures-b39dbb65', './testHelpers-feb6ef7b'], (function(t,e,a,i,s,c,n){"use strict";function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var d=r(s);t.testTabbableMode=t=>{it("acts as single tab stop in composition",(async()=>{const s=c.populateData(100,!0).map((t=>({data:t,metadata:{key:t.id}})));a.render(e.jsx(t,{data:s}));const r=await n.getRoot();await d.default.tab(),i.expect(a.screen.getByText("Preceding Button").matches(":focus")).to.be.true,await d.default.tab(),i.expect(r.matches(":focus")).to.be.true,await d.default.tab(),i.expect(a.screen.getByText("Following Button").matches(":focus")).to.be.true,await d.default.tab({shift:!0}),i.expect(r.matches(":focus")).to.be.true,await d.default.tab({shift:!0}),i.expect(a.screen.getByText("Preceding Button").matches(":focus")).to.be.true})),it("enters interactive mode with keyboard via F2",(async()=>{const s=c.populateData(100,!0).map((t=>({data:t,metadata:{key:t.id}}))),r=a.render(e.jsx(t,{data:s})),o=await n.getRoot();await d.default.tab(),await d.default.tab(),i.expect(o.matches(":focus")).to.be.true,r.rerender(e.jsx(t,{data:s}));const u=a.screen.getByTestId("input-0");i.expect(u.getAttribute("tabindex")).equals("-1"),a.fireEvent.keyDown(o,{key:"F2"}),i.expect(u.getAttribute("tabindex")).equals("0")})),it("leaves interactive mode with keyboard via ESC",(async()=>{const s=c.populateData(100,!0).map((t=>({data:t,metadata:{key:t.id}})));a.render(e.jsx(t,{data:s}));const r=await n.getRoot(),o=a.screen.getByTestId("input-0");i.expect(o.getAttribute("tabindex")).equals("-1"),await d.default.click(o),i.expect(o.getAttribute("tabindex")).equals("0"),a.fireEvent.keyDown(o,{key:"Escape"}),await a.waitFor((()=>{i.expect(r.matches(":focus"),"active element should be grid").to.be.true}))})),it("enters interactive mode again with keyboard via arrow keys and F2",(async()=>{const s=c.populateData(100,!0).map((t=>({data:t,metadata:{key:t.id}})));a.render(e.jsx(t,{data:s}));const r=await n.getRoot(),o=await n.getContents();await d.default.click(o[0]),a.fireEvent.keyDown(r,{key:"ArrowDown"});const u=a.screen.getByTestId("input-1");i.expect(u.getAttribute("tabindex")).equals("-1"),a.fireEvent.keyDown(r,{key:"F2"}),i.expect(u.getAttribute("tabindex")).equals("0")})),it("enters interactive mode with click on input",(async()=>{const s=c.populateData(100,!0).map((t=>({data:t,metadata:{key:t.id}}))),n=a.render(e.jsx(t,{data:s})),r=a.screen.getByTestId("input-0");i.expect(r.getAttribute("tabindex")).equals("-1"),await d.default.click(r),n.rerender(e.jsx(t,{data:s})),i.expect(r.getAttribute("tabindex")).equals("0"),i.expect(r.matches(":focus")).to.be.true,await d.default.tab(),i.expect(a.screen.getByTestId("button-0").matches(":focus")).to.be.true})),xit("leaves interactive mode with click outside",(async()=>{const s=c.populateData(100,!0).map((t=>({data:t,metadata:{key:t.id}}))),n=a.render(e.jsx(t,{data:s})),r=a.screen.getByTestId("input-0");i.expect(r.getAttribute("tabindex")).equals("-1"),await d.default.click(r),n.rerender(e.jsx(t,{data:s})),i.expect(r.getAttribute("tabindex")).equals("0"),i.expect(r.matches(":focus")).to.be.true;const o=a.screen.getByText("Preceding Button");await d.default.click(o),i.expect(o.matches(":focus")).to.be.true,n.rerender(e.jsx(t,{data:s})),i.expect(r.getAttribute("tabindex")).equals("-1")}))}}));
//# sourceMappingURL=listViewTabbableModeTests-6be72d95.js.map
