{"version":3,"file":"useTouch-37489bb5.js","sources":["../../src/hooks/UNSAFE_useTouch/useTouch.ts"],"sourcesContent":["import { useToggle } from '../UNSAFE_useToggle';\n\nexport type TouchOptions = {\n  isDisabled?: boolean;\n};\n\n/**\n * Get status on whether target has touch or not\n * @returns\n */\nexport function useTouch(settings: TouchOptions = { isDisabled: false }): {\n  isTouch: boolean;\n  touchProps: Record<string, any>;\n} {\n  const { bool, setTrue, setFalse } = useToggle(false);\n  const touchProps = settings.isDisabled\n    ? {}\n    : {\n        onTouchStart: setTrue,\n        onTouchEnd: setFalse\n      };\n  return {\n    isTouch: settings.isDisabled ? false : bool,\n    touchProps: touchProps\n  };\n}\n"],"names":["settings","isDisabled","bool","setTrue","setFalse","useToggle","touchProps","onTouchStart","onTouchEnd","isTouch"],"mappings":"iFAUM,SAAmBA,EAAyB,CAAEC,YAAY,IAI9D,MAAMC,KAAEA,EAAIC,QAAEA,EAAOC,SAAEA,GAAaC,EAAAA,WAAU,GACxCC,EAAaN,EAASC,WACxB,CAAE,EACF,CACEM,aAAcJ,EACdK,WAAYJ,GAElB,MAAO,CACLK,SAAST,EAASC,YAAqBC,EACvCI,WAAYA,EAEhB"}