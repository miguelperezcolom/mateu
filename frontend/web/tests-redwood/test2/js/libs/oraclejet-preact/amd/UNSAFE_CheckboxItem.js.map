{"version":3,"file":"UNSAFE_CheckboxItem.js","sources":["../../src/UNSAFE_CheckboxItem/CheckboxItem.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentProps } from 'preact';\nimport { useCallback } from 'preact/hooks';\n\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { useCheckboxSetContext } from '../UNSAFE_CheckboxSet';\n\nimport { CheckboxControl } from '../PRIVATE_CheckboxControl/CheckboxControl';\nimport { InlineUserAssistance } from '#UNSAFE_UserAssistance';\n\ntype InlineUserAssistanceProps = ComponentProps<typeof InlineUserAssistance>;\n\ntype Props = {\n  /**\n   * Text that describes the checkbox item value.\n   */\n  children: string;\n  /**\n   * Text to provide guidance to help the user understand what data to enter.\n   */\n  assistiveText?: InlineUserAssistanceProps['assistiveText'];\n  /**\n   * Help source URL associated with the component.\n   */\n  helpSourceLink?: InlineUserAssistanceProps['helpSourceLink'];\n  /**\n   * Custom text to be rendered for the `helpSourceLink`.\n   */\n  helpSourceText?: InlineUserAssistanceProps['helpSourceText'];\n  /**\n   * Value of the checkbox item.\n   */\n  value: string | number;\n};\n\n/**\n * CheckboxItem is a child component of CheckboxSet. It contains the checkbox, label, and assistive text.\n */\nconst CheckboxItem = ({\n  children,\n  value,\n  assistiveText,\n  helpSourceLink,\n  helpSourceText\n}: Props) => {\n  const { isReadonly: isFormReadonly, isDisabled: isFormDisabled } = useFormContext();\n  const { isDisabled: isFieldDisabled, isReadonly: isFieldReadonly } = useFormFieldContext();\n  const { name, onCommit, value: groupValue } = useCheckboxSetContext();\n\n  const isChecked = groupValue?.has(value);\n  const isDisabled = isFieldDisabled ?? isFormDisabled;\n  const isReadonly = isFieldReadonly ?? isFormReadonly;\n\n  const onChangeHandler = useCallback(\n    (e: Event) => {\n      // return early on keyup if key isn't spacebar\n      const { key } = e as KeyboardEvent;\n      if (key !== undefined && key !== ' ') {\n        return;\n      }\n\n      // create a new set from the previous and add or remove the changed value\n      const newGroupValue = new Set(groupValue);\n      newGroupValue.has(value) ? newGroupValue.delete(value) : newGroupValue.add(value);\n\n      onCommit?.({\n        previousValue: groupValue,\n        value: newGroupValue.size > 0 ? newGroupValue : undefined\n      });\n    },\n    [groupValue, onCommit, value]\n  );\n\n  return (\n    <CheckboxControl\n      name={name}\n      value={value}\n      {...(!isReadonly && !isDisabled\n        ? { onChange: onChangeHandler, onKeyUp: onChangeHandler }\n        : {})}\n      assistiveText={assistiveText}\n      helpSourceLink={helpSourceLink}\n      helpSourceText={helpSourceText}\n      isChecked={isChecked}\n      isDisabled={isDisabled}\n      isReadonly={isReadonly}>\n      {children}\n    </CheckboxControl>\n  );\n};\n\nexport { CheckboxItem };\n"],"names":["children","value","assistiveText","helpSourceLink","helpSourceText","isReadonly","isFormReadonly","isDisabled","isFormDisabled","useFormContext","isFieldDisabled","isFieldReadonly","useFormFieldContext","name","onCommit","groupValue","useCheckboxSetContext","isChecked","has","onChangeHandler","useCallback","e","key","undefined","newGroupValue","Set","delete","add","previousValue","size","_jsx","jsx","CheckboxControl","onChange","onKeyUp"],"mappings":"05UA6CqB,EACnBA,WACAC,QACAC,gBACAC,iBACAC,qBAEA,MAAQC,WAAYC,EAAgBC,WAAYC,GAAmBC,EAAAA,kBAC3DF,WAAYG,EAAiBL,WAAYM,GAAoBC,EAAAA,uBAC/DC,KAAEA,EAAIC,SAAEA,EAAUb,MAAOc,GAAeC,EAAAA,wBAExCC,EAAYF,GAAYG,IAAIjB,GAC5BM,EAAaG,GAAmBF,EAChCH,EAAaM,GAAmBL,EAEhCa,EAAkBC,eACrBC,IAEC,MAAMC,IAAEA,GAAQD,EAChB,QAAYE,IAARD,GAA6B,MAARA,EACvB,OAIF,MAAME,EAAgB,IAAIC,IAAIV,GAC9BS,EAAcN,IAAIjB,GAASuB,EAAcE,OAAOzB,GAASuB,EAAcG,IAAI1B,GAE3Ea,IAAW,CACTc,cAAeb,EACfd,MAAOuB,EAAcK,KAAO,EAAIL,OAAgBD,GAChD,GAEJ,CAACR,EAAYD,EAAUb,IAGzB,OACE6B,EAACC,IAAAC,kBACC,CAAAnB,KAAMA,EACNZ,MAAOA,KACDI,GAAeE,EAEjB,CAAE,EADF,CAAE0B,SAAUd,EAAiBe,QAASf,GAE1CjB,cAAeA,EACfC,eAAgBA,EAChBC,eAAgBA,EAChBa,UAAWA,EACXV,WAAYA,EACZF,WAAYA,EAAUL,SACrBA,GAEH"}