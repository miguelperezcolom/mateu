{"version":3,"file":"useDraggable-7f591a3d.js","sources":["../../src/hooks/PRIVATE_useDraggable/useDraggable.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useCallback, useRef } from 'preact/hooks';\nimport type { RefObject } from 'preact';\nimport { getContainingBlockElem } from '../../utils/PRIVATE_floatingUtils';\nimport { Position, Rect } from '../../utils/UNSAFE_flexibleComponentUtils';\n\nexport type DraggableProps = {\n  onMouseDown?: (event: MouseEvent) => void;\n  onMouseEnter?: (event: MouseEvent) => void;\n  onMouseLeave?: (event: MouseEvent) => void;\n};\n\ntype useDraggableProps = {\n  isDisabled?: boolean;\n  containerRef?: RefObject<HTMLElement>;\n  onDragStart?: (pos: Position) => void;\n  onDragMove?: (pos: Position) => void;\n  onDragEnd?: (pos: Position) => void;\n};\n\n/**\n * A hook with draggable implementation.\n * Returns event handlers that can enhance the target element with drag capability.\n *\n * @param isDisabled determines if the hook is disabled\n * @returns an object with the 'draggableProps' properties.\n */\nexport function useDraggable({\n  isDisabled = false,\n  containerRef,\n  onDragMove,\n  onDragStart,\n  onDragEnd\n}: useDraggableProps): {\n  draggableProps: DraggableProps;\n} {\n  const isDragging = useRef<boolean>(false);\n  const startPosition = useRef<Position>();\n  const offset = useRef<Position>({ x: 0, y: 0 });\n  const initialMousePosition = useRef<Position>({ x: 0, y: 0 });\n  const initialClientRect = useRef<Rect>({ x: 0, y: 0, width: 0, height: 0 });\n\n  const constrainPos = useCallback(\n    (x: number, y: number): Position => {\n      const elem = containerRef?.current;\n\n      const pos = { x, y };\n      if (!elem) return pos;\n\n      const containingBlock = getContainingBlockElem(elem);\n\n      const boundingRect = containingBlock?.getBoundingClientRect();\n      const dialogRect = elem.getBoundingClientRect();\n\n      const limitLeft = boundingRect ? boundingRect.left : 0;\n      const limitTop = boundingRect ? boundingRect.top : 0;\n      const limitRight = boundingRect ? boundingRect.right : window.innerWidth;\n      const limitBottom = boundingRect ? boundingRect.bottom : window.innerHeight;\n\n      if (pos.x < limitLeft) {\n        pos.x = limitLeft;\n      }\n      if (pos.x + dialogRect.width > limitRight) {\n        pos.x = limitRight - dialogRect.width;\n      }\n      if (pos.y < limitTop) {\n        pos.y = limitTop;\n      }\n      if (pos.y + dialogRect.height > limitBottom) {\n        pos.y = limitBottom - dialogRect.height;\n      }\n      return pos;\n    },\n    [containerRef]\n  );\n\n  /**\n   * Handles the mousemove events while the dragging is activated\n   */\n  const handleDrag = useCallback(\n    (event: MouseEvent) => {\n      if (!isDragging.current || !startPosition.current) return;\n\n      const left = event.pageX - initialMousePosition.current.x;\n      const top = event.pageY - initialMousePosition.current.y;\n\n      const newPos = constrainPos(\n        initialClientRect.current.x + left,\n        initialClientRect.current.y + top\n      );\n\n      event.stopPropagation();\n      event.preventDefault();\n\n      onDragMove?.({\n        x: newPos.x,\n        y: newPos.y\n      });\n    },\n    [onDragMove, constrainPos]\n  );\n\n  /**\n   * handles the drag end\n   */\n  const endDrag = useCallback(\n    (event: MouseEvent) => {\n      if (!isDragging.current || !startPosition.current) return;\n\n      isDragging.current = false;\n\n      const left = event.pageX - initialMousePosition.current.x;\n      const top = event.pageY - initialMousePosition.current.y;\n\n      const newPos = constrainPos(\n        initialClientRect.current.x + left,\n        initialClientRect.current.y + top\n      );\n\n      document.removeEventListener('mousemove', handleDrag, true);\n      document.removeEventListener('mouseup', endDrag, true);\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      onDragEnd?.({\n        x: newPos.x,\n        y: newPos.y\n      });\n    },\n    [onDragEnd, handleDrag, constrainPos]\n  );\n\n  /**\n   * handles the start of dragging\n   */\n  const startDrag = useCallback(\n    (event: MouseEvent) => {\n      const findPos = (element: Element) => {\n        let elem = element as HTMLElement;\n        let curLeft = 0;\n        let curTop = 0;\n        if (elem.offsetParent) {\n          do {\n            curLeft += elem.offsetLeft;\n            curTop += elem.offsetTop;\n          } while ((elem = elem.offsetParent as HTMLElement));\n        }\n        return { left: curLeft, top: curTop };\n      };\n\n      const elem = event.currentTarget as HTMLElement;\n\n      if (!elem) return;\n\n      const pos = findPos(elem);\n\n      isDragging.current = true;\n\n      elem.style.cursor = 'move';\n\n      document.addEventListener('mousemove', handleDrag, true);\n      document.addEventListener('mouseup', endDrag, true);\n\n      startPosition.current = { x: pos.left, y: pos.top };\n      offset.current.x = event.offsetX;\n      offset.current.y = event.offsetY;\n      initialMousePosition.current = { x: event.pageX, y: event.pageY };\n      initialClientRect.current = elem.getBoundingClientRect();\n\n      onDragStart?.({\n        x: initialClientRect.current.x,\n        y: initialClientRect.current.y\n      });\n    },\n    [onDragStart, endDrag, handleDrag]\n  );\n\n  /**\n   * mouseenter event handler to change the mouse cursor when the drag sensitive area is hovered\n   */\n  const mouseEnter = useCallback(\n    (event: MouseEvent) => {\n      if (isDisabled) return;\n      const elem = event.currentTarget as HTMLElement;\n      if (elem) {\n        elem.style.cursor = 'move';\n      }\n    },\n    [isDisabled]\n  );\n\n  /**\n   * mouseleave event handler to restore the mouse cursor when the drag sensitive area is left\n   */\n  const mouseLeave = useCallback(\n    (event: MouseEvent) => {\n      if (isDisabled) return;\n      const elem = event.currentTarget as HTMLElement;\n      if (elem) {\n        elem.style.cursor = 'auto';\n      }\n    },\n    [isDisabled]\n  );\n\n  // return object\n  const draggableProps = isDisabled\n    ? {}\n    : {\n        onMouseDown: startDrag,\n        onMouseEnter: mouseEnter,\n        onMouseLeave: mouseLeave\n      };\n\n  return {\n    draggableProps: draggableProps\n  };\n}\n"],"names":["isDisabled","containerRef","onDragMove","onDragStart","onDragEnd","isDragging","useRef","startPosition","offset","x","y","initialMousePosition","initialClientRect","width","height","constrainPos","useCallback","elem","current","pos","containingBlock","getContainingBlockElem","boundingRect","getBoundingClientRect","dialogRect","limitLeft","left","limitTop","top","limitRight","right","window","innerWidth","limitBottom","bottom","innerHeight","handleDrag","event","pageX","pageY","newPos","stopPropagation","preventDefault","endDrag","document","removeEventListener","startDrag","currentTarget","element","curLeft","curTop","offsetParent","offsetLeft","offsetTop","findPos","style","cursor","addEventListener","offsetX","offsetY","mouseEnter","mouseLeave","draggableProps","onMouseDown","onMouseEnter","onMouseLeave"],"mappings":"0GAkCgB,UAAaA,WAC3BA,GAAa,EAAKC,aAClBA,EAAYC,WACZA,EAAUC,YACVA,EAAWC,UACXA,IAIA,MAAMC,EAAaC,UAAgB,GAC7BC,EAAgBD,EAAAA,SAChBE,EAASF,EAAAA,OAAiB,CAAEG,EAAG,EAAGC,EAAG,IACrCC,EAAuBL,EAAAA,OAAiB,CAAEG,EAAG,EAAGC,EAAG,IACnDE,EAAoBN,EAAAA,OAAa,CAAEG,EAAG,EAAGC,EAAG,EAAGG,MAAO,EAAGC,OAAQ,IAEjEC,EAAeC,EAAAA,aACnB,CAACP,EAAWC,KACV,MAAMO,EAAOhB,GAAciB,QAErBC,EAAM,CAAEV,IAAGC,KACjB,IAAKO,EAAM,OAAOE,EAElB,MAAMC,EAAkBC,yBAAuBJ,GAEzCK,EAAeF,GAAiBG,wBAChCC,EAAaP,EAAKM,wBAElBE,EAAYH,EAAeA,EAAaI,KAAO,EAC/CC,EAAWL,EAAeA,EAAaM,IAAM,EAC7CC,EAAaP,EAAeA,EAAaQ,MAAQC,OAAOC,WACxDC,EAAcX,EAAeA,EAAaY,OAASH,OAAOI,YAchE,OAZIhB,EAAIV,EAAIgB,IACVN,EAAIV,EAAIgB,GAENN,EAAIV,EAAIe,EAAWX,MAAQgB,IAC7BV,EAAIV,EAAIoB,EAAaL,EAAWX,OAE9BM,EAAIT,EAAIiB,IACVR,EAAIT,EAAIiB,GAENR,EAAIT,EAAIc,EAAWV,OAASmB,IAC9Bd,EAAIT,EAAIuB,EAAcT,EAAWV,QAE5BK,CAAG,GAEZ,CAAClB,IAMGmC,EAAapB,eAChBqB,IACC,IAAKhC,EAAWa,UAAYX,EAAcW,QAAS,OAEnD,MAAMQ,EAAOW,EAAMC,MAAQ3B,EAAqBO,QAAQT,EAClDmB,EAAMS,EAAME,MAAQ5B,EAAqBO,QAAQR,EAEjD8B,EAASzB,EACbH,EAAkBM,QAAQT,EAAIiB,EAC9Bd,EAAkBM,QAAQR,EAAIkB,GAGhCS,EAAMI,kBACNJ,EAAMK,iBAENxC,IAAa,CACXO,EAAG+B,EAAO/B,EACVC,EAAG8B,EAAO9B,GACV,GAEJ,CAACR,EAAYa,IAMT4B,EAAU3B,eACbqB,IACC,IAAKhC,EAAWa,UAAYX,EAAcW,QAAS,OAEnDb,EAAWa,SAAU,EAErB,MAAMQ,EAAOW,EAAMC,MAAQ3B,EAAqBO,QAAQT,EAClDmB,EAAMS,EAAME,MAAQ5B,EAAqBO,QAAQR,EAEjD8B,EAASzB,EACbH,EAAkBM,QAAQT,EAAIiB,EAC9Bd,EAAkBM,QAAQR,EAAIkB,GAGhCgB,SAASC,oBAAoB,YAAaT,GAAY,GACtDQ,SAASC,oBAAoB,UAAWF,GAAS,GAEjDN,EAAMK,iBACNL,EAAMI,kBAENrC,IAAY,CACVK,EAAG+B,EAAO/B,EACVC,EAAG8B,EAAO9B,GACV,GAEJ,CAACN,EAAWgC,EAAYrB,IAMpB+B,EAAY9B,eACfqB,IACC,MAaMpB,EAAOoB,EAAMU,cAEnB,IAAK9B,EAAM,OAEX,MAAME,EAjBU,CAAC6B,IACf,IAAI/B,EAAO+B,EACPC,EAAU,EACVC,EAAS,EACb,GAAIjC,EAAKkC,aACP,GACEF,GAAWhC,EAAKmC,WAChBF,GAAUjC,EAAKoC,gBACPpC,EAAOA,EAAKkC,cAExB,MAAO,CAAEzB,KAAMuB,EAASrB,IAAKsB,EAAQ,EAO3BI,CAAQrC,GAEpBZ,EAAWa,SAAU,EAErBD,EAAKsC,MAAMC,OAAS,OAEpBZ,SAASa,iBAAiB,YAAarB,GAAY,GACnDQ,SAASa,iBAAiB,UAAWd,GAAS,GAE9CpC,EAAcW,QAAU,CAAET,EAAGU,EAAIO,KAAMhB,EAAGS,EAAIS,KAC9CpB,EAAOU,QAAQT,EAAI4B,EAAMqB,QACzBlD,EAAOU,QAAQR,EAAI2B,EAAMsB,QACzBhD,EAAqBO,QAAU,CAAET,EAAG4B,EAAMC,MAAO5B,EAAG2B,EAAME,OAC1D3B,EAAkBM,QAAUD,EAAKM,wBAEjCpB,IAAc,CACZM,EAAGG,EAAkBM,QAAQT,EAC7BC,EAAGE,EAAkBM,QAAQR,GAC7B,GAEJ,CAACP,EAAawC,EAASP,IAMnBwB,EAAa5C,eAChBqB,IACC,GAAIrC,EAAY,OAChB,MAAMiB,EAAOoB,EAAMU,cACf9B,IACFA,EAAKsC,MAAMC,OAAS,OACrB,GAEH,CAACxD,IAMG6D,EAAa7C,eAChBqB,IACC,GAAIrC,EAAY,OAChB,MAAMiB,EAAOoB,EAAMU,cACf9B,IACFA,EAAKsC,MAAMC,OAAS,OACrB,GAEH,CAACxD,IAYH,MAAO,CACL8D,eATqB9D,EACnB,CAAE,EACF,CACE+D,YAAajB,EACbkB,aAAcJ,EACdK,aAAcJ,GAMtB"}