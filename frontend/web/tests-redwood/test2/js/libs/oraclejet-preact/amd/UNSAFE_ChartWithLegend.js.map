{"version":3,"file":"UNSAFE_ChartWithLegend.js","sources":["../../src/UNSAFE_ChartWithLegend/ChartWithLegend.tsx","../../src/UNSAFE_ChartWithLegend/utils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Size } from '#utils/UNSAFE_size';\nimport { ComponentChildren } from 'preact';\nimport { getFlexDirection } from './utils';\n\ntype Props = {\n  /**\n   * The sectional legend component.\n   * TODO: maybe include Legend as well if preact customers want it in future.\n   */\n  legend?: ComponentChildren;\n\n  /**\n   * The chart component.\n   */\n  chart: ComponentChildren;\n\n  /**\n   * The position of the legend around the chart.\n   */\n  position: 'start' | 'end' | 'top' | 'bottom';\n\n  /**\n   * The max size of the legend.\n   */\n  maxSize?: Size;\n\n  /**\n   * The size of the legend.\n   */\n  size?: Size;\n\n  /**\n   * Whether the chart is in a right-to-left (RTL) context.\n   */\n  isRtl: boolean;\n};\n\n/**\n * Component responsible for laying out the legend around a chart.\n */\nexport function ChartWithLegend({ chart, legend, position, isRtl }: Props) {\n  const flexDirection = getFlexDirection(position, isRtl);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        width: '100%',\n        height: '100%',\n        flexDirection: flexDirection\n      }}>\n      {chart}\n      {legend}\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport type CategoriesItem = {\n  id: string | number;\n  categories: string[];\n};\n\nexport function getFlexDirection(\n  position: 'start' | 'end' | 'top' | 'bottom',\n  isRtl: boolean\n): 'row' | 'row-reverse' | 'column' | 'column-reverse' {\n  if (position === 'top') {\n    return 'column-reverse';\n  } else if (position === 'bottom') {\n    return 'column';\n  } else if (position === 'start') {\n    return isRtl ? 'row' : 'row-reverse';\n  } else {\n    return isRtl ? 'row-reverse' : 'row';\n  }\n}\n\n/**\n * Returns the flex order of the legend and chart in the flex container.\n * @param legendPos The legend position.\n * @returns\n */\nexport function getFlexOrder(legendPos: 'start' | 'top' | 'bottom' | 'end') {\n  const isLegendFirst = legendPos === 'start' || legendPos === 'top';\n  return {\n    chartOrder: isLegendFirst ? 2 : 1,\n    legendOrder: isLegendFirst ? 1 : 2\n  };\n}\n\n/**\n * Returns the legend flex align and justify prop.\n */\nexport function getLegendFlexProps(legendPos: 'start' | 'end' | 'top' | 'bottom') {\n  let justifyContent: 'center' | 'start' | 'end';\n  let alignItem: 'center' | 'start' | 'end';\n  if (legendPos === 'top') {\n    justifyContent = 'center';\n    alignItem = 'end';\n  } else if (legendPos === 'bottom') {\n    justifyContent = 'center';\n    alignItem = 'start';\n  } else if (legendPos === 'start') {\n    justifyContent = 'end';\n    alignItem = 'center';\n  } else {\n    justifyContent = 'start';\n    alignItem = 'center';\n  }\n\n  return { justifyContent, alignItem };\n}\n"],"names":["chart","legend","position","isRtl","flexDirection","getFlexDirection","_jsxs","jsxs","style","display","width","height","children"],"mappings":"sFAgDM,UAA0BA,MAAEA,EAAKC,OAAEA,EAAMC,SAAEA,EAAQC,MAAEA,IACzD,MAAMC,ECrCQ,SACdF,EACAC,GAEA,MAAiB,QAAbD,EACK,iBACe,WAAbA,EACF,SACe,UAAbA,EACFC,EAAQ,MAAQ,cAEhBA,EAAQ,cAAgB,KAEnC,CDwBwBE,CAAiBH,EAAUC,GACjD,OACEG,EACEC,KAAA,MAAA,CAAAC,MAAO,CACLC,QAAS,OACTC,MAAO,OACPC,OAAQ,OACRP,cAAeA,GAChBQ,SAAA,CACAZ,EACAC,IAGP"}