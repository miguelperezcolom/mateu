define(['exports', './getFormatParse-7ea0c25b', './logger-0f873e29', './calendarDateUtils-dd5b75ee'], (function(e,t,o,r){"use strict";const n="--",i=e=>{if(null==e||!t.isTimeOnlyIsoString(e))return;const o=e.substring(1),[r,n]=o.split("."),[i,s,a]=r.split(":").map((e=>parseInt(e,10)));let l;if(void 0!==n){const e=parseInt(n,10);if(void 0===a)throw new Error("millisecond is set, but second is missing. This is an invalid iso string");l={hour:i,minute:s,second:a,millisecond:e}}else l=void 0!==a?{hour:i,minute:s,second:a}:{hour:i,minute:s};return l},s=(e,t)=>{const{hourPlaceholder:o,minutePlaceholder:r,secondPlaceholder:n,millisecondPlaceholder:i,dayPeriodPlaceholder:s}=u(e);return t.map((e=>{switch(e.type){case"hour":return{...e,value:o};case"minute":return{...e,value:r};case"second":return{...e,value:n};case"millisecond":return{...e,value:i};case"dayPeriod":return{...e,value:s};default:return{...e}}}))},a=new Map,l=(e,t)=>{const o=t.findIndex((e=>"second"===e.type));if(-1===o)return t;const r=`${e}`;let n=a.get(r);n||(n=new Intl.DateTimeFormat(e,{hour:"numeric",minute:"numeric",second:"2-digit",fractionalSecondDigits:3,numberingSystem:"latn"}),a.set(r,n));const i=n.formatToParts(new Date),s=d(i);if(null===s)return t;const l=[{type:"literal",value:s.value},{type:"fractionalSecond",value:"sss"}];return[...t.slice(0,o+1),...l,...t.slice(o+1)]},d=e=>{const t=e.findIndex((e=>"fractionalSecond"===e.type));return t>0&&"literal"===e[t-1].type?e[t-1]:null},u=e=>{const{am:t}=m(e);return e.startsWith("en")?{hourPlaceholder:"hh",minutePlaceholder:"mm",secondPlaceholder:"ss",millisecondPlaceholder:"sss",dayPeriodPlaceholder:t}:{hourPlaceholder:n,minutePlaceholder:n,secondPlaceholder:n,millisecondPlaceholder:"---",dayPeriodPlaceholder:t}},c=(e,t,o)=>{const r=void 0===o?{timeStyle:t,numberingSystem:"latn"}:{timeStyle:t,hour12:o,numberingSystem:"latn"};return new Intl.DateTimeFormat(e,r)},m=e=>({am:p(e,0),pm:p(e,13)}),h=new Map,p=(e="en-US",t)=>{const o="00",r="23",n=t<12?o:r,i=h.get(`${e}-${n}`);if(!i){const t=c(e,"short",!0);return[o,r].forEach((r=>{const n=new Date(`2022-11-30T${r}:00:00`),i=t.formatToParts(n).find((e=>"dayPeriod"===e.type)),s=r===o?"AM":"PM",a=i?i.value:s;h.set(`${e}-${r}`,a)})),h.get(`${e}-${n}`)}return i},f=(e,t,o,n,i)=>{if(r.checkNoCalendarExtension(e),void 0===t.hour||void 0===t.minute||"second"===o&&void 0===t.second||"millisecond"===o&&void 0===t.millisecond)return"";const s=n.some((e=>"dayPeriod"===e.type)),a=s?p(e,t.hour):"",l=s?v(t.hour):t.hour,d=i?g(l,2):l.toString(),u=g(t.minute,2),c=g(t.second,2),m=g(t.millisecond,3);return n.map((({type:e,value:t})=>"hour"===e?d:"minute"===e?u:"second"===e?c:"millisecond"===e?m:"dayPeriod"===e?a:t)).join("")},y=new Map,v=e=>e%12==0?12:e%12,g=(e,t)=>void 0!==e?e.toString().padStart(t,"0"):"",P=e=>e>=0&&e<=999,S=e=>{const t=[];let o="",r="";const n=()=>{""!==o&&(t.push(o),o="")},i=()=>{""!==r&&(t.push(r),r="")};for(let t=0;t<e.length;t++){const s=e[t];"h"===s.toLowerCase()||"m"===s.toLowerCase()||"s"===s.toLowerCase()||"a"===s.toLowerCase()?(i(),o[0]===s?o+=s:(n(),o=s)):(n(),r+=s)}return n(),i(),t},w=e=>e.map((e=>"h"===e.toLowerCase()[0]?{type:"hour",value:"hh"}:"m"===e.toLowerCase()[0]?{type:"minute",value:"mm"}:"s"===e.toLowerCase()[0]?{type:"second",value:"ss"}:"a"===e.toLowerCase()[0]?{type:"dayPeriod",value:"am/pm"}:{type:"literal",value:e}));e.AM_VALUE=0,e.PM_VALUE=12,e.compareTimes=(e,t)=>{if(e.hour!==t.hour)return e.hour-t.hour;if(e.minute!==t.minute)return e.minute-t.minute;const o=e.second??0,r=t.second??0;if(o!==r)return o-r;return(e.millisecond??0)-(t.millisecond??0)},e.displayedTimeSegmentsAreDifferent=(e,t,o)=>{const r=e.filter((e=>"dayPeriod"!==e));for(const e of r){if(t[e]!==o[e])return!0}return!1},e.formatIsoTimeStrAsExample=(e,t,o,r,n)=>{const s=i(e);return void 0===s?"":f(t,s,o,n,r)},e.formatTimeFromMasks=f,e.getAmPmMatchType=(e,t)=>{const o=t.trim().toLowerCase();if(""===o)return"none";const r=e.am.toLowerCase().startsWith(o),n=e.pm.toLowerCase().startsWith(o);return r&&n?"both":r?"am":n?"pm":"none"},e.getAmPmStringsForLocale=m,e.getDayPeriodValueFromHour=e=>e>11?12:0,e.getDayPeriodValueStr=p,e.getHourValueStr=(e,t,o)=>{const r=t?v(e):e;return o?g(r,2):r.toString()},e.getLeadingZeroForHour=e=>{const t=new Date("1995-12-17T09:30:00"),o=`${e}`;let r=y.get(o);if(void 0===r){const n=new Intl.DateTimeFormat(e,{timeStyle:"short",numberingSystem:"latn"}).formatToParts(t).find((e=>"hour"===e.type)),i=n?.value;r=i.startsWith("0"),y.set(o,r)}return r},e.getTimeMasksFromLocaleAndOptions=(e="en-US",t,o)=>{r.checkNoCalendarExtension(e);const n=new Date("2022-11-30T00:00:00"),i=(e=>e.filter((e=>"minute"===e.type||"hour"===e.type||"second"===e.type||"dayPeriod"===e.type||"literal"===e.type)))(c(e,"minute"===t?"short":"medium",o).formatToParts(n));let a;a="millisecond"===t?l(e,i):i;const d=a.map((e=>{switch(e.type){case"fractionalSecond":return{type:"millisecond",value:e.value};case"hour":case"minute":case"second":case"dayPeriod":case"literal":return{...e}}}));return s(e,d)},e.getTimeObjFromTimeOnlyISOStr=i,e.getTimeOnlyISOStrFromTimeObj=e=>{if(void 0===e)return;const{hour:t,minute:o,second:r,millisecond:n}=e;if(void 0===t||void 0===o)return;if(void 0!==n&&!P(n))throw new Error("milliseconds is defined but it is out of range to be a valid iso string value. Must be 0-999.");let i=[t.toString().padStart(2,"0"),o.toString().padStart(2,"0")].join(":");if(void 0!==r){if(i+=":"+r.toString().padStart(2,"0"),void 0!==n){const e=n.toString().padStart(3,"0");e&&(i+="."+e)}}return`T${i}`},e.getTimePlaceholdersFromPattern=e=>{const t=S(e);return w(t)},e.hasSegmentsNotDisplayed=(e,t)=>{if(void 0===t)return!1;const o=e.filter((e=>"dayPeriod"!==e));return Object.keys(t).some((e=>("hour"===e||"minute"===e||"second"===e||"millisecond"===e)&&!o.includes(e)))},e.padWithZero=g,e.replaceCustomMasksValuesWithPlaceholders=s,e.timesAreDifferent=(e,t)=>{const o=e=>!e||void 0===e.hour&&void 0===e.minute&&void 0===e.second&&void 0===e.millisecond;return(!o(e)||!o(t))&&(o(e)!==o(t)||(e?.hour!==t?.hour||e?.minute!==t?.minute||e?.second!==t?.second||e?.millisecond!==t?.millisecond))}}));
//# sourceMappingURL=timeUtils-3cb03b2f.js.map
