{"version":3,"file":"dndUtils-2c4de4a4.js","sources":["../../src/utils/PRIVATE_visTestUtils/dndUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { fireEvent } from '@testing-library/preact';\nimport { expect } from 'chai';\n\ntype Callback = {\n  startCalled: boolean;\n  enterCalled: boolean;\n  overCalled: boolean;\n  dropCalled: boolean;\n  dragDetailCorrect: boolean;\n  dropDetailCorrect: boolean;\n};\n\nexport function getDndCallbacks(\n  callbacks: Callback,\n  dragStartCallback: (detail: any) => void,\n  dropCallback: (detail: any) => boolean\n) {\n  return {\n    onDragStart: (detail: any) => {\n      callbacks.startCalled = true;\n      dragStartCallback(detail);\n    },\n    onDragEnter: (detail: any) => {\n      if (detail.event) {\n        callbacks.enterCalled = true;\n        detail.event.preventDefault();\n      }\n    },\n    onDragOver: (detail: any) => {\n      callbacks.overCalled = true;\n      const accept = dropCallback(detail);\n      if (accept) detail.event.preventDefault();\n    },\n    onDrop: (detail: any) => {\n      callbacks.dropCalled = true;\n      dropCallback(detail);\n    }\n  };\n}\n\nexport function testDnd(\n  dragTarget: Element,\n  dropTarget: Element,\n  feedbackTarget: Element,\n  callbacks: Callback,\n  isSVG: boolean,\n  dropOptions?: any,\n  rejected?: boolean\n) {\n  fireEvent.dragStart(dragTarget);\n  fireEvent.dragEnter(dropTarget, dropOptions);\n  fireEvent.dragOver(dropTarget, dropOptions);\n  const styles = window.getComputedStyle(feedbackTarget);\n  const fill = styles.getPropertyValue(isSVG ? 'fill' : 'background-color');\n  expect(fill).to.be.equal(rejected ? 'rgba(0, 0, 0, 0)' : 'rgb(208, 229, 238)');\n  const cursor = styles.getPropertyValue('cursor');\n  expect(cursor).to.be.equal(rejected ? 'no-drop' : 'auto');\n  fireEvent.drop(dropTarget, dropOptions);\n  expect(callbacks.dragDetailCorrect).to.be.true;\n  expect(callbacks.startCalled).to.be.true;\n  expect(callbacks.enterCalled).to.be.true;\n  expect(callbacks.overCalled).to.be.true;\n  expect(callbacks.dropCalled).to.be.true;\n  if (rejected) {\n    expect(callbacks.dropDetailCorrect).to.be.false;\n  } else {\n    expect(callbacks.dropDetailCorrect).to.be.true;\n  }\n}\n"],"names":["callbacks","dragStartCallback","dropCallback","onDragStart","detail","startCalled","onDragEnter","event","enterCalled","preventDefault","onDragOver","overCalled","onDrop","dropCalled","dragTarget","dropTarget","feedbackTarget","isSVG","dropOptions","rejected","fireEvent","dragStart","dragEnter","dragOver","styles","window","getComputedStyle","fill","getPropertyValue","expect","to","be","equal","cursor","drop","dragDetailCorrect","true","dropDetailCorrect","false"],"mappings":"6GAqBEA,EACAC,EACAC,GAEA,MAAO,CACLC,YAAcC,IACZJ,EAAUK,aAAc,EACxBJ,EAAkBG,EAAO,EAE3BE,YAAcF,IACRA,EAAOG,QACTP,EAAUQ,aAAc,EACxBJ,EAAOG,MAAME,iBACd,EAEHC,WAAaN,IACXJ,EAAUW,YAAa,EACRT,EAAaE,IAChBA,EAAOG,MAAME,gBAAgB,EAE3CG,OAASR,IACPJ,EAAUa,YAAa,EACvBX,EAAaE,EAAO,EAG1B,YAEgB,SACdU,EACAC,EACAC,EACAhB,EACAiB,EACAC,EACAC,GAEAC,YAAUC,UAAUP,GACpBM,EAAAA,UAAUE,UAAUP,EAAYG,GAChCE,EAAAA,UAAUG,SAASR,EAAYG,GAC/B,MAAMM,EAASC,OAAOC,iBAAiBV,GACjCW,EAAOH,EAAOI,iBAAiBX,EAAQ,OAAS,oBACtDY,SAAOF,GAAMG,GAAGC,GAAGC,MAAMb,EAAW,mBAAqB,sBACzD,MAAMc,EAAST,EAAOI,iBAAiB,UACvCC,SAAOI,GAAQH,GAAGC,GAAGC,MAAMb,EAAW,UAAY,QAClDC,EAAAA,UAAUc,KAAKnB,EAAYG,GAC3BW,EAAMA,OAAC7B,EAAUmC,mBAAmBL,GAAGC,GAAGK,KAC1CP,EAAMA,OAAC7B,EAAUK,aAAayB,GAAGC,GAAGK,KACpCP,EAAMA,OAAC7B,EAAUQ,aAAasB,GAAGC,GAAGK,KACpCP,EAAMA,OAAC7B,EAAUW,YAAYmB,GAAGC,GAAGK,KACnCP,EAAMA,OAAC7B,EAAUa,YAAYiB,GAAGC,GAAGK,KAC/BjB,EACFU,EAAMA,OAAC7B,EAAUqC,mBAAmBP,GAAGC,GAAGO,MAE1CT,EAAMA,OAAC7B,EAAUqC,mBAAmBP,GAAGC,GAAGK,IAE9C"}